

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Apr 13 13:32:05 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    93  0000                     
    94                           ; Version 2.35
    95                           ; Generated 05/05/2021 GMT
    96                           ; 
    97                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F47K40 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     
   130                           	psect	idataBANK0
   131  0038A4                     __pidataBANK0:
   132                           	callstack 0
   133                           
   134                           ;initializer for _VDDinv
   135  0038A4  2007               	dw	8199
   136  0038A6  3A80               	dw	14976
   137                           
   138                           ;initializer for _HumLimit
   139  0038A8  0046               	dw	70
   140                           
   141                           ;initializer for _TempLimit
   142  0038AA  0019               	dw	25
   143                           
   144                           ;initializer for _Percent
   145  0038AC  25                 	db	37
   146                           
   147                           ;initializer for _Degree
   148  0038AD  DF                 	db	223
   149                           
   150                           ;initializer for _HumSelect
   151  0038AE  14                 	db	20
   152                           
   153                           ;initializer for _TempSelect
   154  0038AF  1B                 	db	27
   155                           
   156                           ;initializer for _CalcFlag
   157  0038B0  01                 	db	1
   158                           
   159                           	psect	idataBANK2
   160  002DE8                     __pidataBANK2:
   161                           	callstack 0
   162                           
   163                           ;initializer for _sine
   164  002DE8  001A               	dw	26
   165  002DEA  001B               	dw	27
   166  002DEC  001D               	dw	29
   167  002DEE  001E               	dw	30
   168  002DF0  0020               	dw	32
   169  002DF2  0021               	dw	33
   170  002DF4  0023               	dw	35
   171  002DF6  0024               	dw	36
   172  002DF8  0026               	dw	38
   173  002DFA  0027               	dw	39
   174  002DFC  0028               	dw	40
   175  002DFE  002A               	dw	42
   176  002E00  002B               	dw	43
   177  002E02  002C               	dw	44
   178  002E04  002D               	dw	45
   179  002E06  002E               	dw	46
   180  002E08  002F               	dw	47
   181  002E0A  0030               	dw	48
   182  002E0C  0031               	dw	49
   183  002E0E  0031               	dw	49
   184  002E10  0032               	dw	50
   185  002E12  0032               	dw	50
   186  002E14  0033               	dw	51
   187  002E16  0033               	dw	51
   188  002E18  0033               	dw	51
   189  002E1A  0033               	dw	51
   190  002E1C  0033               	dw	51
   191  002E1E  0033               	dw	51
   192  002E20  0033               	dw	51
   193  002E22  0032               	dw	50
   194  002E24  0032               	dw	50
   195  002E26  0031               	dw	49
   196  002E28  0031               	dw	49
   197  002E2A  0030               	dw	48
   198  002E2C  002F               	dw	47
   199  002E2E  002E               	dw	46
   200  002E30  002D               	dw	45
   201  002E32  002C               	dw	44
   202  002E34  002B               	dw	43
   203  002E36  002A               	dw	42
   204  002E38  0028               	dw	40
   205  002E3A  0027               	dw	39
   206  002E3C  0026               	dw	38
   207  002E3E  0024               	dw	36
   208  002E40  0023               	dw	35
   209  002E42  0021               	dw	33
   210  002E44  0020               	dw	32
   211  002E46  001E               	dw	30
   212  002E48  001D               	dw	29
   213  002E4A  001B               	dw	27
   214  002E4C  001A               	dw	26
   215  002E4E  0018               	dw	24
   216  002E50  0016               	dw	22
   217  002E52  0015               	dw	21
   218  002E54  0013               	dw	19
   219  002E56  0012               	dw	18
   220  002E58  0010               	dw	16
   221  002E5A  000F               	dw	15
   222  002E5C  000D               	dw	13
   223  002E5E  000C               	dw	12
   224  002E60  000B               	dw	11
   225  002E62  0009               	dw	9
   226  002E64  0008               	dw	8
   227  002E66  0007               	dw	7
   228  002E68  0006               	dw	6
   229  002E6A  0005               	dw	5
   230  002E6C  0004               	dw	4
   231  002E6E  0003               	dw	3
   232  002E70  0002               	dw	2
   233  002E72  0002               	dw	2
   234  002E74  0001               	dw	1
   235  002E76  0001               	dw	1
   236  002E78  0000               	dw	0
   237  002E7A  0000               	dw	0
   238  002E7C  0000               	dw	0
   239  002E7E  0000               	dw	0
   240  002E80  0000               	dw	0
   241  002E82  0000               	dw	0
   242  002E84  0000               	dw	0
   243  002E86  0001               	dw	1
   244  002E88  0001               	dw	1
   245  002E8A  0002               	dw	2
   246  002E8C  0002               	dw	2
   247  002E8E  0003               	dw	3
   248  002E90  0004               	dw	4
   249  002E92  0005               	dw	5
   250  002E94  0006               	dw	6
   251  002E96  0007               	dw	7
   252  002E98  0008               	dw	8
   253  002E9A  0009               	dw	9
   254  002E9C  000B               	dw	11
   255  002E9E  000C               	dw	12
   256  002EA0  000D               	dw	13
   257  002EA2  000F               	dw	15
   258  002EA4  0010               	dw	16
   259  002EA6  0012               	dw	18
   260  002EA8  0013               	dw	19
   261  002EAA  0015               	dw	21
   262  002EAC  0016               	dw	22
   263  002EAE  0018               	dw	24
   264                           
   265                           	psect	smallconst
   266  000F00                     __psmallconst:
   267                           	callstack 0
   268  000F00  00                 	db	0
   269  000F01                     _spi1_configuration:
   270                           	callstack 0
   271  000F01  00                 	db	0
   272  000F02  40                 	db	64
   273  000F03  01                 	db	1
   274  000F04  00                 	db	0
   275  000F05                     __end_of_spi1_configuration:
   276                           	callstack 0
   277  0000                     _T2CON	set	4029
   278  0000                     _T1CON	set	4047
   279  0000                     _T1CLK	set	4050
   280  0000                     _T1GATE	set	4049
   281  0000                     _ADERRL	set	3950
   282  0000                     _ADERRH	set	3951
   283  0000                     _ADPREVL	set	3937
   284  0000                     _ADPREVH	set	3938
   285  0000                     _ADFLTRL	set	3954
   286  0000                     _ADFLTRH	set	3955
   287  0000                     _ADACCL	set	3952
   288  0000                     _ADACCH	set	3953
   289  0000                     _ADCNT	set	3943
   290  0000                     _ADRESL	set	3939
   291  0000                     _ADRESH	set	3940
   292  0000                     _ADACQ	set	3932
   293  0000                     _ADCON0	set	3936
   294  0000                     _ADCLK	set	3927
   295  0000                     _ADSTAT	set	3941
   296  0000                     _ADCON3	set	3931
   297  0000                     _ADCON2	set	3930
   298  0000                     _ADPRE	set	3934
   299  0000                     _ADSTPTH	set	3945
   300  0000                     _ADUTHH	set	3949
   301  0000                     _ADUTHL	set	3948
   302  0000                     _ADLTHH	set	3947
   303  0000                     _OSCTUNE	set	3805
   304  0000                     _OSCFRQ	set	3806
   305  0000                     _T0CON0	set	4053
   306  0000                     _IOCCPbits	set	3868
   307  0000                     _IOCCNbits	set	3867
   308  0000                     _IOCCFbits	set	3866
   309  0000                     _INLVLD	set	3874
   310  0000                     _INLVLC	set	3869
   311  0000                     _SLRCOND	set	3875
   312  0000                     _SLRCONC	set	3870
   313  0000                     _ODCOND	set	3876
   314  0000                     _ODCONC	set	3871
   315  0000                     _WPUC	set	3872
   316  0000                     _WPUD	set	3877
   317  0000                     _TRISD	set	3979
   318  0000                     _TRISC	set	3978
   319  0000                     _TRISB	set	3977
   320  0000                     _TRISA	set	3976
   321  0000                     _TRISE	set	3980
   322  0000                     _LATC	set	3973
   323  0000                     _LATB	set	3972
   324  000F05                     STR_1:
   325  000F05  54                 	db	84	;'T'
   326  000F06  3A                 	db	58	;':'
   327  000F07  25                 	db	37
   328  000F08  33                 	db	51	;'3'
   329  000F09  64                 	db	100	;'d'
   330  000F0A  25                 	db	37
   331  000F0B  63                 	db	99	;'c'
   332  000F0C  43                 	db	67	;'C'
   333  000F0D  20                 	db	32
   334  000F0E  20                 	db	32
   335  000F0F  52                 	db	82	;'R'
   336  000F10  48                 	db	72	;'H'
   337  000F11  3A                 	db	58	;':'
   338  000F12  25                 	db	37
   339  000F13  33                 	db	51	;'3'
   340  000F14  64                 	db	100	;'d'
   341  000F15  25                 	db	37
   342  000F16  63                 	db	99	;'c'
   343  000F17  20                 	db	32
   344  000F18  20                 	db	32
   345  000F19  20                 	db	32
   346  000F1A  20                 	db	32
   347  000F1B  20                 	db	32
   348  000F1C  20                 	db	32
   349  000F1D  20                 	db	32
   350  000F1E  20                 	db	32
   351  000F1F  20                 	db	32
   352  000F20  20                 	db	32
   353  000F21  20                 	db	32
   354  000F22  20                 	db	32
   355  000F23  20                 	db	32
   356  000F24  20                 	db	32
   357  000F25  20                 	db	32
   358  000F26  20                 	db	32
   359  000F27  20                 	db	32
   360  000F28  20                 	db	32
   361  000F29  20                 	db	32
   362  000F2A  20                 	db	32
   363  000F2B  20                 	db	32
   364  000F2C  20                 	db	32
   365  000F2D  20                 	db	32
   366  000F2E  20                 	db	32
   367  000F2F  54                 	db	84	;'T'
   368  000F30  4C                 	db	76	;'L'
   369  000F31  3A                 	db	58	;':'
   370  000F32  25                 	db	37
   371  000F33  33                 	db	51	;'3'
   372  000F34  64                 	db	100	;'d'
   373  000F35  25                 	db	37
   374  000F36  63                 	db	99	;'c'
   375  000F37  43                 	db	67	;'C'
   376  000F38  52                 	db	82	;'R'
   377  000F39  48                 	db	72	;'H'
   378  000F3A  4C                 	db	76	;'L'
   379  000F3B  3A                 	db	58	;':'
   380  000F3C  25                 	db	37
   381  000F3D  33                 	db	51	;'3'
   382  000F3E  64                 	db	100	;'d'
   383  000F3F  25                 	db	37
   384  000F40  63                 	db	99	;'c'
   385  000F41  00                 	db	0
   386  000F42  00                 	db	0	; dummy byte at the end
   387  0000                     
   388                           	psect	nvCOMRAM
   389  000054                     __pnvCOMRAM:
   390                           	callstack 0
   391  000054                     _timer0ReloadVal16bit:
   392                           	callstack 0
   393  000054                     	ds	2
   394                           
   395                           	psect	nvBANK0
   396  0000D0                     __pnvBANK0:
   397                           	callstack 0
   398  0000D0                     _TMR2_InterruptHandler:
   399                           	callstack 0
   400  0000D0                     	ds	3
   401  0000D3                     _TMR1_InterruptHandler:
   402                           	callstack 0
   403  0000D3                     	ds	3
   404  0000D6                     _ADCC_ADI_InterruptHandler:
   405                           	callstack 0
   406  0000D6                     	ds	3
   407  0000D9                     _TMR0_InterruptHandler:
   408                           	callstack 0
   409  0000D9                     	ds	3
   410  0000DC                     _IOCCF3_InterruptHandler:
   411                           	callstack 0
   412  0000DC                     	ds	3
   413  0000DF                     _IOCCF2_InterruptHandler:
   414                           	callstack 0
   415  0000DF                     	ds	3
   416  0000E2                     _IOCCF1_InterruptHandler:
   417                           	callstack 0
   418  0000E2                     	ds	3
   419  0000E5                     _IOCCF0_InterruptHandler:
   420                           	callstack 0
   421  0000E5                     	ds	3
   422  0000E8                     _timer1ReloadVal:
   423                           	callstack 0
   424  0000E8                     	ds	2
   425  0000                     _ADCON1bits	set	3929
   426  0000                     _ADCON2bits	set	3930
   427  0000                     _ADCON3bits	set	3931
   428  0000                     _PORTC	set	3983
   429  0000                     _PR2	set	4028
   430  0000                     _TMR2	set	4027
   431  0000                     _T2CONbits	set	4029
   432  0000                     _T2RSTbits	set	4032
   433  0000                     _T2HLTbits	set	4030
   434  0000                     _T1GCONbits	set	4048
   435  0000                     _T1CONbits	set	4047
   436  0000                     _ADSTATbits	set	3941
   437  0000                     _ADCON0bits	set	3936
   438  0000                     _SSP1CON1bits	set	3990
   439  0000                     _TRISBbits	set	3977
   440  0000                     _T0CON0bits	set	4053
   441  0000                     _T0CKIPPS	set	3748
   442  0000                     _SSP1CLKPPS	set	3767
   443  0000                     _PIE0bits	set	3778
   444  0000                     _INLVLA	set	3853
   445  0000                     _SLRCONA	set	3854
   446  0000                     _ODCONA	set	3855
   447  0000                     _WPUA	set	3856
   448  0000                     _ANSELA	set	3857
   449  0000                     _ANSELB	set	3865
   450  0000                     _ANSELC	set	3873
   451  0000                     _ANSELD	set	3878
   452  0000                     _LATA	set	3971
   453  0000                     _LATD	set	3974
   454  0000                     _LATE	set	3975
   455  0000                     _PORTB	set	3982
   456  0000                     _PORTCbits	set	3983
   457  0000                     _SSP1BUF	set	3986
   458  0000                     _SSP1ADD	set	3987
   459  0000                     _SSP1STAT	set	3989
   460  0000                     _TMR0L	set	4051
   461  0000                     _TMR0H	set	4052
   462  0000                     _T0CON1	set	4054
   463  0000                     _INLVLE	set	3882
   464  0000                     _SLRCONE	set	3883
   465  0000                     _ODCONE	set	3884
   466  0000                     _WPUE	set	3885
   467  0000                     _ANSELE	set	3886
   468  0000                     _ADACT	set	3926
   469  0000                     _ADREF	set	3928
   470  0000                     _ADCON1	set	3929
   471  0000                     _ADCAP	set	3933
   472  0000                     _ADPCH	set	3935
   473  0000                     _ADRPT	set	3942
   474  0000                     _ADSTPTL	set	3944
   475  0000                     _ADLTHL	set	3946
   476  0000                     _INLVLB	set	3861
   477  0000                     _SLRCONB	set	3862
   478  0000                     _ODCONB	set	3863
   479  0000                     _WPUB	set	3864
   480  0000                     _PIE4bits	set	3782
   481  0000                     _PIE1bits	set	3779
   482  0000                     _PIR0bits	set	3786
   483  0000                     _RB5PPS	set	3828
   484  0000                     _SSP1DATPPS	set	3768
   485  0000                     _INTCONbits	set	4082
   486  0000                     _PIR1bits	set	3787
   487  0000                     _PIR3bits	set	3789
   488  0000                     _OSCCON1	set	3800
   489  0000                     _OSCCON3	set	3802
   490  0000                     _OSCEN	set	3804
   491  0000                     _PMD0	set	3809
   492  0000                     _PMD5	set	3814
   493  0000                     _PMD4	set	3813
   494  0000                     _PMD3	set	3812
   495  0000                     _PMD2	set	3811
   496  0000                     _PMD1	set	3810
   497  0000                     _T2TMR	set	4027
   498  0000                     _T2PR	set	4028
   499  0000                     _T2HLT	set	4030
   500  0000                     _T2CLKCON	set	4031
   501  0000                     _TMR1L	set	4045
   502  0000                     _TMR1H	set	4046
   503  0000                     _T1GCON	set	4048
   504  0000                     _SSP1CON2	set	3991
   505  0000                     _SSP1CON1	set	3990
   506  0000                     _PIR4bits	set	3790
   507  0000                     _T2RST	set	4032
   508                           
   509                           ; #config settings
   510                           
   511                           	psect	cinit
   512  0030B8                     __pcinit:
   513                           	callstack 0
   514  0030B8                     start_initialization:
   515                           	callstack 0
   516  0030B8                     __initialization:
   517                           	callstack 0
   518                           
   519                           ; Initialize objects allocated to BANK2 (200 bytes)
   520                           ; load TBLPTR registers with __pidataBANK2
   521  0030B8  0EE8               	movlw	low __pidataBANK2
   522  0030BA  6EF6               	movwf	tblptrl,c
   523  0030BC  0E2D               	movlw	high __pidataBANK2
   524  0030BE  6EF7               	movwf	tblptrh,c
   525  0030C0  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   526  0030C2  6EF8               	movwf	tblptru,c
   527  0030C4  EE02  F000         	lfsr	0,__pdataBANK2
   528  0030C8  EE10 F0C8          	lfsr	1,200
   529  0030CC                     copy_data0:
   530  0030CC  0009               	tblrd		*+
   531  0030CE  CFF5 FFEE          	movff	tablat,postinc0
   532  0030D2  50E5               	movf	postdec1,w,c
   533  0030D4  50E1               	movf	fsr1l,w,c
   534  0030D6  E1FA               	bnz	copy_data0
   535                           
   536                           ; Initialize objects allocated to BANK0 (13 bytes)
   537                           ; load TBLPTR registers with __pidataBANK0
   538  0030D8  0EA4               	movlw	low __pidataBANK0
   539  0030DA  6EF6               	movwf	tblptrl,c
   540  0030DC  0E38               	movlw	high __pidataBANK0
   541  0030DE  6EF7               	movwf	tblptrh,c
   542  0030E0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   543  0030E2  6EF8               	movwf	tblptru,c
   544  0030E4  EE00  F0EA         	lfsr	0,__pdataBANK0
   545  0030E8  EE10 F00D          	lfsr	1,13
   546  0030EC                     copy_data1:
   547  0030EC  0009               	tblrd		*+
   548  0030EE  CFF5 FFEE          	movff	tablat,postinc0
   549  0030F2  50E5               	movf	postdec1,w,c
   550  0030F4  50E1               	movf	fsr1l,w,c
   551  0030F6  E1FA               	bnz	copy_data1
   552                           
   553                           ; Clear objects allocated to BANK1 (64 bytes)
   554  0030F8  EE01  F000         	lfsr	0,__pbssBANK1
   555  0030FC  0E40               	movlw	64
   556  0030FE                     clear_0:
   557  0030FE  6AEE               	clrf	postinc0,c
   558  003100  06E8               	decf	wreg,f,c
   559  003102  E1FD               	bnz	clear_0
   560                           
   561                           ; Clear objects allocated to BANK0 (54 bytes)
   562  003104  EE00  F09A         	lfsr	0,__pbssBANK0
   563  003108  0E36               	movlw	54
   564  00310A                     clear_1:
   565  00310A  6AEE               	clrf	postinc0,c
   566  00310C  06E8               	decf	wreg,f,c
   567  00310E  E1FD               	bnz	clear_1
   568                           
   569                           ; Clear objects allocated to COMRAM (4 bytes)
   570  003110  6A53               	clrf	(__pbssCOMRAM+3)& (0+255),c
   571  003112  6A52               	clrf	(__pbssCOMRAM+2)& (0+255),c
   572  003114  6A51               	clrf	(__pbssCOMRAM+1)& (0+255),c
   573  003116  6A50               	clrf	__pbssCOMRAM& (0+255),c
   574  003118                     end_of_initialization:
   575                           	callstack 0
   576  003118                     __end_of__initialization:
   577                           	callstack 0
   578  003118  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   579  00311A  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   580  00311C  0100               	movlb	0
   581  00311E  EF17  F00C         	goto	_main	;jump to C main() function
   582                           
   583                           	psect	bssCOMRAM
   584  000050                     __pbssCOMRAM:
   585                           	callstack 0
   586  000050                     _width:
   587                           	callstack 0
   588  000050                     	ds	2
   589  000052                     _flags:
   590                           	callstack 0
   591  000052                     	ds	2
   592                           
   593                           	psect	bssBANK0
   594  00009A                     __pbssBANK0:
   595                           	callstack 0
   596  00009A                     _HumLimitChar:
   597                           	callstack 0
   598  00009A                     	ds	3
   599  00009D                     _TempLimitChar:
   600                           	callstack 0
   601  00009D                     	ds	3
   602  0000A0                     _HumChar:
   603                           	callstack 0
   604  0000A0                     	ds	3
   605  0000A3                     _TempChar:
   606                           	callstack 0
   607  0000A3                     	ds	3
   608  0000A6                     _nout:
   609                           	callstack 0
   610  0000A6                     	ds	2
   611  0000A8                     _prec:
   612                           	callstack 0
   613  0000A8                     	ds	2
   614  0000AA                     _HumRH:
   615                           	callstack 0
   616  0000AA                     	ds	2
   617  0000AC                     _TempC:
   618                           	callstack 0
   619  0000AC                     	ds	2
   620  0000AE                     _TempOrHum:
   621                           	callstack 0
   622  0000AE                     	ds	1
   623  0000AF                     _Tim1Flag:
   624                           	callstack 0
   625  0000AF                     	ds	1
   626  0000B0                     _Tim2Flag:
   627                           	callstack 0
   628  0000B0                     	ds	1
   629  0000B1                     _ADCFlag:
   630                           	callstack 0
   631  0000B1                     	ds	1
   632  0000B2                     _PBFlag:
   633                           	callstack 0
   634  0000B2                     	ds	1
   635  0000B3                     _Tim0Flag:
   636                           	callstack 0
   637  0000B3                     	ds	1
   638  0000B4                     LCD_WriteData@buffer:
   639                           	callstack 0
   640  0000B4                     	ds	8
   641  0000BC                     LCD_WriteString@buffer:
   642                           	callstack 0
   643  0000BC                     	ds	8
   644  0000C4                     LCD_WriteCMD@buffer:
   645                           	callstack 0
   646  0000C4                     	ds	8
   647  0000CC                     _HumData:
   648                           	callstack 0
   649  0000CC                     	ds	2
   650  0000CE                     _TempData:
   651                           	callstack 0
   652  0000CE                     	ds	2
   653                           
   654                           	psect	dataBANK0
   655  0000EA                     __pdataBANK0:
   656                           	callstack 0
   657  0000EA                     _VDDinv:
   658                           	callstack 0
   659  0000EA                     	ds	4
   660  0000EE                     _HumLimit:
   661                           	callstack 0
   662  0000EE                     	ds	2
   663  0000F0                     _TempLimit:
   664                           	callstack 0
   665  0000F0                     	ds	2
   666  0000F2                     _Percent:
   667                           	callstack 0
   668  0000F2                     	ds	1
   669  0000F3                     _Degree:
   670                           	callstack 0
   671  0000F3                     	ds	1
   672  0000F4                     _HumSelect:
   673                           	callstack 0
   674  0000F4                     	ds	1
   675  0000F5                     _TempSelect:
   676                           	callstack 0
   677  0000F5                     	ds	1
   678  0000F6                     _CalcFlag:
   679                           	callstack 0
   680  0000F6                     	ds	1
   681                           
   682                           	psect	bssBANK1
   683  000100                     __pbssBANK1:
   684                           	callstack 0
   685  000100                     _dbuf:
   686                           	callstack 0
   687  000100                     	ds	32
   688  000120                     _LCDout:
   689                           	callstack 0
   690  000120                     	ds	32
   691                           
   692                           	psect	dataBANK2
   693  000200                     __pdataBANK2:
   694                           	callstack 0
   695  000200                     _sine:
   696                           	callstack 0
   697  000200                     	ds	200
   698                           
   699                           	psect	cstackBANK0
   700  000060                     __pcstackBANK0:
   701                           	callstack 0
   702  000060                     vfpfcnvrt@ll:
   703                           	callstack 0
   704                           
   705                           ; 8 bytes @ 0x0
   706  000060                     	ds	8
   707  000068                     vfpfcnvrt@c:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x8
   711  000068                     	ds	1
   712  000069                     ?_vfprintf:
   713                           	callstack 0
   714  000069                     vfprintf@fp:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x9
   718  000069                     	ds	2
   719  00006B                     vfprintf@fmt:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0xB
   723  00006B                     	ds	2
   724  00006D                     vfprintf@ap:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0xD
   728  00006D                     	ds	2
   729  00006F                     ?_sprintf:
   730                           	callstack 0
   731  00006F                     sprintf@s:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0xF
   735  00006F                     	ds	2
   736  000071                     sprintf@fmt:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x11
   740  000071                     	ds	18
   741  000083                     sprintf@ap:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x23
   745  000083                     	ds	2
   746  000085                     sprintf@f:
   747                           	callstack 0
   748                           
   749                           ; 11 bytes @ 0x25
   750  000085                     	ds	11
   751  000090                     _main$2800:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x30
   755  000090                     	ds	4
   756  000094                     main@lcd:
   757                           	callstack 0
   758                           
   759                           ; 6 bytes @ 0x34
   760  000094                     	ds	6
   761                           
   762                           	psect	cstackCOMRAM
   763  000001                     __pcstackCOMRAM:
   764                           	callstack 0
   765  000001                     TMR1_WriteTimer@timerVal:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x0
   769  000001                     	ds	2
   770  000003                     ??_INTERRUPT_InterruptManager:
   771  000003                     
   772                           ; 1 bytes @ 0x2
   773  000003                     	ds	2
   774  000005                     ??_writeLCD:
   775  000005                     ?_strlen:
   776                           	callstack 0
   777  000005                     ?_isdigit:
   778                           	callstack 0
   779  000005                     ?_isspace:
   780                           	callstack 0
   781  000005                     ?_ADCC_GetConversionResult:
   782                           	callstack 0
   783  000005                     ?___wmul:
   784                           	callstack 0
   785  000005                     ?___xxtofl:
   786                           	callstack 0
   787  000005                     ?___aodiv:
   788                           	callstack 0
   789  000005                     ?___aomod:
   790                           	callstack 0
   791  000005                     ADCC_StartConversion@channel:
   792                           	callstack 0
   793  000005                     LCD_MakeCMD@buffer:
   794                           	callstack 0
   795  000005                     LCD_MakeData@buffer:
   796                           	callstack 0
   797  000005                     ___wmul@multiplier:
   798                           	callstack 0
   799  000005                     isdigit@c:
   800                           	callstack 0
   801  000005                     isspace@c:
   802                           	callstack 0
   803  000005                     fputc@c:
   804                           	callstack 0
   805  000005                     strlen@s:
   806                           	callstack 0
   807  000005                     IOCCF0_SetInterruptHandler@InterruptHandler:
   808                           	callstack 0
   809  000005                     IOCCF1_SetInterruptHandler@InterruptHandler:
   810                           	callstack 0
   811  000005                     IOCCF2_SetInterruptHandler@InterruptHandler:
   812                           	callstack 0
   813  000005                     IOCCF3_SetInterruptHandler@InterruptHandler:
   814                           	callstack 0
   815  000005                     TMR0_SetInterruptHandler@InterruptHandler:
   816                           	callstack 0
   817  000005                     ADCC_SetADIInterruptHandler@InterruptHandler:
   818                           	callstack 0
   819  000005                     TMR1_SetInterruptHandler@InterruptHandler:
   820                           	callstack 0
   821  000005                     TMR2_SetInterruptHandler@InterruptHandler:
   822                           	callstack 0
   823  000005                     delayUS@usec:
   824                           	callstack 0
   825  000005                     ___xxtofl@val:
   826                           	callstack 0
   827  000005                     ___aodiv@dividend:
   828                           	callstack 0
   829  000005                     ___aomod@dividend:
   830                           	callstack 0
   831                           
   832                           ; 8 bytes @ 0x4
   833  000005                     	ds	2
   834  000007                     ??_isdigit:
   835  000007                     ??_isspace:
   836  000007                     ??_ADCC_GetConversionResult:
   837  000007                     writeLCD@bitfield:
   838                           	callstack 0
   839  000007                     LCD_MakeCMD@data:
   840                           	callstack 0
   841  000007                     LCD_MakeData@data:
   842                           	callstack 0
   843  000007                     ___wmul@multiplicand:
   844                           	callstack 0
   845  000007                     fputc@fp:
   846                           	callstack 0
   847  000007                     strlen@a:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x6
   851  000007                     	ds	1
   852  000008                     ??_TMR1_Initialize:
   853  000008                     ??_TMR0_Initialize:
   854                           
   855                           ; 1 bytes @ 0x7
   856  000008                     	ds	1
   857  000009                     ??_LCD_MakeCMD:
   858  000009                     ??_LCD_MakeData:
   859  000009                     ??_fputc:
   860  000009                     ??___xxtofl:
   861  000009                     ___wmul@product:
   862                           	callstack 0
   863  000009                     delayUS@i:
   864                           	callstack 0
   865                           
   866                           ; 4 bytes @ 0x8
   867  000009                     	ds	1
   868  00000A                     
   869                           ; 1 bytes @ 0x9
   870  00000A                     	ds	1
   871  00000B                     _isspace$2381:
   872                           	callstack 0
   873                           
   874                           ; 1 bytes @ 0xA
   875  00000B                     	ds	1
   876  00000C                     ?_atoi:
   877                           	callstack 0
   878  00000C                     atoi@s:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0xB
   882  00000C                     	ds	1
   883  00000D                     ___xxtofl@sign:
   884                           	callstack 0
   885  00000D                     LCD_SendBytes@buffer:
   886                           	callstack 0
   887  00000D                     ___aodiv@divisor:
   888                           	callstack 0
   889  00000D                     ___aomod@divisor:
   890                           	callstack 0
   891                           
   892                           ; 8 bytes @ 0xC
   893  00000D                     	ds	1
   894  00000E                     ??_atoi:
   895  00000E                     ?_ctoa:
   896                           	callstack 0
   897  00000E                     ___xxtofl@exp:
   898                           	callstack 0
   899  00000E                     ctoa@fp:
   900                           	callstack 0
   901  00000E                     fputs@s:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0xD
   905  00000E                     	ds	1
   906  00000F                     ___xxtofl@arg:
   907                           	callstack 0
   908  00000F                     LCD_SendBytes@lcd:
   909                           	callstack 0
   910                           
   911                           ; 6 bytes @ 0xE
   912  00000F                     	ds	1
   913  000010                     ctoa@c:
   914                           	callstack 0
   915  000010                     fputs@fp:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0xF
   919  000010                     	ds	1
   920  000011                     ??_ctoa:
   921                           
   922                           ; 1 bytes @ 0x10
   923  000011                     	ds	1
   924  000012                     fputs@c:
   925                           	callstack 0
   926  000012                     ctoa@l:
   927                           	callstack 0
   928  000012                     atoi@neg:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x11
   932  000012                     	ds	1
   933  000013                     ?___flmul:
   934                           	callstack 0
   935  000013                     fputs@i:
   936                           	callstack 0
   937  000013                     ___flmul@b:
   938                           	callstack 0
   939                           
   940                           ; 4 bytes @ 0x12
   941  000013                     	ds	1
   942  000014                     ctoa@w:
   943                           	callstack 0
   944  000014                     atoi@n:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x13
   948  000014                     	ds	1
   949  000015                     ?_pad:
   950                           	callstack 0
   951  000015                     LCD_SendBytes@len:
   952                           	callstack 0
   953  000015                     ___aodiv@counter:
   954                           	callstack 0
   955  000015                     ___aomod@counter:
   956                           	callstack 0
   957  000015                     pad@fp:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x14
   961  000015                     	ds	1
   962  000016                     ??_LCD_SendBytes:
   963  000016                     ___aodiv@sign:
   964                           	callstack 0
   965  000016                     ___aomod@sign:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0x15
   969  000016                     	ds	1
   970  000017                     ?_abs:
   971                           	callstack 0
   972  000017                     pad@buf:
   973                           	callstack 0
   974  000017                     abs@a:
   975                           	callstack 0
   976  000017                     ___flmul@a:
   977                           	callstack 0
   978  000017                     ___aodiv@quotient:
   979                           	callstack 0
   980                           
   981                           ; 8 bytes @ 0x16
   982  000017                     	ds	1
   983  000018                     LCD_SendBytes@i:
   984                           	callstack 0
   985                           
   986                           ; 1 bytes @ 0x17
   987  000018                     	ds	1
   988  000019                     ??_abs:
   989  000019                     LCD_WriteCMD@cmd:
   990                           	callstack 0
   991  000019                     LCD_WriteString@str:
   992                           	callstack 0
   993  000019                     pad@p:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x18
   997  000019                     	ds	2
   998  00001B                     ??___flmul:
   999  00001B                     ??_pad:
  1000  00001B                     LCD_WriteCMD@lcd:
  1001                           	callstack 0
  1002  00001B                     LCD_WriteString@lcd:
  1003                           	callstack 0
  1004                           
  1005                           ; 6 bytes @ 0x1A
  1006  00001B                     	ds	1
  1007  00001C                     pad@i:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x1B
  1011  00001C                     	ds	2
  1012  00001E                     pad@w:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x1D
  1016  00001E                     	ds	1
  1017  00001F                     ___flmul@sign:
  1018                           	callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x1E
  1021  00001F                     	ds	1
  1022  000020                     ?_dtoa:
  1023                           	callstack 0
  1024  000020                     dtoa@fp:
  1025                           	callstack 0
  1026  000020                     ___flmul@grs:
  1027                           	callstack 0
  1028                           
  1029                           ; 4 bytes @ 0x1F
  1030  000020                     	ds	1
  1031  000021                     ??_LCD_WriteString:
  1032  000021                     LCD_Init@lcd:
  1033                           	callstack 0
  1034                           
  1035                           ; 6 bytes @ 0x20
  1036  000021                     	ds	1
  1037  000022                     dtoa@d:
  1038                           	callstack 0
  1039                           
  1040                           ; 8 bytes @ 0x21
  1041  000022                     	ds	2
  1042  000024                     ___flmul@aexp:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x23
  1046  000024                     	ds	1
  1047  000025                     ___flmul@bexp:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0x24
  1051  000025                     	ds	1
  1052  000026                     ___flmul@prod:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x25
  1056  000026                     	ds	1
  1057  000027                     
  1058                           ; 1 bytes @ 0x26
  1059  000027                     	ds	3
  1060  00002A                     ??_dtoa:
  1061  00002A                     ___flmul@temp:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x29
  1065  00002A                     	ds	2
  1066  00002C                     ?___fladd:
  1067                           	callstack 0
  1068  00002C                     ___fladd@b:
  1069                           	callstack 0
  1070                           
  1071                           ; 4 bytes @ 0x2B
  1072  00002C                     	ds	4
  1073  000030                     ___fladd@a:
  1074                           	callstack 0
  1075                           
  1076                           ; 4 bytes @ 0x2F
  1077  000030                     	ds	2
  1078  000032                     _dtoa$2331:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x31
  1082  000032                     	ds	2
  1083  000034                     ??___fladd:
  1084  000034                     dtoa@p:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x33
  1088  000034                     	ds	2
  1089  000036                     dtoa@w:
  1090                           	callstack 0
  1091                           
  1092                           ; 2 bytes @ 0x35
  1093  000036                     	ds	2
  1094  000038                     ___fladd@signs:
  1095                           	callstack 0
  1096  000038                     dtoa@s:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x37
  1100  000038                     	ds	1
  1101  000039                     ___fladd@aexp:
  1102                           	callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x38
  1105  000039                     	ds	1
  1106  00003A                     ___fladd@bexp:
  1107                           	callstack 0
  1108  00003A                     dtoa@n:
  1109                           	callstack 0
  1110                           
  1111                           ; 8 bytes @ 0x39
  1112  00003A                     	ds	1
  1113  00003B                     ___fladd@grs:
  1114                           	callstack 0
  1115                           
  1116                           ; 1 bytes @ 0x3A
  1117  00003B                     	ds	1
  1118  00003C                     ?___fltol:
  1119                           	callstack 0
  1120  00003C                     ___fltol@f1:
  1121                           	callstack 0
  1122                           
  1123                           ; 4 bytes @ 0x3B
  1124  00003C                     	ds	4
  1125  000040                     ??___fltol:
  1126                           
  1127                           ; 1 bytes @ 0x3F
  1128  000040                     	ds	2
  1129  000042                     dtoa@i:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x41
  1133  000042                     	ds	2
  1134  000044                     ?_vfpfcnvrt:
  1135                           	callstack 0
  1136  000044                     ___fltol@sign1:
  1137                           	callstack 0
  1138  000044                     vfpfcnvrt@fp:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x43
  1142  000044                     	ds	1
  1143  000045                     ___fltol@exp1:
  1144                           	callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x44
  1147  000045                     	ds	1
  1148  000046                     vfpfcnvrt@fmt:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x45
  1152  000046                     	ds	2
  1153  000048                     vfpfcnvrt@ap:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x47
  1157  000048                     	ds	2
  1158  00004A                     ??_vfpfcnvrt:
  1159                           
  1160                           ; 1 bytes @ 0x49
  1161  00004A                     	ds	4
  1162  00004E                     vfprintf@cfmt:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x4D
  1166  00004E                     	ds	2
  1167  000050                     
  1168                           ; 1 bytes @ 0x4F
  1169 ;;
  1170 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1171 ;;
  1172 ;; *************** function _main *****************
  1173 ;; Defined at:
  1174 ;;		line 114 in file "main.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  lcd             6   52[BANK0 ] struct any_lcd
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1189 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1191 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1192 ;;Total ram usage:       10 bytes
  1193 ;; Hardware stack levels required when called: 12
  1194 ;; This function calls:
  1195 ;;		_ADCC_GetConversionResult
  1196 ;;		_ADCC_StartConversion
  1197 ;;		_LCD_Init
  1198 ;;		_LCD_WriteCMD
  1199 ;;		_LCD_WriteString
  1200 ;;		_SYSTEM_Initialize
  1201 ;;		___fladd
  1202 ;;		___flmul
  1203 ;;		___fltol
  1204 ;;		___xxtofl
  1205 ;;		_delayUS
  1206 ;;		_sprintf
  1207 ;; This function is called by:
  1208 ;;		Startup code after reset
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text0
  1213  00182E                     __ptext0:
  1214                           	callstack 0
  1215  00182E                     _main:
  1216                           	callstack 19
  1217  00182E                     
  1218                           ;main.c: 116:     SYSTEM_Initialize();
  1219  00182E  ECC0  F01B         	call	_SYSTEM_Initialize	;wreg free
  1220  001832                     
  1221                           ;main.c: 119:     (INTCONbits.GIE = 1);
  1222  001832  8EF2               	bsf	242,7,c	;volatile
  1223  001834                     
  1224                           ;main.c: 125:     (INTCONbits.PEIE = 1);
  1225  001834  8CF2               	bsf	242,6,c	;volatile
  1226  001836                     
  1227                           ;main.c: 131:     any_lcd_t lcd;;main.c: 132:     lcd.delay_us = &delayUS;
  1228  001836  0E90               	movlw	low _delayUS
  1229  001838  0100               	movlb	0	; () banked
  1230  00183A  6F97               	movwf	(main@lcd+3)& (0+255),b
  1231  00183C  0E33               	movlw	high _delayUS
  1232  00183E  6F98               	movwf	(main@lcd+4)& (0+255),b
  1233  001840  0E00               	movlw	low (_delayUS shr (0+16))
  1234  001842  6F99               	movwf	(main@lcd+5)& (0+255),b
  1235  001844                     
  1236                           ; BSR set to: 0
  1237                           ;main.c: 133:     lcd.lcd_write = &writeLCD;
  1238  001844  0EA6               	movlw	low _writeLCD
  1239  001846  6F94               	movwf	main@lcd& (0+255),b
  1240  001848  0E37               	movlw	high _writeLCD
  1241  00184A  6F95               	movwf	(main@lcd+1)& (0+255),b
  1242  00184C  0E00               	movlw	low (_writeLCD shr (0+16))
  1243  00184E  6F96               	movwf	(main@lcd+2)& (0+255),b
  1244  001850                     
  1245                           ; BSR set to: 0
  1246                           ;main.c: 134:     LCD_Init(lcd);
  1247  001850  EE20  F094         	lfsr	2,main@lcd
  1248  001854  EE00  F021         	lfsr	0,LCD_Init@lcd
  1249  001858  0E05               	movlw	5
  1250  00185A                     u4811:
  1251  00185A  CFDB FFEB          	movff	plusw2,plusw0
  1252  00185E  06E8               	decf	wreg,f,c
  1253  001860  E2FC               	bc	u4811
  1254  001862  EC58  F017         	call	_LCD_Init	;wreg free
  1255  001866                     
  1256                           ;main.c: 136:     ADCC_StartConversion(TempSelect);
  1257  001866  0E1B               	movlw	27
  1258  001868  EC59  F01C         	call	_ADCC_StartConversion
  1259  00186C                     l4766:
  1260                           
  1261                           ;main.c: 139:     {;main.c: 141:         if(PBFlag == 1){
  1262  00186C  0100               	movlb	0	; () banked
  1263  00186E  05B2               	decf	_PBFlag& (0+255),w,b
  1264  001870  A4D8               	btfss	status,2,c
  1265  001872  EF3D  F00C         	goto	u4821
  1266  001876  EF3F  F00C         	goto	u4820
  1267  00187A                     u4821:
  1268  00187A  EFAE  F00C         	goto	l4794
  1269  00187E                     u4820:
  1270  00187E                     
  1271                           ; BSR set to: 0
  1272                           ;main.c: 142:             PBFlag = 0;
  1273  00187E  0E00               	movlw	0
  1274  001880  6FB2               	movwf	_PBFlag& (0+255),b
  1275  001882                     
  1276                           ; BSR set to: 0
  1277                           ;main.c: 143:             if(!PORTCbits.RC0){
  1278  001882  B08F               	btfsc	143,0,c	;volatile
  1279  001884  EF46  F00C         	goto	u4831
  1280  001888  EF48  F00C         	goto	u4830
  1281  00188C                     u4831:
  1282  00188C  EF5E  F00C         	goto	l4776
  1283  001890                     u4830:
  1284  001890                     
  1285                           ; BSR set to: 0
  1286                           ;main.c: 144:                 TempLimit -= 5;
  1287  001890  0EFB               	movlw	251
  1288  001892  27F0               	addwf	_TempLimit& (0+255),f,b
  1289  001894  0EFF               	movlw	255
  1290  001896  23F1               	addwfc	(_TempLimit+1)& (0+255),f,b
  1291                           
  1292                           ;main.c: 145:                 if(TempLimit < 20){
  1293  001898  BFF1               	btfsc	(_TempLimit+1)& (0+255),7,b
  1294  00189A  EF5A  F00C         	goto	u4840
  1295  00189E  51F1               	movf	(_TempLimit+1)& (0+255),w,b
  1296  0018A0  E107               	bnz	u4841
  1297  0018A2  0E14               	movlw	20
  1298  0018A4  5DF0               	subwf	_TempLimit& (0+255),w,b
  1299  0018A6  B0D8               	btfsc	status,0,c
  1300  0018A8  EF58  F00C         	goto	u4841
  1301  0018AC  EF5A  F00C         	goto	u4840
  1302  0018B0                     u4841:
  1303  0018B0  EF5E  F00C         	goto	l4776
  1304  0018B4                     u4840:
  1305  0018B4                     
  1306                           ; BSR set to: 0
  1307                           ;main.c: 146:                     TempLimit = 120;
  1308  0018B4  0E00               	movlw	0
  1309  0018B6  6FF1               	movwf	(_TempLimit+1)& (0+255),b
  1310  0018B8  0E78               	movlw	120
  1311  0018BA  6FF0               	movwf	_TempLimit& (0+255),b
  1312  0018BC                     l4776:
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;main.c: 149:             if(!PORTCbits.RC1){
  1316  0018BC  B28F               	btfsc	143,1,c	;volatile
  1317  0018BE  EF63  F00C         	goto	u4851
  1318  0018C2  EF65  F00C         	goto	u4850
  1319  0018C6                     u4851:
  1320  0018C6  EF7B  F00C         	goto	l4782
  1321  0018CA                     u4850:
  1322  0018CA                     
  1323                           ; BSR set to: 0
  1324                           ;main.c: 150:                 TempLimit += 5;
  1325  0018CA  0E05               	movlw	5
  1326  0018CC  27F0               	addwf	_TempLimit& (0+255),f,b
  1327  0018CE  0E00               	movlw	0
  1328  0018D0  23F1               	addwfc	(_TempLimit+1)& (0+255),f,b
  1329                           
  1330                           ;main.c: 151:                 if(TempLimit > 120){
  1331  0018D2  BFF1               	btfsc	(_TempLimit+1)& (0+255),7,b
  1332  0018D4  EF75  F00C         	goto	u4861
  1333  0018D8  51F1               	movf	(_TempLimit+1)& (0+255),w,b
  1334  0018DA  E109               	bnz	u4860
  1335  0018DC  0E79               	movlw	121
  1336  0018DE  5DF0               	subwf	_TempLimit& (0+255),w,b
  1337  0018E0  A0D8               	btfss	status,0,c
  1338  0018E2  EF75  F00C         	goto	u4861
  1339  0018E6  EF77  F00C         	goto	u4860
  1340  0018EA                     u4861:
  1341  0018EA  EF7B  F00C         	goto	l4782
  1342  0018EE                     u4860:
  1343  0018EE                     
  1344                           ; BSR set to: 0
  1345                           ;main.c: 152:                     TempLimit = 20;
  1346  0018EE  0E00               	movlw	0
  1347  0018F0  6FF1               	movwf	(_TempLimit+1)& (0+255),b
  1348  0018F2  0E14               	movlw	20
  1349  0018F4  6FF0               	movwf	_TempLimit& (0+255),b
  1350  0018F6                     l4782:
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;main.c: 155:             if(!PORTCbits.RC2){
  1354  0018F6  B48F               	btfsc	143,2,c	;volatile
  1355  0018F8  EF80  F00C         	goto	u4871
  1356  0018FC  EF82  F00C         	goto	u4870
  1357  001900                     u4871:
  1358  001900  EF91  F00C         	goto	l4788
  1359  001904                     u4870:
  1360  001904                     
  1361                           ; BSR set to: 0
  1362                           ;main.c: 156:                 HumLimit -= 5;
  1363  001904  0EFB               	movlw	251
  1364  001906  27EE               	addwf	_HumLimit& (0+255),f,b
  1365  001908  0EFF               	movlw	255
  1366  00190A  23EF               	addwfc	(_HumLimit+1)& (0+255),f,b
  1367                           
  1368                           ;main.c: 157:                 if(HumLimit < 0){
  1369  00190C  BFEF               	btfsc	(_HumLimit+1)& (0+255),7,b
  1370  00190E  EF8D  F00C         	goto	u4880
  1371  001912  EF8B  F00C         	goto	u4881
  1372  001916                     u4881:
  1373  001916  EF91  F00C         	goto	l4788
  1374  00191A                     u4880:
  1375  00191A                     
  1376                           ; BSR set to: 0
  1377                           ;main.c: 158:                     HumLimit = 100;
  1378  00191A  0E00               	movlw	0
  1379  00191C  6FEF               	movwf	(_HumLimit+1)& (0+255),b
  1380  00191E  0E64               	movlw	100
  1381  001920  6FEE               	movwf	_HumLimit& (0+255),b
  1382  001922                     l4788:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;main.c: 161:             if(!PORTCbits.RC3){
  1386  001922  B68F               	btfsc	143,3,c	;volatile
  1387  001924  EF96  F00C         	goto	u4891
  1388  001928  EF98  F00C         	goto	u4890
  1389  00192C                     u4891:
  1390  00192C  EFAE  F00C         	goto	l4794
  1391  001930                     u4890:
  1392  001930                     
  1393                           ; BSR set to: 0
  1394                           ;main.c: 162:                 HumLimit += 5;
  1395  001930  0E05               	movlw	5
  1396  001932  27EE               	addwf	_HumLimit& (0+255),f,b
  1397  001934  0E00               	movlw	0
  1398  001936  23EF               	addwfc	(_HumLimit+1)& (0+255),f,b
  1399                           
  1400                           ;main.c: 163:                 if(HumLimit > 100){
  1401  001938  BFEF               	btfsc	(_HumLimit+1)& (0+255),7,b
  1402  00193A  EFA8  F00C         	goto	u4901
  1403  00193E  51EF               	movf	(_HumLimit+1)& (0+255),w,b
  1404  001940  E109               	bnz	u4900
  1405  001942  0E65               	movlw	101
  1406  001944  5DEE               	subwf	_HumLimit& (0+255),w,b
  1407  001946  A0D8               	btfss	status,0,c
  1408  001948  EFA8  F00C         	goto	u4901
  1409  00194C  EFAA  F00C         	goto	u4900
  1410  001950                     u4901:
  1411  001950  EFAE  F00C         	goto	l4794
  1412  001954                     u4900:
  1413  001954                     
  1414                           ; BSR set to: 0
  1415                           ;main.c: 164:                     HumLimit = 0;
  1416  001954  0E00               	movlw	0
  1417  001956  6FEF               	movwf	(_HumLimit+1)& (0+255),b
  1418  001958  0E00               	movlw	0
  1419  00195A  6FEE               	movwf	_HumLimit& (0+255),b
  1420  00195C                     l4794:
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;main.c: 169:         if(Tim0Flag == 1){
  1424  00195C  05B3               	decf	_Tim0Flag& (0+255),w,b
  1425  00195E  A4D8               	btfss	status,2,c
  1426  001960  EFB4  F00C         	goto	u4911
  1427  001964  EFB6  F00C         	goto	u4910
  1428  001968                     u4911:
  1429  001968  EFB8  F00C         	goto	l4798
  1430  00196C                     u4910:
  1431  00196C                     
  1432                           ; BSR set to: 0
  1433                           ;main.c: 170:             Tim0Flag = 0;
  1434  00196C  0E00               	movlw	0
  1435  00196E  6FB3               	movwf	_Tim0Flag& (0+255),b
  1436  001970                     l4798:
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;main.c: 173:         if(Tim1Flag == 1){
  1440  001970  05AF               	decf	_Tim1Flag& (0+255),w,b
  1441  001972  A4D8               	btfss	status,2,c
  1442  001974  EFBE  F00C         	goto	u4921
  1443  001978  EFC0  F00C         	goto	u4920
  1444  00197C                     u4921:
  1445  00197C  EF0C  F00D         	goto	l4808
  1446  001980                     u4920:
  1447  001980                     
  1448                           ; BSR set to: 0
  1449                           ;main.c: 174:             Tim1Flag = 0;
  1450  001980  0E00               	movlw	0
  1451  001982  6FAF               	movwf	_Tim1Flag& (0+255),b
  1452                           
  1453                           ;main.c: 175:             CalcFlag = 1;
  1454  001984  0E01               	movlw	1
  1455  001986  6FF6               	movwf	_CalcFlag& (0+255),b
  1456  001988                     
  1457                           ; BSR set to: 0
  1458                           ;main.c: 177:             sprintf(LCDout,"T:%3d%cC  RH:%3d%c                        TL:%
      +                          3d%cCRHL:%3d%c", TempC, 0xDF, HumRH,0x25, TempLimit, 0xDF, HumLimit, 0x25);
  1459  001988  0E20               	movlw	low _LCDout
  1460  00198A  6F6F               	movwf	sprintf@s& (0+255),b
  1461  00198C  0E01               	movlw	high _LCDout
  1462  00198E  6F70               	movwf	(sprintf@s+1)& (0+255),b
  1463  001990  0E05               	movlw	low STR_1
  1464  001992  6F71               	movwf	sprintf@fmt& (0+255),b
  1465  001994  0E0F               	movlw	high STR_1
  1466  001996  6F72               	movwf	(sprintf@fmt+1)& (0+255),b
  1467  001998  C0AC  F073         	movff	_TempC,?_sprintf+4
  1468  00199C  C0AD  F074         	movff	_TempC+1,?_sprintf+5
  1469  0019A0  0E00               	movlw	0
  1470  0019A2  6F76               	movwf	(?_sprintf+7)& (0+255),b
  1471  0019A4  0EDF               	movlw	223
  1472  0019A6  6F75               	movwf	(?_sprintf+6)& (0+255),b
  1473  0019A8  C0AA  F077         	movff	_HumRH,?_sprintf+8
  1474  0019AC  C0AB  F078         	movff	_HumRH+1,?_sprintf+9
  1475  0019B0  0E00               	movlw	0
  1476  0019B2  6F7A               	movwf	(?_sprintf+11)& (0+255),b
  1477  0019B4  0E25               	movlw	37
  1478  0019B6  6F79               	movwf	(?_sprintf+10)& (0+255),b
  1479  0019B8  C0F0  F07B         	movff	_TempLimit,?_sprintf+12
  1480  0019BC  C0F1  F07C         	movff	_TempLimit+1,?_sprintf+13
  1481  0019C0  0E00               	movlw	0
  1482  0019C2  6F7E               	movwf	(?_sprintf+15)& (0+255),b
  1483  0019C4  0EDF               	movlw	223
  1484  0019C6  6F7D               	movwf	(?_sprintf+14)& (0+255),b
  1485  0019C8  C0EE  F07F         	movff	_HumLimit,?_sprintf+16
  1486  0019CC  C0EF  F080         	movff	_HumLimit+1,?_sprintf+17
  1487  0019D0  0E00               	movlw	0
  1488  0019D2  6F82               	movwf	(?_sprintf+19)& (0+255),b
  1489  0019D4  0E25               	movlw	37
  1490  0019D6  6F81               	movwf	(?_sprintf+18)& (0+255),b
  1491  0019D8  EC28  F019         	call	_sprintf	;wreg free
  1492  0019DC                     
  1493                           ;main.c: 178:             LCD_WriteString(LCDout,lcd);
  1494  0019DC  0E20               	movlw	low _LCDout
  1495  0019DE  6E19               	movwf	LCD_WriteString@str^0,c
  1496  0019E0  0E01               	movlw	high _LCDout
  1497  0019E2  6E1A               	movwf	(LCD_WriteString@str+1)^0,c
  1498  0019E4  EE20  F094         	lfsr	2,main@lcd
  1499  0019E8  EE00  F01B         	lfsr	0,LCD_WriteString@lcd
  1500  0019EC  0E05               	movlw	5
  1501  0019EE                     u4931:
  1502  0019EE  CFDB FFEB          	movff	plusw2,plusw0
  1503  0019F2  06E8               	decf	wreg,f,c
  1504  0019F4  E2FC               	bc	u4931
  1505  0019F6  ECF7  F018         	call	_LCD_WriteString	;wreg free
  1506  0019FA                     
  1507                           ;main.c: 179:             LCD_WriteCMD(0x02,lcd);
  1508  0019FA  0E00               	movlw	0
  1509  0019FC  6E1A               	movwf	(LCD_WriteCMD@cmd+1)^0,c
  1510  0019FE  0E02               	movlw	2
  1511  001A00  6E19               	movwf	LCD_WriteCMD@cmd^0,c
  1512  001A02  EE20  F094         	lfsr	2,main@lcd
  1513  001A06  EE00  F01B         	lfsr	0,LCD_WriteCMD@lcd
  1514  001A0A  0E05               	movlw	5
  1515  001A0C                     u4941:
  1516  001A0C  CFDB FFEB          	movff	plusw2,plusw0
  1517  001A10  06E8               	decf	wreg,f,c
  1518  001A12  E2FC               	bc	u4941
  1519  001A14  ECA8  F01A         	call	_LCD_WriteCMD	;wreg free
  1520  001A18                     l4808:
  1521                           
  1522                           ;main.c: 195:         if(Tim2Flag == 1){
  1523  001A18  0100               	movlb	0	; () banked
  1524  001A1A  05B0               	decf	_Tim2Flag& (0+255),w,b
  1525  001A1C  A4D8               	btfss	status,2,c
  1526  001A1E  EF13  F00D         	goto	u4951
  1527  001A22  EF15  F00D         	goto	u4950
  1528  001A26                     u4951:
  1529  001A26  EF17  F00D         	goto	l4812
  1530  001A2A                     u4950:
  1531  001A2A                     
  1532                           ; BSR set to: 0
  1533                           ;main.c: 196:             Tim2Flag = 0;
  1534  001A2A  0E00               	movlw	0
  1535  001A2C  6FB0               	movwf	_Tim2Flag& (0+255),b
  1536  001A2E                     l4812:
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;main.c: 199:         if(ADCFlag == 1){
  1540  001A2E  05B1               	decf	_ADCFlag& (0+255),w,b
  1541  001A30  A4D8               	btfss	status,2,c
  1542  001A32  EF1D  F00D         	goto	u4961
  1543  001A36  EF1F  F00D         	goto	u4960
  1544  001A3A                     u4961:
  1545  001A3A  EF60  F00D         	goto	l4838
  1546  001A3E                     u4960:
  1547  001A3E                     
  1548                           ; BSR set to: 0
  1549                           ;main.c: 200:             ADCFlag = 0;
  1550  001A3E  0E00               	movlw	0
  1551  001A40  6FB1               	movwf	_ADCFlag& (0+255),b
  1552                           
  1553                           ;main.c: 202:             if(!TempOrHum){
  1554  001A42  51AE               	movf	_TempOrHum& (0+255),w,b
  1555  001A44  A4D8               	btfss	status,2,c
  1556  001A46  EF27  F00D         	goto	u4971
  1557  001A4A  EF29  F00D         	goto	u4970
  1558  001A4E                     u4971:
  1559  001A4E  EF40  F00D         	goto	l4826
  1560  001A52                     u4970:
  1561  001A52                     
  1562                           ; BSR set to: 0
  1563                           ;main.c: 203:                 TempData = ADCC_GetConversionResult();
  1564  001A52  EC10  F01C         	call	_ADCC_GetConversionResult	;wreg free
  1565  001A56  C005  F0CE         	movff	?_ADCC_GetConversionResult,_TempData
  1566  001A5A  C006  F0CF         	movff	?_ADCC_GetConversionResult+1,_TempData+1
  1567  001A5E                     
  1568                           ;main.c: 205:                 TempOrHum = 1;
  1569  001A5E  0E01               	movlw	1
  1570  001A60  0100               	movlb	0	; () banked
  1571  001A62  6FAE               	movwf	_TempOrHum& (0+255),b
  1572  001A64                     
  1573                           ; BSR set to: 0
  1574                           ;main.c: 206:                 ADCON0bits.ADON = 0;
  1575  001A64  9E60               	bcf	96,7,c	;volatile
  1576  001A66                     
  1577                           ; BSR set to: 0
  1578                           ;main.c: 207:                 delayUS(1E3);
  1579  001A66  0EE8               	movlw	232
  1580  001A68  6E05               	movwf	delayUS@usec^0,c
  1581  001A6A  0E03               	movlw	3
  1582  001A6C  6E06               	movwf	(delayUS@usec+1)^0,c
  1583  001A6E  0E00               	movlw	0
  1584  001A70  6E07               	movwf	(delayUS@usec+2)^0,c
  1585  001A72  0E00               	movlw	0
  1586  001A74  6E08               	movwf	(delayUS@usec+3)^0,c
  1587  001A76  ECC8  F019         	call	_delayUS	;wreg free
  1588  001A7A                     
  1589                           ;main.c: 208:                 ADCC_StartConversion(HumSelect);
  1590  001A7A  0E14               	movlw	20
  1591  001A7C  EC59  F01C         	call	_ADCC_StartConversion
  1592  001A80                     l4826:
  1593                           
  1594                           ;main.c: 210:             if(TempOrHum){
  1595  001A80  0100               	movlb	0	; () banked
  1596  001A82  51AE               	movf	_TempOrHum& (0+255),w,b
  1597  001A84  B4D8               	btfsc	status,2,c
  1598  001A86  EF47  F00D         	goto	u4981
  1599  001A8A  EF49  F00D         	goto	u4980
  1600  001A8E                     u4981:
  1601  001A8E  EF60  F00D         	goto	l4838
  1602  001A92                     u4980:
  1603  001A92                     
  1604                           ; BSR set to: 0
  1605                           ;main.c: 211:                 HumData = ADCC_GetConversionResult();
  1606  001A92  EC10  F01C         	call	_ADCC_GetConversionResult	;wreg free
  1607  001A96  C005  F0CC         	movff	?_ADCC_GetConversionResult,_HumData
  1608  001A9A  C006  F0CD         	movff	?_ADCC_GetConversionResult+1,_HumData+1
  1609  001A9E                     
  1610                           ;main.c: 213:                 TempOrHum = 0;
  1611  001A9E  0E00               	movlw	0
  1612  001AA0  0100               	movlb	0	; () banked
  1613  001AA2  6FAE               	movwf	_TempOrHum& (0+255),b
  1614  001AA4                     
  1615                           ; BSR set to: 0
  1616                           ;main.c: 214:                 ADCON0bits.ADON = 0;
  1617  001AA4  9E60               	bcf	96,7,c	;volatile
  1618  001AA6                     
  1619                           ; BSR set to: 0
  1620                           ;main.c: 215:                 delayUS(1E3);
  1621  001AA6  0EE8               	movlw	232
  1622  001AA8  6E05               	movwf	delayUS@usec^0,c
  1623  001AAA  0E03               	movlw	3
  1624  001AAC  6E06               	movwf	(delayUS@usec+1)^0,c
  1625  001AAE  0E00               	movlw	0
  1626  001AB0  6E07               	movwf	(delayUS@usec+2)^0,c
  1627  001AB2  0E00               	movlw	0
  1628  001AB4  6E08               	movwf	(delayUS@usec+3)^0,c
  1629  001AB6  ECC8  F019         	call	_delayUS	;wreg free
  1630  001ABA                     
  1631                           ;main.c: 216:                 ADCC_StartConversion(TempSelect);
  1632  001ABA  0E1B               	movlw	27
  1633  001ABC  EC59  F01C         	call	_ADCC_StartConversion
  1634  001AC0                     l4838:
  1635                           
  1636                           ;main.c: 220:         if(CalcFlag == 1){
  1637  001AC0  0100               	movlb	0	; () banked
  1638  001AC2  05F6               	decf	_CalcFlag& (0+255),w,b
  1639  001AC4  A4D8               	btfss	status,2,c
  1640  001AC6  EF67  F00D         	goto	u4991
  1641  001ACA  EF69  F00D         	goto	u4990
  1642  001ACE                     u4991:
  1643  001ACE  EF36  F00C         	goto	l4766
  1644  001AD2                     u4990:
  1645  001AD2                     
  1646                           ; BSR set to: 0
  1647                           ;main.c: 221:             CalcFlag = 0;
  1648  001AD2  0E00               	movlw	0
  1649  001AD4  6FF6               	movwf	_CalcFlag& (0+255),b
  1650  001AD6                     
  1651                           ; BSR set to: 0
  1652                           ;main.c: 223:             TempC = (uint16_t)(206.25*(float)TempData*VDDinv - 60.625);
  1653  001AD6  0E00               	movlw	0
  1654  001AD8  6E17               	movwf	___flmul@a^0,c
  1655  001ADA  0E40               	movlw	64
  1656  001ADC  6E18               	movwf	(___flmul@a+1)^0,c
  1657  001ADE  0E4E               	movlw	78
  1658  001AE0  6E19               	movwf	(___flmul@a+2)^0,c
  1659  001AE2  0E43               	movlw	67
  1660  001AE4  6E1A               	movwf	(___flmul@a+3)^0,c
  1661  001AE6  C0CE  F005         	movff	_TempData,___xxtofl@val
  1662  001AEA  C0CF  F006         	movff	_TempData+1,___xxtofl@val+1
  1663  001AEE  6A07               	clrf	(___xxtofl@val+2)^0,c
  1664  001AF0  6A08               	clrf	(___xxtofl@val+3)^0,c
  1665  001AF2  0E00               	movlw	0
  1666  001AF4  EC1F  F011         	call	___xxtofl
  1667  001AF8  C005  F013         	movff	?___xxtofl,___flmul@b
  1668  001AFC  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1669  001B00  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1670  001B04  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1671  001B08  EC02  F00A         	call	___flmul	;wreg free
  1672  001B0C  C013  F090         	movff	?___flmul,_main$2800
  1673  001B10  C014  F091         	movff	?___flmul+1,_main$2800+1
  1674  001B14  C015  F092         	movff	?___flmul+2,_main$2800+2
  1675  001B18  C016  F093         	movff	?___flmul+3,_main$2800+3
  1676  001B1C                     
  1677                           ;main.c: 223:             TempC = (uint16_t)(206.25*(float)TempData*VDDinv - 60.625);
  1678  001B1C  0E00               	movlw	0
  1679  001B1E  6E30               	movwf	___fladd@a^0,c
  1680  001B20  0E80               	movlw	128
  1681  001B22  6E31               	movwf	(___fladd@a+1)^0,c
  1682  001B24  0E72               	movlw	114
  1683  001B26  6E32               	movwf	(___fladd@a+2)^0,c
  1684  001B28  0EC2               	movlw	194
  1685  001B2A  6E33               	movwf	(___fladd@a+3)^0,c
  1686  001B2C  0E07               	movlw	7
  1687  001B2E  6E17               	movwf	___flmul@a^0,c
  1688  001B30  0E20               	movlw	32
  1689  001B32  6E18               	movwf	(___flmul@a+1)^0,c
  1690  001B34  0E80               	movlw	128
  1691  001B36  6E19               	movwf	(___flmul@a+2)^0,c
  1692  001B38  0E3A               	movlw	58
  1693  001B3A  6E1A               	movwf	(___flmul@a+3)^0,c
  1694  001B3C  C090  F013         	movff	_main$2800,___flmul@b
  1695  001B40  C091  F014         	movff	_main$2800+1,___flmul@b+1
  1696  001B44  C092  F015         	movff	_main$2800+2,___flmul@b+2
  1697  001B48  C093  F016         	movff	_main$2800+3,___flmul@b+3
  1698  001B4C  EC02  F00A         	call	___flmul	;wreg free
  1699  001B50  C013  F02C         	movff	?___flmul,___fladd@b
  1700  001B54  C014  F02D         	movff	?___flmul+1,___fladd@b+1
  1701  001B58  C015  F02E         	movff	?___flmul+2,___fladd@b+2
  1702  001B5C  C016  F02F         	movff	?___flmul+3,___fladd@b+3
  1703  001B60  ECA2  F007         	call	___fladd	;wreg free
  1704  001B64  C02C  F03C         	movff	?___fladd,___fltol@f1
  1705  001B68  C02D  F03D         	movff	?___fladd+1,___fltol@f1+1
  1706  001B6C  C02E  F03E         	movff	?___fladd+2,___fltol@f1+2
  1707  001B70  C02F  F03F         	movff	?___fladd+3,___fltol@f1+3
  1708  001B74  EC2E  F015         	call	___fltol	;wreg free
  1709  001B78  C03C  F0AC         	movff	?___fltol,_TempC
  1710  001B7C  C03D  F0AD         	movff	?___fltol+1,_TempC+1
  1711  001B80                     
  1712                           ;main.c: 224:             HumRH = (uint16_t)(125*(float)HumData*VDDinv - 12.5);
  1713  001B80  0E00               	movlw	0
  1714  001B82  6E17               	movwf	___flmul@a^0,c
  1715  001B84  0E00               	movlw	0
  1716  001B86  6E18               	movwf	(___flmul@a+1)^0,c
  1717  001B88  0EFA               	movlw	250
  1718  001B8A  6E19               	movwf	(___flmul@a+2)^0,c
  1719  001B8C  0E42               	movlw	66
  1720  001B8E  6E1A               	movwf	(___flmul@a+3)^0,c
  1721  001B90  C0CC  F005         	movff	_HumData,___xxtofl@val
  1722  001B94  C0CD  F006         	movff	_HumData+1,___xxtofl@val+1
  1723  001B98  6A07               	clrf	(___xxtofl@val+2)^0,c
  1724  001B9A  6A08               	clrf	(___xxtofl@val+3)^0,c
  1725  001B9C  0E00               	movlw	0
  1726  001B9E  EC1F  F011         	call	___xxtofl
  1727  001BA2  C005  F013         	movff	?___xxtofl,___flmul@b
  1728  001BA6  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1729  001BAA  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1730  001BAE  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1731  001BB2  EC02  F00A         	call	___flmul	;wreg free
  1732  001BB6  C013  F090         	movff	?___flmul,_main$2800
  1733  001BBA  C014  F091         	movff	?___flmul+1,_main$2800+1
  1734  001BBE  C015  F092         	movff	?___flmul+2,_main$2800+2
  1735  001BC2  C016  F093         	movff	?___flmul+3,_main$2800+3
  1736  001BC6                     
  1737                           ;main.c: 224:             HumRH = (uint16_t)(125*(float)HumData*VDDinv - 12.5);
  1738  001BC6  0E00               	movlw	0
  1739  001BC8  6E30               	movwf	___fladd@a^0,c
  1740  001BCA  0E00               	movlw	0
  1741  001BCC  6E31               	movwf	(___fladd@a+1)^0,c
  1742  001BCE  0E48               	movlw	72
  1743  001BD0  6E32               	movwf	(___fladd@a+2)^0,c
  1744  001BD2  0EC1               	movlw	193
  1745  001BD4  6E33               	movwf	(___fladd@a+3)^0,c
  1746  001BD6  0E07               	movlw	7
  1747  001BD8  6E17               	movwf	___flmul@a^0,c
  1748  001BDA  0E20               	movlw	32
  1749  001BDC  6E18               	movwf	(___flmul@a+1)^0,c
  1750  001BDE  0E80               	movlw	128
  1751  001BE0  6E19               	movwf	(___flmul@a+2)^0,c
  1752  001BE2  0E3A               	movlw	58
  1753  001BE4  6E1A               	movwf	(___flmul@a+3)^0,c
  1754  001BE6  C090  F013         	movff	_main$2800,___flmul@b
  1755  001BEA  C091  F014         	movff	_main$2800+1,___flmul@b+1
  1756  001BEE  C092  F015         	movff	_main$2800+2,___flmul@b+2
  1757  001BF2  C093  F016         	movff	_main$2800+3,___flmul@b+3
  1758  001BF6  EC02  F00A         	call	___flmul	;wreg free
  1759  001BFA  C013  F02C         	movff	?___flmul,___fladd@b
  1760  001BFE  C014  F02D         	movff	?___flmul+1,___fladd@b+1
  1761  001C02  C015  F02E         	movff	?___flmul+2,___fladd@b+2
  1762  001C06  C016  F02F         	movff	?___flmul+3,___fladd@b+3
  1763  001C0A  ECA2  F007         	call	___fladd	;wreg free
  1764  001C0E  C02C  F03C         	movff	?___fladd,___fltol@f1
  1765  001C12  C02D  F03D         	movff	?___fladd+1,___fltol@f1+1
  1766  001C16  C02E  F03E         	movff	?___fladd+2,___fltol@f1+2
  1767  001C1A  C02F  F03F         	movff	?___fladd+3,___fltol@f1+3
  1768  001C1E  EC2E  F015         	call	___fltol	;wreg free
  1769  001C22  C03C  F0AA         	movff	?___fltol,_HumRH
  1770  001C26  C03D  F0AB         	movff	?___fltol+1,_HumRH+1
  1771  001C2A  EF36  F00C         	goto	l4766
  1772  001C2E  EF80  F000         	goto	start
  1773  001C32                     __end_of_main:
  1774                           	callstack 0
  1775                           
  1776 ;; *************** function _sprintf *****************
  1777 ;; Defined at:
  1778 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  s               2   15[BANK0 ] PTR unsigned char 
  1781 ;;		 -> LCDout(32), 
  1782 ;;  fmt             2   17[BANK0 ] PTR const unsigned char 
  1783 ;;		 -> STR_1(61), 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  f              11   37[BANK0 ] struct _IO_FILE
  1786 ;;  ap              2   35[BANK0 ] PTR void [1]
  1787 ;;		 -> ?_sprintf(2), 
  1788 ;;  ret             2    0        int 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  2   15[BANK0 ] int 
  1791 ;; Registers used:
  1792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1798 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1799 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1801 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1802 ;;Total ram usage:       33 bytes
  1803 ;; Hardware stack levels used: 1
  1804 ;; Hardware stack levels required when called: 11
  1805 ;; This function calls:
  1806 ;;		_vfprintf
  1807 ;; This function is called by:
  1808 ;;		_main
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text1
  1813  003250                     __ptext1:
  1814                           	callstack 0
  1815  003250                     _sprintf:
  1816                           	callstack 19
  1817  003250  0E73               	movlw	low (?_sprintf+4)
  1818  003252  0100               	movlb	0	; () banked
  1819  003254  6F83               	movwf	sprintf@ap& (0+255),b
  1820  003256  0E00               	movlw	high (?_sprintf+4)
  1821  003258  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  1822  00325A  C06F  F085         	movff	sprintf@s,sprintf@f
  1823  00325E  C070  F086         	movff	sprintf@s+1,sprintf@f+1
  1824  003262                     
  1825                           ; BSR set to: 0
  1826  003262  0E00               	movlw	0
  1827  003264  6F89               	movwf	(sprintf@f+4)& (0+255),b
  1828  003266  0E00               	movlw	0
  1829  003268  6F88               	movwf	(sprintf@f+3)& (0+255),b
  1830  00326A                     
  1831                           ; BSR set to: 0
  1832  00326A  0E00               	movlw	0
  1833  00326C  6F8F               	movwf	(sprintf@f+10)& (0+255),b
  1834  00326E  0E00               	movlw	0
  1835  003270  6F8E               	movwf	(sprintf@f+9)& (0+255),b
  1836  003272                     
  1837                           ; BSR set to: 0
  1838  003272  0E85               	movlw	low sprintf@f
  1839  003274  6F69               	movwf	vfprintf@fp& (0+255),b
  1840  003276  0E00               	movlw	high sprintf@f
  1841  003278  6F6A               	movwf	(vfprintf@fp+1)& (0+255),b
  1842  00327A  C071  F06B         	movff	sprintf@fmt,vfprintf@fmt
  1843  00327E  C072  F06C         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1844  003282  0E83               	movlw	low sprintf@ap
  1845  003284  6F6D               	movwf	vfprintf@ap& (0+255),b
  1846  003286  0E00               	movlw	high sprintf@ap
  1847  003288  6F6E               	movwf	(vfprintf@ap+1)& (0+255),b
  1848  00328A  EC91  F018         	call	_vfprintf	;wreg free
  1849  00328E  0100               	movlb	0	; () banked
  1850  003290  5188               	movf	(sprintf@f+3)& (0+255),w,b
  1851  003292  256F               	addwf	sprintf@s& (0+255),w,b
  1852  003294  6ED9               	movwf	fsr2l,c
  1853  003296  5189               	movf	(sprintf@f+4)& (0+255),w,b
  1854  003298  2170               	addwfc	(sprintf@s+1)& (0+255),w,b
  1855  00329A  6EDA               	movwf	fsr2h,c
  1856  00329C  0E00               	movlw	0
  1857  00329E  6EDF               	movwf	indf2,c
  1858  0032A0                     
  1859                           ; BSR set to: 0
  1860  0032A0  0012               	return		;funcret
  1861  0032A2                     __end_of_sprintf:
  1862                           	callstack 0
  1863                           
  1864 ;; *************** function _vfprintf *****************
  1865 ;; Defined at:
  1866 ;;		line 1390 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  fp              2    9[BANK0 ] PTR struct _IO_FILE
  1869 ;;		 -> sprintf@f(11), 
  1870 ;;  fmt             2   11[BANK0 ] PTR const unsigned char 
  1871 ;;		 -> STR_1(61), 
  1872 ;;  ap              2   13[BANK0 ] PTR PTR void 
  1873 ;;		 -> sprintf@ap(2), 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  1876 ;;		 -> STR_1(61), 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  2    9[BANK0 ] int 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1886 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1887 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1889 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1890 ;;Total ram usage:        8 bytes
  1891 ;; Hardware stack levels used: 1
  1892 ;; Hardware stack levels required when called: 10
  1893 ;; This function calls:
  1894 ;;		_vfpfcnvrt
  1895 ;; This function is called by:
  1896 ;;		_sprintf
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text2
  1901  003122                     __ptext2:
  1902                           	callstack 0
  1903  003122                     _vfprintf:
  1904                           	callstack 19
  1905  003122                     
  1906                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1907  003122  C06B  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  1908  003126  C06C  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1909  00312A                     
  1910                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1911  00312A  0E00               	movlw	0
  1912  00312C  0100               	movlb	0	; () banked
  1913  00312E  6FA7               	movwf	(_nout+1)& (0+255),b
  1914  003130  0E00               	movlw	0
  1915  003132  6FA6               	movwf	_nout& (0+255),b
  1916                           
  1917                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1918  003134  EFAF  F018         	goto	l4738
  1919  003138                     l4736:
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1923  003138  C069  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  1924  00313C  C06A  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1925  003140  0E4E               	movlw	low vfprintf@cfmt
  1926  003142  6E46               	movwf	vfpfcnvrt@fmt^0,c
  1927  003144  0E00               	movlw	high vfprintf@cfmt
  1928  003146  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1929  003148  C06D  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  1930  00314C  C06E  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1931  003150  EC19  F00E         	call	_vfpfcnvrt	;wreg free
  1932  003154  5044               	movf	?_vfpfcnvrt^0,w,c
  1933  003156  0100               	movlb	0	; () banked
  1934  003158  27A6               	addwf	_nout& (0+255),f,b
  1935  00315A  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  1936  00315C  23A7               	addwfc	(_nout+1)& (0+255),f,b
  1937  00315E                     l4738:
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1941  00315E  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1942  003162  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1943  003166                     	if	0	;tblptru may be non-zero
  1944  003166                     	endif
  1945  003166                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1946  003166  0E00               	movlw	low (__mediumconst shr (0+16))
  1947  003168  6EF8               	movwf	tblptru,c
  1948  00316A                     	endif
  1949  00316A  0008               	tblrd		*
  1950  00316C  50F5               	movf	tablat,w,c
  1951  00316E  0900               	iorlw	0
  1952  003170  A4D8               	btfss	status,2,c
  1953  003172  EFBD  F018         	goto	u4801
  1954  003176  EFBF  F018         	goto	u4800
  1955  00317A                     u4801:
  1956  00317A  EF9C  F018         	goto	l4736
  1957  00317E                     u4800:
  1958  00317E                     
  1959                           ; BSR set to: 0
  1960                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1961  00317E  C0A6  F069         	movff	_nout,?_vfprintf
  1962  003182  C0A7  F06A         	movff	_nout+1,?_vfprintf+1
  1963  003186                     
  1964                           ; BSR set to: 0
  1965  003186  0012               	return		;funcret
  1966  003188                     __end_of_vfprintf:
  1967                           	callstack 0
  1968                           
  1969 ;; *************** function _vfpfcnvrt *****************
  1970 ;; Defined at:
  1971 ;;		line 692 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  1974 ;;		 -> sprintf@f(11), 
  1975 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  1976 ;;		 -> vfprintf@cfmt(2), 
  1977 ;;  ap              2   71[COMRAM] PTR PTR void 
  1978 ;;		 -> sprintf@ap(2), 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  ll              8    0[BANK0 ] long long 
  1981 ;;  llu             8    0        unsigned long long 
  1982 ;;  f               4    0        unsigned long long 
  1983 ;;  vp              3    0        PTR void 
  1984 ;;  ct              3    0        unsigned char [3]
  1985 ;;  cp              3    0        PTR unsigned char 
  1986 ;;  i               2    0        int 
  1987 ;;  done            2    0        int 
  1988 ;;  c               1    8[BANK0 ] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  2   67[COMRAM] int 
  1991 ;; Registers used:
  1992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1998 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1999 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2000 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2001 ;;      Totals:        10       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2002 ;;Total ram usage:       19 bytes
  2003 ;; Hardware stack levels used: 1
  2004 ;; Hardware stack levels required when called: 9
  2005 ;; This function calls:
  2006 ;;		_atoi
  2007 ;;		_ctoa
  2008 ;;		_dtoa
  2009 ;;		_fputc
  2010 ;;		_isdigit
  2011 ;; This function is called by:
  2012 ;;		_vfprintf
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           	psect	text3
  2017  001C32                     __ptext3:
  2018                           	callstack 0
  2019  001C32                     _vfpfcnvrt:
  2020                           	callstack 19
  2021  001C32                     
  2022                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;D:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;D:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;D:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2023  001C32  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2024  001C36  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2025  001C3A  CFDE FFF6          	movff	postinc2,tblptrl
  2026  001C3E  CFDD FFF7          	movff	postdec2,tblptrh
  2027  001C42                     	if	0	;tblptru may be non-zero
  2028  001C42                     	endif
  2029  001C42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2030  001C42  0E00               	movlw	low (__mediumconst shr (0+16))
  2031  001C44  6EF8               	movwf	tblptru,c
  2032  001C46                     	endif
  2033  001C46  0008               	tblrd		*
  2034  001C48  50F5               	movf	tablat,w,c
  2035  001C4A  0A25               	xorlw	37
  2036  001C4C  A4D8               	btfss	status,2,c
  2037  001C4E  EF2B  F00E         	goto	u4721
  2038  001C52  EF2D  F00E         	goto	u4720
  2039  001C56                     u4721:
  2040  001C56  EF91  F00F         	goto	l4724
  2041  001C5A                     u4720:
  2042  001C5A                     
  2043                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2044  001C5A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2045  001C5E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2046  001C62  2ADE               	incf	postinc2,f,c
  2047  001C64  0E00               	movlw	0
  2048  001C66  22DD               	addwfc	postdec2,f,c
  2049  001C68                     
  2050                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2051  001C68  0E00               	movlw	0
  2052  001C6A  6E51               	movwf	(_width+1)^0,c
  2053  001C6C  0E00               	movlw	0
  2054  001C6E  6E50               	movwf	_width^0,c
  2055  001C70  C050  F052         	movff	_width,_flags
  2056  001C74  C051  F053         	movff	_width+1,_flags+1
  2057  001C78                     
  2058                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2059  001C78  0100               	movlb	0	; () banked
  2060  001C7A  69A8               	setf	_prec& (0+255),b
  2061  001C7C  69A9               	setf	(_prec+1)& (0+255),b
  2062  001C7E                     
  2063                           ; BSR set to: 0
  2064                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2065  001C7E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2066  001C82  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2067  001C86  CFDE FFF6          	movff	postinc2,tblptrl
  2068  001C8A  CFDD FFF7          	movff	postdec2,tblptrh
  2069  001C8E                     	if	0	;tblptru may be non-zero
  2070  001C8E                     	endif
  2071  001C8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2072  001C8E  0E00               	movlw	low (__mediumconst shr (0+16))
  2073  001C90  6EF8               	movwf	tblptru,c
  2074  001C92                     	endif
  2075  001C92  0008               	tblrd		*
  2076  001C94  50F5               	movf	tablat,w,c
  2077  001C96  0A2A               	xorlw	42
  2078  001C98  A4D8               	btfss	status,2,c
  2079  001C9A  EF51  F00E         	goto	u4731
  2080  001C9E  EF53  F00E         	goto	u4730
  2081  001CA2                     u4731:
  2082  001CA2  EF7C  F00E         	goto	l4682
  2083  001CA6                     u4730:
  2084  001CA6                     
  2085                           ; BSR set to: 0
  2086                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2087  001CA6  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2088  001CAA  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2089  001CAE  2ADE               	incf	postinc2,f,c
  2090  001CB0  0E00               	movlw	0
  2091  001CB2  22DD               	addwfc	postdec2,f,c
  2092                           
  2093                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2094  001CB4  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2095  001CB8  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2096  001CBC  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2097  001CC0  0E02               	movlw	2
  2098  001CC2  26DE               	addwf	postinc2,f,c
  2099  001CC4  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2100  001CC8  0E00               	movlw	0
  2101  001CCA  22DD               	addwfc	postdec2,f,c
  2102  001CCC  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2103  001CD0  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2104  001CD4  CFDE F050          	movff	postinc2,_width
  2105  001CD8  CFDD F051          	movff	postdec2,_width+1
  2106  001CDC                     
  2107                           ; BSR set to: 0
  2108                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2109  001CDC  BE51               	btfsc	(_width+1)^0,7,c
  2110  001CDE  EF75  F00E         	goto	u4740
  2111  001CE2  EF73  F00E         	goto	u4741
  2112  001CE6                     u4741:
  2113  001CE6  EFB4  F00E         	goto	l4690
  2114  001CEA                     u4740:
  2115  001CEA                     
  2116                           ; BSR set to: 0
  2117                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2118  001CEA  8052               	bsf	_flags^0,0,c
  2119                           
  2120                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2121  001CEC  6C50               	negf	_width^0,c
  2122  001CEE  1E51               	comf	(_width+1)^0,f,c
  2123  001CF0  B0D8               	btfsc	status,0,c
  2124  001CF2  2A51               	incf	(_width+1)^0,f,c
  2125  001CF4  EFB4  F00E         	goto	l4690
  2126  001CF8                     l4682:
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2130  001CF8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2131  001CFC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2132  001D00  CFDE F00C          	movff	postinc2,atoi@s
  2133  001D04  CFDD F00D          	movff	postdec2,atoi@s+1
  2134  001D08  ECBD  F012         	call	_atoi	;wreg free
  2135  001D0C  C00C  F050         	movff	?_atoi,_width
  2136  001D10  C00D  F051         	movff	?_atoi+1,_width+1
  2137                           
  2138                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2139  001D14  EF93  F00E         	goto	l4688
  2140  001D18                     l4684:
  2141                           
  2142                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2143  001D18  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2144  001D1C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2145  001D20  2ADE               	incf	postinc2,f,c
  2146  001D22  0E00               	movlw	0
  2147  001D24  22DD               	addwfc	postdec2,f,c
  2148  001D26                     l4688:
  2149  001D26  0ED0               	movlw	208
  2150  001D28  6E4A               	movwf	??_vfpfcnvrt^0,c
  2151  001D2A  0EFF               	movlw	255
  2152  001D2C  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  2153  001D2E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2154  001D32  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2155  001D36  CFDE FFF6          	movff	postinc2,tblptrl
  2156  001D3A  CFDD FFF7          	movff	postdec2,tblptrh
  2157  001D3E                     	if	0	;tblptru may be non-zero
  2158  001D3E                     	endif
  2159  001D3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2160  001D3E  0E00               	movlw	low (__mediumconst shr (0+16))
  2161  001D40  6EF8               	movwf	tblptru,c
  2162  001D42                     	endif
  2163  001D42  0008               	tblrd		*
  2164  001D44  50F5               	movf	tablat,w,c
  2165  001D46  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
  2166  001D48  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
  2167  001D4A  504A               	movf	??_vfpfcnvrt^0,w,c
  2168  001D4C  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2169  001D4E  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  2170  001D50  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2171  001D52  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
  2172  001D54  E109               	bnz	u4750
  2173  001D56  0E0A               	movlw	10
  2174  001D58  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2175  001D5A  A0D8               	btfss	status,0,c
  2176  001D5C  EFB2  F00E         	goto	u4751
  2177  001D60  EFB4  F00E         	goto	u4750
  2178  001D64                     u4751:
  2179  001D64  EF8C  F00E         	goto	l4684
  2180  001D68                     u4750:
  2181  001D68                     l4690:
  2182                           
  2183                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2184  001D68  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2185  001D6C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2186  001D70  CFDE FFF6          	movff	postinc2,tblptrl
  2187  001D74  CFDD FFF7          	movff	postdec2,tblptrh
  2188  001D78                     	if	0	;tblptru may be non-zero
  2189  001D78                     	endif
  2190  001D78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2191  001D78  0E00               	movlw	low (__mediumconst shr (0+16))
  2192  001D7A  6EF8               	movwf	tblptru,c
  2193  001D7C                     	endif
  2194  001D7C  0008               	tblrd		*
  2195  001D7E  50F5               	movf	tablat,w,c
  2196  001D80  0A63               	xorlw	99
  2197  001D82  A4D8               	btfss	status,2,c
  2198  001D84  EFC6  F00E         	goto	u4761
  2199  001D88  EFC8  F00E         	goto	u4760
  2200  001D8C                     u4761:
  2201  001D8C  EFF0  F00E         	goto	l4698
  2202  001D90                     u4760:
  2203  001D90                     
  2204                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2205  001D90  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2206  001D94  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2207  001D98  2ADE               	incf	postinc2,f,c
  2208  001D9A  0E00               	movlw	0
  2209  001D9C  22DD               	addwfc	postdec2,f,c
  2210                           
  2211                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2212  001D9E  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2213  001DA2  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2214  001DA6  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2215  001DAA  0E02               	movlw	2
  2216  001DAC  26DE               	addwf	postinc2,f,c
  2217  001DAE  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2218  001DB2  0E00               	movlw	0
  2219  001DB4  22DD               	addwfc	postdec2,f,c
  2220  001DB6  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2221  001DBA  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2222  001DBE  50DF               	movf	indf2,w,c
  2223  001DC0  0100               	movlb	0	; () banked
  2224  001DC2  6F68               	movwf	vfpfcnvrt@c& (0+255),b
  2225  001DC4                     
  2226                           ; BSR set to: 0
  2227                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2228  001DC4  C044  F00E         	movff	vfpfcnvrt@fp,ctoa@fp
  2229  001DC8  C045  F00F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2230  001DCC  C068  F010         	movff	vfpfcnvrt@c,ctoa@c
  2231  001DD0  EC25  F016         	call	_ctoa	;wreg free
  2232  001DD4  C00E  F044         	movff	?_ctoa,?_vfpfcnvrt
  2233  001DD8  C00F  F045         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2234  001DDC  EFAE  F00F         	goto	l1635
  2235  001DE0                     l4698:
  2236                           
  2237                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2238  001DE0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2239  001DE4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2240  001DE8  CFDE FFF6          	movff	postinc2,tblptrl
  2241  001DEC  CFDD FFF7          	movff	postdec2,tblptrh
  2242  001DF0                     	if	0	;tblptru may be non-zero
  2243  001DF0                     	endif
  2244  001DF0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2245  001DF0  0E00               	movlw	low (__mediumconst shr (0+16))
  2246  001DF2  6EF8               	movwf	tblptru,c
  2247  001DF4                     	endif
  2248  001DF4  0008               	tblrd		*
  2249  001DF6  50F5               	movf	tablat,w,c
  2250  001DF8  0A64               	xorlw	100
  2251  001DFA  B4D8               	btfsc	status,2,c
  2252  001DFC  EF02  F00F         	goto	u4771
  2253  001E00  EF04  F00F         	goto	u4770
  2254  001E04                     u4771:
  2255  001E04  EF18  F00F         	goto	l4702
  2256  001E08                     u4770:
  2257  001E08  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2258  001E0C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2259  001E10  CFDE FFF6          	movff	postinc2,tblptrl
  2260  001E14  CFDD FFF7          	movff	postdec2,tblptrh
  2261  001E18                     	if	0	;tblptru may be non-zero
  2262  001E18                     	endif
  2263  001E18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2264  001E18  0E00               	movlw	low (__mediumconst shr (0+16))
  2265  001E1A  6EF8               	movwf	tblptru,c
  2266  001E1C                     	endif
  2267  001E1C  0008               	tblrd		*
  2268  001E1E  50F5               	movf	tablat,w,c
  2269  001E20  0A69               	xorlw	105
  2270  001E22  A4D8               	btfss	status,2,c
  2271  001E24  EF16  F00F         	goto	u4781
  2272  001E28  EF18  F00F         	goto	u4780
  2273  001E2C                     u4781:
  2274  001E2C  EF59  F00F         	goto	l4708
  2275  001E30                     u4780:
  2276  001E30                     l4702:
  2277                           
  2278                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2279  001E30  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2280  001E34  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2281  001E38  2ADE               	incf	postinc2,f,c
  2282  001E3A  0E00               	movlw	0
  2283  001E3C  22DD               	addwfc	postdec2,f,c
  2284                           
  2285                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2286  001E3E  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2287  001E42  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2288  001E46  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2289  001E4A  0E02               	movlw	2
  2290  001E4C  26DE               	addwf	postinc2,f,c
  2291  001E4E  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2292  001E52  0E00               	movlw	0
  2293  001E54  22DD               	addwfc	postdec2,f,c
  2294  001E56  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2295  001E5A  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2296  001E5E  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  2297  001E62  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  2298  001E66  0100               	movlb	0	; () banked
  2299  001E68  0E00               	movlw	0
  2300  001E6A  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2301  001E6C  0EFF               	movlw	-1
  2302  001E6E  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2303  001E70  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2304  001E72  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2305  001E74  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2306  001E76  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2307  001E78  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2308  001E7A                     
  2309                           ; BSR set to: 0
  2310                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2311  001E7A  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  2312  001E7E  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2313  001E82  C060  F022         	movff	vfpfcnvrt@ll,dtoa@d
  2314  001E86  C061  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2315  001E8A  C062  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2316  001E8E  C063  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2317  001E92  C064  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2318  001E96  C065  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2319  001E9A  C066  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2320  001E9E  C067  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2321  001EA2  ECAF  F00F         	call	_dtoa	;wreg free
  2322  001EA6  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  2323  001EAA  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2324  001EAE  EFAE  F00F         	goto	l1635
  2325  001EB2                     l4708:
  2326                           
  2327                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2328  001EB2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2329  001EB6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2330  001EBA  CFDE FFF6          	movff	postinc2,tblptrl
  2331  001EBE  CFDD FFF7          	movff	postdec2,tblptrh
  2332  001EC2                     	if	0	;tblptru may be non-zero
  2333  001EC2                     	endif
  2334  001EC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2335  001EC2  0E00               	movlw	low (__mediumconst shr (0+16))
  2336  001EC4  6EF8               	movwf	tblptru,c
  2337  001EC6                     	endif
  2338  001EC6  0008               	tblrd		*
  2339  001EC8  50F5               	movf	tablat,w,c
  2340  001ECA  0A25               	xorlw	37
  2341  001ECC  A4D8               	btfss	status,2,c
  2342  001ECE  EF6B  F00F         	goto	u4791
  2343  001ED2  EF6D  F00F         	goto	u4790
  2344  001ED6                     u4791:
  2345  001ED6  EF84  F00F         	goto	l4718
  2346  001EDA                     u4790:
  2347  001EDA                     
  2348                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2349  001EDA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2350  001EDE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2351  001EE2  2ADE               	incf	postinc2,f,c
  2352  001EE4  0E00               	movlw	0
  2353  001EE6  22DD               	addwfc	postdec2,f,c
  2354  001EE8                     
  2355                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2356  001EE8  0E00               	movlw	0
  2357  001EEA  6E06               	movwf	(fputc@c+1)^0,c
  2358  001EEC  0E25               	movlw	37
  2359  001EEE  6E05               	movwf	fputc@c^0,c
  2360  001EF0  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2361  001EF4  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2362  001EF8  EC8F  F016         	call	_fputc	;wreg free
  2363  001EFC                     l4714:
  2364                           
  2365                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2366  001EFC  0E00               	movlw	0
  2367  001EFE  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2368  001F00  0E01               	movlw	1
  2369  001F02  6E44               	movwf	?_vfpfcnvrt^0,c
  2370  001F04  EFAE  F00F         	goto	l1635
  2371  001F08                     l4718:
  2372                           
  2373                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2374  001F08  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2375  001F0C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2376  001F10  2ADE               	incf	postinc2,f,c
  2377  001F12  0E00               	movlw	0
  2378  001F14  22DD               	addwfc	postdec2,f,c
  2379  001F16                     
  2380                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2381  001F16  0E00               	movlw	0
  2382  001F18  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  2383  001F1A  0E00               	movlw	0
  2384  001F1C  6E44               	movwf	?_vfpfcnvrt^0,c
  2385  001F1E  EFAE  F00F         	goto	l1635
  2386  001F22                     l4724:
  2387                           
  2388                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2389  001F22  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2390  001F26  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2391  001F2A  CFDE FFF6          	movff	postinc2,tblptrl
  2392  001F2E  CFDD FFF7          	movff	postdec2,tblptrh
  2393  001F32                     	if	0	;tblptru may be non-zero
  2394  001F32                     	endif
  2395  001F32                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2396  001F32  0E00               	movlw	low (__mediumconst shr (0+16))
  2397  001F34  6EF8               	movwf	tblptru,c
  2398  001F36                     	endif
  2399  001F36  0008               	tblrd		*
  2400  001F38  50F5               	movf	tablat,w,c
  2401  001F3A  6E05               	movwf	fputc@c^0,c
  2402  001F3C  6A06               	clrf	(fputc@c+1)^0,c
  2403  001F3E  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2404  001F42  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2405  001F46  EC8F  F016         	call	_fputc	;wreg free
  2406  001F4A                     
  2407                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2408  001F4A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2409  001F4E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2410  001F52  2ADE               	incf	postinc2,f,c
  2411  001F54  0E00               	movlw	0
  2412  001F56  22DD               	addwfc	postdec2,f,c
  2413  001F58  EF7E  F00F         	goto	l4714
  2414  001F5C                     l1635:
  2415  001F5C  0012               	return		;funcret
  2416  001F5E                     __end_of_vfpfcnvrt:
  2417                           	callstack 0
  2418                           
  2419 ;; *************** function _dtoa *****************
  2420 ;; Defined at:
  2421 ;;		line 287 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  2424 ;;		 -> sprintf@f(11), 
  2425 ;;  d               8   33[COMRAM] long long 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  n               8   57[COMRAM] long long 
  2428 ;;  i               2   65[COMRAM] int 
  2429 ;;  s               2   55[COMRAM] int 
  2430 ;;  w               2   53[COMRAM] int 
  2431 ;;  p               2   51[COMRAM] int 
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  2   31[COMRAM] int 
  2434 ;; Registers used:
  2435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2441 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2442 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2443 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2444 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2445 ;;Total ram usage:       36 bytes
  2446 ;; Hardware stack levels used: 1
  2447 ;; Hardware stack levels required when called: 8
  2448 ;; This function calls:
  2449 ;;		___aodiv
  2450 ;;		___aomod
  2451 ;;		_abs
  2452 ;;		_pad
  2453 ;; This function is called by:
  2454 ;;		_vfpfcnvrt
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text4
  2459  001F5E                     __ptext4:
  2460                           	callstack 0
  2461  001F5E                     _dtoa:
  2462                           	callstack 19
  2463  001F5E                     
  2464                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2465  001F5E  C022  F03A         	movff	dtoa@d,dtoa@n
  2466  001F62  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  2467  001F66  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  2468  001F6A  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  2469  001F6E  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  2470  001F72  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  2471  001F76  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  2472  001F7A  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  2473  001F7E                     
  2474                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2475  001F7E  BE41               	btfsc	(dtoa@n+7)^0,7,c
  2476  001F80  EFC4  F00F         	goto	u4531
  2477  001F84  EFC7  F00F         	goto	u4530
  2478  001F88                     u4531:
  2479  001F88  0E01               	movlw	1
  2480  001F8A  EFC8  F00F         	goto	u4540
  2481  001F8E                     u4530:
  2482  001F8E  0E00               	movlw	0
  2483  001F90                     u4540:
  2484  001F90  6E38               	movwf	dtoa@s^0,c
  2485  001F92  6A39               	clrf	(dtoa@s+1)^0,c
  2486                           
  2487                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2488  001F94  5038               	movf	dtoa@s^0,w,c
  2489  001F96  1039               	iorwf	(dtoa@s+1)^0,w,c
  2490  001F98  B4D8               	btfsc	status,2,c
  2491  001F9A  EFD1  F00F         	goto	u4551
  2492  001F9E  EFD3  F00F         	goto	u4550
  2493  001FA2                     u4551:
  2494  001FA2  EFE3  F00F         	goto	l4578
  2495  001FA6                     u4550:
  2496  001FA6                     
  2497                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2498  001FA6  1E41               	comf	(dtoa@n+7)^0,f,c
  2499  001FA8  1E40               	comf	(dtoa@n+6)^0,f,c
  2500  001FAA  1E3F               	comf	(dtoa@n+5)^0,f,c
  2501  001FAC  1E3E               	comf	(dtoa@n+4)^0,f,c
  2502  001FAE  1E3D               	comf	(dtoa@n+3)^0,f,c
  2503  001FB0  1E3C               	comf	(dtoa@n+2)^0,f,c
  2504  001FB2  1E3B               	comf	(dtoa@n+1)^0,f,c
  2505  001FB4  6C3A               	negf	dtoa@n^0,c
  2506  001FB6  0E00               	movlw	0
  2507  001FB8  223B               	addwfc	(dtoa@n+1)^0,f,c
  2508  001FBA  223C               	addwfc	(dtoa@n+2)^0,f,c
  2509  001FBC  223D               	addwfc	(dtoa@n+3)^0,f,c
  2510  001FBE  223E               	addwfc	(dtoa@n+4)^0,f,c
  2511  001FC0  223F               	addwfc	(dtoa@n+5)^0,f,c
  2512  001FC2  2240               	addwfc	(dtoa@n+6)^0,f,c
  2513  001FC4  2241               	addwfc	(dtoa@n+7)^0,f,c
  2514  001FC6                     l4578:
  2515                           
  2516                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2517  001FC6  0100               	movlb	0	; () banked
  2518  001FC8  BFA9               	btfsc	(_prec+1)& (0+255),7,b
  2519  001FCA  EFE9  F00F         	goto	u4561
  2520  001FCE  EFEB  F00F         	goto	u4560
  2521  001FD2                     u4561:
  2522  001FD2  EFEC  F00F         	goto	l4582
  2523  001FD6                     u4560:
  2524  001FD6                     
  2525                           ; BSR set to: 0
  2526                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2527  001FD6  9252               	bcf	_flags^0,1,c
  2528  001FD8                     l4582:
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2532  001FD8  BFA9               	btfsc	(_prec+1)& (0+255),7,b
  2533  001FDA  EFF9  F00F         	goto	u4570
  2534  001FDE  51A9               	movf	(_prec+1)& (0+255),w,b
  2535  001FE0  E106               	bnz	u4571
  2536  001FE2  05A8               	decf	_prec& (0+255),w,b
  2537  001FE4  B0D8               	btfsc	status,0,c
  2538  001FE6  EFF7  F00F         	goto	u4571
  2539  001FEA  EFF9  F00F         	goto	u4570
  2540  001FEE                     u4571:
  2541  001FEE  EFFF  F00F         	goto	l1602
  2542  001FF2                     u4570:
  2543  001FF2                     
  2544                           ; BSR set to: 0
  2545  001FF2  0E00               	movlw	0
  2546  001FF4  6E35               	movwf	(dtoa@p+1)^0,c
  2547  001FF6  0E01               	movlw	1
  2548  001FF8  6E34               	movwf	dtoa@p^0,c
  2549  001FFA  EF03  F010         	goto	l1604
  2550  001FFE                     l1602:
  2551                           
  2552                           ; BSR set to: 0
  2553  001FFE  C0A8  F034         	movff	_prec,dtoa@p
  2554  002002  C0A9  F035         	movff	_prec+1,dtoa@p+1
  2555  002006                     l1604:
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2559  002006  C050  F036         	movff	_width,dtoa@w
  2560  00200A  C051  F037         	movff	_width+1,dtoa@w+1
  2561  00200E                     
  2562                           ; BSR set to: 0
  2563                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2564  00200E  5038               	movf	dtoa@s^0,w,c
  2565  002010  1039               	iorwf	(dtoa@s+1)^0,w,c
  2566  002012  A4D8               	btfss	status,2,c
  2567  002014  EF0E  F010         	goto	u4581
  2568  002018  EF10  F010         	goto	u4580
  2569  00201C                     u4581:
  2570  00201C  EF17  F010         	goto	l4590
  2571  002020                     u4580:
  2572  002020                     
  2573                           ; BSR set to: 0
  2574  002020  A452               	btfss	_flags^0,2,c
  2575  002022  EF15  F010         	goto	u4591
  2576  002026  EF17  F010         	goto	u4590
  2577  00202A                     u4591:
  2578  00202A  EF1A  F010         	goto	l4592
  2579  00202E                     u4590:
  2580  00202E                     l4590:
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  2584  00202E  0636               	decf	dtoa@w^0,f,c
  2585  002030  A0D8               	btfss	status,0,c
  2586  002032  0637               	decf	(dtoa@w+1)^0,f,c
  2587  002034                     l4592:
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2591  002034  0E00               	movlw	0
  2592  002036  6E43               	movwf	(dtoa@i+1)^0,c
  2593  002038  0E1F               	movlw	31
  2594  00203A  6E42               	movwf	dtoa@i^0,c
  2595  00203C                     
  2596                           ; BSR set to: 0
  2597                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2598  00203C  0E00               	movlw	0
  2599  00203E  0101               	movlb	1	; () banked
  2600  002040  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2601                           
  2602                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2603  002042  EF9F  F010         	goto	l4606
  2604  002046                     l4596:
  2605                           
  2606                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  2607  002046  0642               	decf	dtoa@i^0,f,c
  2608  002048  A0D8               	btfss	status,0,c
  2609  00204A  0643               	decf	(dtoa@i+1)^0,f,c
  2610  00204C                     
  2611                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2612  00204C  0E00               	movlw	low _dbuf
  2613  00204E  2442               	addwf	dtoa@i^0,w,c
  2614  002050  6ED9               	movwf	fsr2l,c
  2615  002052  0E01               	movlw	high _dbuf
  2616  002054  2043               	addwfc	(dtoa@i+1)^0,w,c
  2617  002056  6EDA               	movwf	fsr2h,c
  2618  002058  C03A  F005         	movff	dtoa@n,___aomod@dividend
  2619  00205C  C03B  F006         	movff	dtoa@n+1,___aomod@dividend+1
  2620  002060  C03C  F007         	movff	dtoa@n+2,___aomod@dividend+2
  2621  002064  C03D  F008         	movff	dtoa@n+3,___aomod@dividend+3
  2622  002068  C03E  F009         	movff	dtoa@n+4,___aomod@dividend+4
  2623  00206C  C03F  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  2624  002070  C040  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  2625  002074  C041  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  2626  002078  0E0A               	movlw	10
  2627  00207A  6E0D               	movwf	___aomod@divisor^0,c
  2628  00207C  0E00               	movlw	0
  2629  00207E  6E0E               	movwf	(___aomod@divisor+1)^0,c
  2630  002080  0E00               	movlw	0
  2631  002082  6E0F               	movwf	(___aomod@divisor+2)^0,c
  2632  002084  0E00               	movlw	0
  2633  002086  6E10               	movwf	(___aomod@divisor+3)^0,c
  2634  002088  0E00               	movlw	0
  2635  00208A  6E11               	movwf	(___aomod@divisor+4)^0,c
  2636  00208C  0E00               	movlw	0
  2637  00208E  6E12               	movwf	(___aomod@divisor+5)^0,c
  2638  002090  0E00               	movlw	0
  2639  002092  6E13               	movwf	(___aomod@divisor+6)^0,c
  2640  002094  0E00               	movlw	0
  2641  002096  6E14               	movwf	(___aomod@divisor+7)^0,c
  2642  002098  EC72  F013         	call	___aomod	;wreg free
  2643  00209C  C005  F02A         	movff	?___aomod,??_dtoa
  2644  0020A0  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  2645  0020A4  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  2646  0020A8  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  2647  0020AC  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  2648  0020B0  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  2649  0020B4  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  2650  0020B8  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  2651  0020BC  C02A  F017         	movff	??_dtoa,abs@a
  2652  0020C0  C02C  F018         	movff	??_dtoa+2,abs@a+1
  2653  0020C4  EC2F  F01A         	call	_abs	;wreg free
  2654  0020C8  5017               	movf	?_abs^0,w,c
  2655  0020CA  0F30               	addlw	48
  2656  0020CC  6EDF               	movwf	indf2,c
  2657  0020CE                     
  2658                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  2659  0020CE  0634               	decf	dtoa@p^0,f,c
  2660  0020D0  A0D8               	btfss	status,0,c
  2661  0020D2  0635               	decf	(dtoa@p+1)^0,f,c
  2662  0020D4                     
  2663                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  2664  0020D4  0636               	decf	dtoa@w^0,f,c
  2665  0020D6  A0D8               	btfss	status,0,c
  2666  0020D8  0637               	decf	(dtoa@w+1)^0,f,c
  2667  0020DA                     
  2668                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2669  0020DA  C03A  F005         	movff	dtoa@n,___aodiv@dividend
  2670  0020DE  C03B  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  2671  0020E2  C03C  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  2672  0020E6  C03D  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  2673  0020EA  C03E  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  2674  0020EE  C03F  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  2675  0020F2  C040  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  2676  0020F6  C041  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  2677  0020FA  0E0A               	movlw	10
  2678  0020FC  6E0D               	movwf	___aodiv@divisor^0,c
  2679  0020FE  0E00               	movlw	0
  2680  002100  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  2681  002102  0E00               	movlw	0
  2682  002104  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  2683  002106  0E00               	movlw	0
  2684  002108  6E10               	movwf	(___aodiv@divisor+3)^0,c
  2685  00210A  0E00               	movlw	0
  2686  00210C  6E11               	movwf	(___aodiv@divisor+4)^0,c
  2687  00210E  0E00               	movlw	0
  2688  002110  6E12               	movwf	(___aodiv@divisor+5)^0,c
  2689  002112  0E00               	movlw	0
  2690  002114  6E13               	movwf	(___aodiv@divisor+6)^0,c
  2691  002116  0E00               	movlw	0
  2692  002118  6E14               	movwf	(___aodiv@divisor+7)^0,c
  2693  00211A  ECF9  F011         	call	___aodiv	;wreg free
  2694  00211E  C005  F03A         	movff	?___aodiv,dtoa@n
  2695  002122  C006  F03B         	movff	?___aodiv+1,dtoa@n+1
  2696  002126  C007  F03C         	movff	?___aodiv+2,dtoa@n+2
  2697  00212A  C008  F03D         	movff	?___aodiv+3,dtoa@n+3
  2698  00212E  C009  F03E         	movff	?___aodiv+4,dtoa@n+4
  2699  002132  C00A  F03F         	movff	?___aodiv+5,dtoa@n+5
  2700  002136  C00B  F040         	movff	?___aodiv+6,dtoa@n+6
  2701  00213A  C00C  F041         	movff	?___aodiv+7,dtoa@n+7
  2702  00213E                     l4606:
  2703                           
  2704                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2705  00213E  BE43               	btfsc	(dtoa@i+1)^0,7,c
  2706  002140  EFAA  F010         	goto	u4601
  2707  002144  5043               	movf	(dtoa@i+1)^0,w,c
  2708  002146  E108               	bnz	u4600
  2709  002148  0442               	decf	dtoa@i^0,w,c
  2710  00214A  A0D8               	btfss	status,0,c
  2711  00214C  EFAA  F010         	goto	u4601
  2712  002150  EFAC  F010         	goto	u4600
  2713  002154                     u4601:
  2714  002154  EFDC  F010         	goto	l4616
  2715  002158                     u4600:
  2716  002158  503A               	movf	dtoa@n^0,w,c
  2717  00215A  103B               	iorwf	(dtoa@n+1)^0,w,c
  2718  00215C  103C               	iorwf	(dtoa@n+2)^0,w,c
  2719  00215E  103D               	iorwf	(dtoa@n+3)^0,w,c
  2720  002160  103E               	iorwf	(dtoa@n+4)^0,w,c
  2721  002162  103F               	iorwf	(dtoa@n+5)^0,w,c
  2722  002164  1040               	iorwf	(dtoa@n+6)^0,w,c
  2723  002166  1041               	iorwf	(dtoa@n+7)^0,w,c
  2724  002168  A4D8               	btfss	status,2,c
  2725  00216A  EFB9  F010         	goto	u4611
  2726  00216E  EFBB  F010         	goto	u4610
  2727  002172                     u4611:
  2728  002172  EF23  F010         	goto	l4596
  2729  002176                     u4610:
  2730  002176  BE35               	btfsc	(dtoa@p+1)^0,7,c
  2731  002178  EFC8  F010         	goto	u4620
  2732  00217C  5035               	movf	(dtoa@p+1)^0,w,c
  2733  00217E  E106               	bnz	u4621
  2734  002180  0434               	decf	dtoa@p^0,w,c
  2735  002182  B0D8               	btfsc	status,0,c
  2736  002184  EFC6  F010         	goto	u4621
  2737  002188  EFC8  F010         	goto	u4620
  2738  00218C                     u4621:
  2739  00218C  EF23  F010         	goto	l4596
  2740  002190                     u4620:
  2741  002190  BE37               	btfsc	(dtoa@w+1)^0,7,c
  2742  002192  EFD3  F010         	goto	u4631
  2743  002196  5037               	movf	(dtoa@w+1)^0,w,c
  2744  002198  E108               	bnz	u4630
  2745  00219A  0436               	decf	dtoa@w^0,w,c
  2746  00219C  A0D8               	btfss	status,0,c
  2747  00219E  EFD3  F010         	goto	u4631
  2748  0021A2  EFD5  F010         	goto	u4630
  2749  0021A6                     u4631:
  2750  0021A6  EFDC  F010         	goto	l4616
  2751  0021AA                     u4630:
  2752  0021AA  B252               	btfsc	_flags^0,1,c
  2753  0021AC  EFDA  F010         	goto	u4641
  2754  0021B0  EFDC  F010         	goto	u4640
  2755  0021B4                     u4641:
  2756  0021B4  EF23  F010         	goto	l4596
  2757  0021B8                     u4640:
  2758  0021B8                     l4616:
  2759                           
  2760                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2761  0021B8  5038               	movf	dtoa@s^0,w,c
  2762  0021BA  1039               	iorwf	(dtoa@s+1)^0,w,c
  2763  0021BC  A4D8               	btfss	status,2,c
  2764  0021BE  EFE3  F010         	goto	u4651
  2765  0021C2  EFE5  F010         	goto	u4650
  2766  0021C6                     u4651:
  2767  0021C6  EFEC  F010         	goto	l4620
  2768  0021CA                     u4650:
  2769  0021CA  A452               	btfss	_flags^0,2,c
  2770  0021CC  EFEA  F010         	goto	u4661
  2771  0021D0  EFEC  F010         	goto	u4660
  2772  0021D4                     u4661:
  2773  0021D4  EF0A  F011         	goto	l4630
  2774  0021D8                     u4660:
  2775  0021D8                     l4620:
  2776                           
  2777                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  2778  0021D8  0642               	decf	dtoa@i^0,f,c
  2779  0021DA  A0D8               	btfss	status,0,c
  2780  0021DC  0643               	decf	(dtoa@i+1)^0,f,c
  2781  0021DE                     
  2782                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2783  0021DE  5038               	movf	dtoa@s^0,w,c
  2784  0021E0  1039               	iorwf	(dtoa@s+1)^0,w,c
  2785  0021E2  A4D8               	btfss	status,2,c
  2786  0021E4  EFF6  F010         	goto	u4671
  2787  0021E8  EFF8  F010         	goto	u4670
  2788  0021EC                     u4671:
  2789  0021EC  EFFE  F010         	goto	l4626
  2790  0021F0                     u4670:
  2791  0021F0  0E00               	movlw	0
  2792  0021F2  6E33               	movwf	(_dtoa$2331+1)^0,c
  2793  0021F4  0E2B               	movlw	43
  2794  0021F6  6E32               	movwf	_dtoa$2331^0,c
  2795  0021F8  EF02  F011         	goto	l4628
  2796  0021FC                     l4626:
  2797  0021FC  0E00               	movlw	0
  2798  0021FE  6E33               	movwf	(_dtoa$2331+1)^0,c
  2799  002200  0E2D               	movlw	45
  2800  002202  6E32               	movwf	_dtoa$2331^0,c
  2801  002204                     l4628:
  2802  002204  0E00               	movlw	low _dbuf
  2803  002206  2442               	addwf	dtoa@i^0,w,c
  2804  002208  6ED9               	movwf	fsr2l,c
  2805  00220A  0E01               	movlw	high _dbuf
  2806  00220C  2043               	addwfc	(dtoa@i+1)^0,w,c
  2807  00220E  6EDA               	movwf	fsr2h,c
  2808  002210  C032  FFDF         	movff	_dtoa$2331,indf2
  2809  002214                     l4630:
  2810                           
  2811                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2812  002214  C020  F015         	movff	dtoa@fp,pad@fp
  2813  002218  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  2814  00221C  0E00               	movlw	low _dbuf
  2815  00221E  2442               	addwf	dtoa@i^0,w,c
  2816  002220  6E17               	movwf	pad@buf^0,c
  2817  002222  0E01               	movlw	high _dbuf
  2818  002224  2043               	addwfc	(dtoa@i+1)^0,w,c
  2819  002226  6E18               	movwf	(pad@buf+1)^0,c
  2820  002228  C036  F019         	movff	dtoa@w,pad@p
  2821  00222C  C037  F01A         	movff	dtoa@w+1,pad@p+1
  2822  002230  ECBB  F017         	call	_pad	;wreg free
  2823  002234  C015  F020         	movff	?_pad,?_dtoa
  2824  002238  C016  F021         	movff	?_pad+1,?_dtoa+1
  2825  00223C  0012               	return		;funcret
  2826  00223E                     __end_of_dtoa:
  2827                           	callstack 0
  2828                           
  2829 ;; *************** function _pad *****************
  2830 ;; Defined at:
  2831 ;;		line 72 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2834 ;;		 -> sprintf@f(11), 
  2835 ;;  buf             2   22[COMRAM] PTR unsigned char 
  2836 ;;		 -> dbuf(32), 
  2837 ;;  p               2   24[COMRAM] int 
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  w               2   29[COMRAM] int 
  2840 ;;  i               2   27[COMRAM] int 
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  2   20[COMRAM] int 
  2843 ;; Registers used:
  2844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2850 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2851 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2852 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2853 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2854 ;;Total ram usage:       11 bytes
  2855 ;; Hardware stack levels used: 1
  2856 ;; Hardware stack levels required when called: 7
  2857 ;; This function calls:
  2858 ;;		_fputc
  2859 ;;		_fputs
  2860 ;;		_strlen
  2861 ;; This function is called by:
  2862 ;;		_dtoa
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           	psect	text5
  2867  002F76                     __ptext5:
  2868                           	callstack 0
  2869  002F76                     _pad:
  2870                           	callstack 19
  2871  002F76                     
  2872                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2873  002F76  A052               	btfss	_flags^0,0,c
  2874  002F78  EFC0  F017         	goto	u4391
  2875  002F7C  EFC2  F017         	goto	u4390
  2876  002F80                     u4391:
  2877  002F80  EFCC  F017         	goto	l4506
  2878  002F84                     u4390:
  2879  002F84                     
  2880                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2881  002F84  C017  F00E         	movff	pad@buf,fputs@s
  2882  002F88  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2883  002F8C  C015  F010         	movff	pad@fp,fputs@fp
  2884  002F90  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2885  002F94  ECEC  F019         	call	_fputs	;wreg free
  2886  002F98                     l4506:
  2887                           
  2888                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2889  002F98  BE1A               	btfsc	(pad@p+1)^0,7,c
  2890  002F9A  EFD1  F017         	goto	u4401
  2891  002F9E  EFD3  F017         	goto	u4400
  2892  002FA2                     u4401:
  2893  002FA2  EFD9  F017         	goto	l4510
  2894  002FA6                     u4400:
  2895  002FA6  C019  F01E         	movff	pad@p,pad@w
  2896  002FAA  C01A  F01F         	movff	pad@p+1,pad@w+1
  2897  002FAE  EFDD  F017         	goto	l1575
  2898  002FB2                     l4510:
  2899  002FB2  0E00               	movlw	0
  2900  002FB4  6E1F               	movwf	(pad@w+1)^0,c
  2901  002FB6  0E00               	movlw	0
  2902  002FB8  6E1E               	movwf	pad@w^0,c
  2903  002FBA                     l1575:
  2904                           
  2905                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2906  002FBA  0E00               	movlw	0
  2907  002FBC  6E1D               	movwf	(pad@i+1)^0,c
  2908  002FBE  0E00               	movlw	0
  2909  002FC0  6E1C               	movwf	pad@i^0,c
  2910                           
  2911                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2912  002FC2  EFEF  F017         	goto	l4516
  2913  002FC6                     l4512:
  2914                           
  2915                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2916  002FC6  0E00               	movlw	0
  2917  002FC8  6E06               	movwf	(fputc@c+1)^0,c
  2918  002FCA  0E20               	movlw	32
  2919  002FCC  6E05               	movwf	fputc@c^0,c
  2920  002FCE  C015  F007         	movff	pad@fp,fputc@fp
  2921  002FD2  C016  F008         	movff	pad@fp+1,fputc@fp+1
  2922  002FD6  EC8F  F016         	call	_fputc	;wreg free
  2923  002FDA                     
  2924                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2925  002FDA  4A1C               	infsnz	pad@i^0,f,c
  2926  002FDC  2A1D               	incf	(pad@i+1)^0,f,c
  2927  002FDE                     l4516:
  2928                           
  2929                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2930  002FDE  501E               	movf	pad@w^0,w,c
  2931  002FE0  5C1C               	subwf	pad@i^0,w,c
  2932  002FE2  501D               	movf	(pad@i+1)^0,w,c
  2933  002FE4  0A80               	xorlw	128
  2934  002FE6  6E1B               	movwf	??_pad^0,c
  2935  002FE8  501F               	movf	(pad@w+1)^0,w,c
  2936  002FEA  0A80               	xorlw	128
  2937  002FEC  581B               	subwfb	??_pad^0,w,c
  2938  002FEE  A0D8               	btfss	status,0,c
  2939  002FF0  EFFC  F017         	goto	u4411
  2940  002FF4  EFFE  F017         	goto	u4410
  2941  002FF8                     u4411:
  2942  002FF8  EFE3  F017         	goto	l4512
  2943  002FFC                     u4410:
  2944  002FFC                     
  2945                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2946  002FFC  B052               	btfsc	_flags^0,0,c
  2947  002FFE  EF03  F018         	goto	u4421
  2948  003002  EF05  F018         	goto	u4420
  2949  003006                     u4421:
  2950  003006  EF0F  F018         	goto	l4520
  2951  00300A                     u4420:
  2952  00300A                     
  2953                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2954  00300A  C017  F00E         	movff	pad@buf,fputs@s
  2955  00300E  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2956  003012  C015  F010         	movff	pad@fp,fputs@fp
  2957  003016  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2958  00301A  ECEC  F019         	call	_fputs	;wreg free
  2959  00301E                     l4520:
  2960                           
  2961                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2962  00301E  C017  F005         	movff	pad@buf,strlen@s
  2963  003022  C018  F006         	movff	pad@buf+1,strlen@s+1
  2964  003026  ECC4  F01A         	call	_strlen	;wreg free
  2965  00302A  501E               	movf	pad@w^0,w,c
  2966  00302C  2405               	addwf	?_strlen^0,w,c
  2967  00302E  6E15               	movwf	?_pad^0,c
  2968  003030  501F               	movf	(pad@w+1)^0,w,c
  2969  003032  2006               	addwfc	(?_strlen+1)^0,w,c
  2970  003034  6E16               	movwf	(?_pad+1)^0,c
  2971  003036  0012               	return		;funcret
  2972  003038                     __end_of_pad:
  2973                           	callstack 0
  2974                           
  2975 ;; *************** function _strlen *****************
  2976 ;; Defined at:
  2977 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2980 ;;		 -> dbuf(32), 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  a               2    6[COMRAM] PTR const unsigned char 
  2983 ;;		 -> dbuf(32), 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  2    4[COMRAM] unsigned int 
  2986 ;; Registers used:
  2987 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2994 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2996 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2997 ;;Total ram usage:        4 bytes
  2998 ;; Hardware stack levels used: 1
  2999 ;; Hardware stack levels required when called: 4
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_pad
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text6
  3008  003588                     __ptext6:
  3009                           	callstack 0
  3010  003588                     _strlen:
  3011                           	callstack 21
  3012  003588  C005  F007         	movff	strlen@s,strlen@a
  3013  00358C  C006  F008         	movff	strlen@s+1,strlen@a+1
  3014  003590  EFCC  F01A         	goto	l4410
  3015  003594                     l4408:
  3016  003594  4A05               	infsnz	strlen@s^0,f,c
  3017  003596  2A06               	incf	(strlen@s+1)^0,f,c
  3018  003598                     l4410:
  3019  003598  C005  FFD9         	movff	strlen@s,fsr2l
  3020  00359C  C006  FFDA         	movff	strlen@s+1,fsr2h
  3021  0035A0  50DF               	movf	indf2,w,c
  3022  0035A2  A4D8               	btfss	status,2,c
  3023  0035A4  EFD6  F01A         	goto	u4251
  3024  0035A8  EFD8  F01A         	goto	u4250
  3025  0035AC                     u4251:
  3026  0035AC  EFCA  F01A         	goto	l4408
  3027  0035B0                     u4250:
  3028  0035B0  5007               	movf	strlen@a^0,w,c
  3029  0035B2  5C05               	subwf	strlen@s^0,w,c
  3030  0035B4  6E05               	movwf	?_strlen^0,c
  3031  0035B6  5008               	movf	(strlen@a+1)^0,w,c
  3032  0035B8  5806               	subwfb	(strlen@s+1)^0,w,c
  3033  0035BA  6E06               	movwf	(?_strlen+1)^0,c
  3034  0035BC  0012               	return		;funcret
  3035  0035BE                     __end_of_strlen:
  3036                           	callstack 0
  3037                           
  3038 ;; *************** function _fputs *****************
  3039 ;; Defined at:
  3040 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  s               2   13[COMRAM] PTR const unsigned char 
  3043 ;;		 -> dbuf(32), 
  3044 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  3045 ;;		 -> sprintf@f(11), 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  i               2   18[COMRAM] int 
  3048 ;;  c               1   17[COMRAM] unsigned char 
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  2   13[COMRAM] int 
  3051 ;; Registers used:
  3052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3058 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3059 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3061 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3062 ;;Total ram usage:        7 bytes
  3063 ;; Hardware stack levels used: 1
  3064 ;; Hardware stack levels required when called: 6
  3065 ;; This function calls:
  3066 ;;		_fputc
  3067 ;; This function is called by:
  3068 ;;		_pad
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           	psect	text7
  3073  0033D8                     __ptext7:
  3074                           	callstack 0
  3075  0033D8                     _fputs:
  3076                           	callstack 19
  3077  0033D8  0E00               	movlw	0
  3078  0033DA  6E14               	movwf	(fputs@i+1)^0,c
  3079  0033DC  0E00               	movlw	0
  3080  0033DE  6E13               	movwf	fputs@i^0,c
  3081  0033E0  EFFD  F019         	goto	l4404
  3082  0033E4                     l4400:
  3083  0033E4  C012  F005         	movff	fputs@c,fputc@c
  3084  0033E8  6A06               	clrf	(fputc@c+1)^0,c
  3085  0033EA  C010  F007         	movff	fputs@fp,fputc@fp
  3086  0033EE  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  3087  0033F2  EC8F  F016         	call	_fputc	;wreg free
  3088  0033F6  4A13               	infsnz	fputs@i^0,f,c
  3089  0033F8  2A14               	incf	(fputs@i+1)^0,f,c
  3090  0033FA                     l4404:
  3091  0033FA  5013               	movf	fputs@i^0,w,c
  3092  0033FC  240E               	addwf	fputs@s^0,w,c
  3093  0033FE  6ED9               	movwf	fsr2l,c
  3094  003400  5014               	movf	(fputs@i+1)^0,w,c
  3095  003402  200F               	addwfc	(fputs@s+1)^0,w,c
  3096  003404  6EDA               	movwf	fsr2h,c
  3097  003406  50DF               	movf	indf2,w,c
  3098  003408  6E12               	movwf	fputs@c^0,c
  3099  00340A  5012               	movf	fputs@c^0,w,c
  3100  00340C  A4D8               	btfss	status,2,c
  3101  00340E  EF0B  F01A         	goto	u4241
  3102  003412  EF0D  F01A         	goto	u4240
  3103  003416                     u4241:
  3104  003416  EFF2  F019         	goto	l4400
  3105  00341A                     u4240:
  3106  00341A  0012               	return		;funcret
  3107  00341C                     __end_of_fputs:
  3108                           	callstack 0
  3109                           
  3110 ;; *************** function _abs *****************
  3111 ;; Defined at:
  3112 ;;		line 1 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  a               2   22[COMRAM] int 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  2   22[COMRAM] int 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3128 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3129 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3130 ;;Total ram usage:        4 bytes
  3131 ;; Hardware stack levels used: 1
  3132 ;; Hardware stack levels required when called: 4
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_dtoa
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text8
  3141  00345E                     __ptext8:
  3142                           	callstack 0
  3143  00345E                     _abs:
  3144                           	callstack 22
  3145  00345E  BE18               	btfsc	(abs@a+1)^0,7,c
  3146  003460  EF3C  F01A         	goto	u4430
  3147  003464  5018               	movf	(abs@a+1)^0,w,c
  3148  003466  E106               	bnz	u4431
  3149  003468  0417               	decf	abs@a^0,w,c
  3150  00346A  B0D8               	btfsc	status,0,c
  3151  00346C  EF3A  F01A         	goto	u4431
  3152  003470  EF3C  F01A         	goto	u4430
  3153  003474                     u4431:
  3154  003474  EF4A  F01A         	goto	l1649
  3155  003478                     u4430:
  3156  003478  C017  F019         	movff	abs@a,??_abs
  3157  00347C  C018  F01A         	movff	abs@a+1,??_abs+1
  3158  003480  1E19               	comf	??_abs^0,f,c
  3159  003482  1E1A               	comf	(??_abs+1)^0,f,c
  3160  003484  4A19               	infsnz	??_abs^0,f,c
  3161  003486  2A1A               	incf	(??_abs+1)^0,f,c
  3162  003488  C019  F017         	movff	??_abs,?_abs
  3163  00348C  C01A  F018         	movff	??_abs+1,?_abs+1
  3164  003490  EF4E  F01A         	goto	l1652
  3165  003494                     l1649:
  3166  003494  C017  F017         	movff	abs@a,?_abs
  3167  003498  C018  F018         	movff	abs@a+1,?_abs+1
  3168  00349C                     l1652:
  3169  00349C  0012               	return		;funcret
  3170  00349E                     __end_of_abs:
  3171                           	callstack 0
  3172                           
  3173 ;; *************** function ___aomod *****************
  3174 ;; Defined at:
  3175 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  dividend        8    4[COMRAM] long long 
  3178 ;;  divisor         8   12[COMRAM] long long 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  sign            1   21[COMRAM] unsigned char 
  3181 ;;  counter         1   20[COMRAM] unsigned char 
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  8    4[COMRAM] long long 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3191 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3194 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3195 ;;Total ram usage:       18 bytes
  3196 ;; Hardware stack levels used: 1
  3197 ;; Hardware stack levels required when called: 4
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_dtoa
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text9
  3206  0026E4                     __ptext9:
  3207                           	callstack 0
  3208  0026E4                     ___aomod:
  3209                           	callstack 22
  3210  0026E4  0E00               	movlw	0
  3211  0026E6  6E16               	movwf	___aomod@sign^0,c
  3212  0026E8  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  3213  0026EA  EF7B  F013         	goto	u4330
  3214  0026EE  EF79  F013         	goto	u4331
  3215  0026F2                     u4331:
  3216  0026F2  EF8D  F013         	goto	l4474
  3217  0026F6                     u4330:
  3218  0026F6  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3219  0026F8  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3220  0026FA  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3221  0026FC  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3222  0026FE  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3223  002700  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3224  002702  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3225  002704  6C05               	negf	___aomod@dividend^0,c
  3226  002706  0E00               	movlw	0
  3227  002708  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3228  00270A  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3229  00270C  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3230  00270E  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3231  002710  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3232  002712  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3233  002714  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3234  002716  0E01               	movlw	1
  3235  002718  6E16               	movwf	___aomod@sign^0,c
  3236  00271A                     l4474:
  3237  00271A  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  3238  00271C  EF94  F013         	goto	u4340
  3239  002720  EF92  F013         	goto	u4341
  3240  002724                     u4341:
  3241  002724  EFA4  F013         	goto	l4478
  3242  002728                     u4340:
  3243  002728  1E14               	comf	(___aomod@divisor+7)^0,f,c
  3244  00272A  1E13               	comf	(___aomod@divisor+6)^0,f,c
  3245  00272C  1E12               	comf	(___aomod@divisor+5)^0,f,c
  3246  00272E  1E11               	comf	(___aomod@divisor+4)^0,f,c
  3247  002730  1E10               	comf	(___aomod@divisor+3)^0,f,c
  3248  002732  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  3249  002734  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  3250  002736  6C0D               	negf	___aomod@divisor^0,c
  3251  002738  0E00               	movlw	0
  3252  00273A  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  3253  00273C  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  3254  00273E  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  3255  002740  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  3256  002742  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  3257  002744  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  3258  002746  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  3259  002748                     l4478:
  3260  002748  500D               	movf	___aomod@divisor^0,w,c
  3261  00274A  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  3262  00274C  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  3263  00274E  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  3264  002750  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  3265  002752  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  3266  002754  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  3267  002756  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  3268  002758  B4D8               	btfsc	status,2,c
  3269  00275A  EFB1  F013         	goto	u4351
  3270  00275E  EFB3  F013         	goto	u4350
  3271  002762                     u4351:
  3272  002762  EFFB  F013         	goto	l4494
  3273  002766                     u4350:
  3274  002766  0E01               	movlw	1
  3275  002768  6E15               	movwf	___aomod@counter^0,c
  3276  00276A  EFC1  F013         	goto	l4484
  3277  00276E                     l4482:
  3278  00276E  90D8               	bcf	status,0,c
  3279  002770  360D               	rlcf	___aomod@divisor^0,f,c
  3280  002772  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  3281  002774  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  3282  002776  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  3283  002778  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  3284  00277A  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  3285  00277C  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  3286  00277E  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  3287  002780  2A15               	incf	___aomod@counter^0,f,c
  3288  002782                     l4484:
  3289  002782  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  3290  002784  EFC6  F013         	goto	u4361
  3291  002788  EFC8  F013         	goto	u4360
  3292  00278C                     u4361:
  3293  00278C  EFB7  F013         	goto	l4482
  3294  002790                     u4360:
  3295  002790                     l4486:
  3296  002790  500D               	movf	___aomod@divisor^0,w,c
  3297  002792  5C05               	subwf	___aomod@dividend^0,w,c
  3298  002794  500E               	movf	(___aomod@divisor+1)^0,w,c
  3299  002796  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  3300  002798  500F               	movf	(___aomod@divisor+2)^0,w,c
  3301  00279A  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  3302  00279C  5010               	movf	(___aomod@divisor+3)^0,w,c
  3303  00279E  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  3304  0027A0  5011               	movf	(___aomod@divisor+4)^0,w,c
  3305  0027A2  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  3306  0027A4  5012               	movf	(___aomod@divisor+5)^0,w,c
  3307  0027A6  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  3308  0027A8  5013               	movf	(___aomod@divisor+6)^0,w,c
  3309  0027AA  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  3310  0027AC  5014               	movf	(___aomod@divisor+7)^0,w,c
  3311  0027AE  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  3312  0027B0  A0D8               	btfss	status,0,c
  3313  0027B2  EFDD  F013         	goto	u4371
  3314  0027B6  EFDF  F013         	goto	u4370
  3315  0027BA                     u4371:
  3316  0027BA  EFEF  F013         	goto	l4490
  3317  0027BE                     u4370:
  3318  0027BE  500D               	movf	___aomod@divisor^0,w,c
  3319  0027C0  5E05               	subwf	___aomod@dividend^0,f,c
  3320  0027C2  500E               	movf	(___aomod@divisor+1)^0,w,c
  3321  0027C4  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  3322  0027C6  500F               	movf	(___aomod@divisor+2)^0,w,c
  3323  0027C8  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  3324  0027CA  5010               	movf	(___aomod@divisor+3)^0,w,c
  3325  0027CC  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  3326  0027CE  5011               	movf	(___aomod@divisor+4)^0,w,c
  3327  0027D0  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  3328  0027D2  5012               	movf	(___aomod@divisor+5)^0,w,c
  3329  0027D4  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  3330  0027D6  5013               	movf	(___aomod@divisor+6)^0,w,c
  3331  0027D8  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  3332  0027DA  5014               	movf	(___aomod@divisor+7)^0,w,c
  3333  0027DC  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  3334  0027DE                     l4490:
  3335  0027DE  90D8               	bcf	status,0,c
  3336  0027E0  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  3337  0027E2  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  3338  0027E4  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  3339  0027E6  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  3340  0027E8  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  3341  0027EA  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  3342  0027EC  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  3343  0027EE  320D               	rrcf	___aomod@divisor^0,f,c
  3344  0027F0  2E15               	decfsz	___aomod@counter^0,f,c
  3345  0027F2  EFC8  F013         	goto	l4486
  3346  0027F6                     l4494:
  3347  0027F6  5016               	movf	___aomod@sign^0,w,c
  3348  0027F8  B4D8               	btfsc	status,2,c
  3349  0027FA  EF01  F014         	goto	u4381
  3350  0027FE  EF03  F014         	goto	u4380
  3351  002802                     u4381:
  3352  002802  EF13  F014         	goto	l4498
  3353  002806                     u4380:
  3354  002806  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3355  002808  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3356  00280A  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3357  00280C  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3358  00280E  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3359  002810  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3360  002812  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3361  002814  6C05               	negf	___aomod@dividend^0,c
  3362  002816  0E00               	movlw	0
  3363  002818  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3364  00281A  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3365  00281C  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3366  00281E  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3367  002820  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3368  002822  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3369  002824  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3370  002826                     l4498:
  3371  002826  C005  F005         	movff	___aomod@dividend,?___aomod
  3372  00282A  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  3373  00282E  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  3374  002832  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  3375  002836  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  3376  00283A  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  3377  00283E  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  3378  002842  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  3379  002846  0012               	return		;funcret
  3380  002848                     __end_of___aomod:
  3381                           	callstack 0
  3382                           
  3383 ;; *************** function ___aodiv *****************
  3384 ;; Defined at:
  3385 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  dividend        8    4[COMRAM] long long 
  3388 ;;  divisor         8   12[COMRAM] long long 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  quotient        8   22[COMRAM] long long 
  3391 ;;  sign            1   21[COMRAM] unsigned char 
  3392 ;;  counter         1   20[COMRAM] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  8    4[COMRAM] long long 
  3395 ;; Registers used:
  3396 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3402 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3403 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3405 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3406 ;;Total ram usage:       26 bytes
  3407 ;; Hardware stack levels used: 1
  3408 ;; Hardware stack levels required when called: 4
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_dtoa
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text10
  3417  0023F2                     __ptext10:
  3418                           	callstack 0
  3419  0023F2                     ___aodiv:
  3420                           	callstack 22
  3421  0023F2  0E00               	movlw	0
  3422  0023F4  6E16               	movwf	___aodiv@sign^0,c
  3423  0023F6  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  3424  0023F8  EF02  F012         	goto	u4260
  3425  0023FC  EF00  F012         	goto	u4261
  3426  002400                     u4261:
  3427  002400  EF14  F012         	goto	l4430
  3428  002404                     u4260:
  3429  002404  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  3430  002406  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  3431  002408  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  3432  00240A  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  3433  00240C  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  3434  00240E  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  3435  002410  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  3436  002412  6C0D               	negf	___aodiv@divisor^0,c
  3437  002414  0E00               	movlw	0
  3438  002416  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  3439  002418  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  3440  00241A  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  3441  00241C  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  3442  00241E  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  3443  002420  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  3444  002422  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  3445  002424  0E01               	movlw	1
  3446  002426  6E16               	movwf	___aodiv@sign^0,c
  3447  002428                     l4430:
  3448  002428  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  3449  00242A  EF1B  F012         	goto	u4270
  3450  00242E  EF19  F012         	goto	u4271
  3451  002432                     u4271:
  3452  002432  EF2D  F012         	goto	l4436
  3453  002436                     u4270:
  3454  002436  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  3455  002438  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  3456  00243A  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  3457  00243C  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  3458  00243E  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  3459  002440  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  3460  002442  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  3461  002444  6C05               	negf	___aodiv@dividend^0,c
  3462  002446  0E00               	movlw	0
  3463  002448  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  3464  00244A  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  3465  00244C  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  3466  00244E  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  3467  002450  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  3468  002452  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  3469  002454  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  3470  002456  0E01               	movlw	1
  3471  002458  1A16               	xorwf	___aodiv@sign^0,f,c
  3472  00245A                     l4436:
  3473  00245A  EE20  F017         	lfsr	2,___aodiv@quotient
  3474  00245E  0E07               	movlw	7
  3475  002460                     u4281:
  3476  002460  6ADE               	clrf	postinc2,c
  3477  002462  06E8               	decf	wreg,f,c
  3478  002464  E2FD               	bc	u4281
  3479  002466  500D               	movf	___aodiv@divisor^0,w,c
  3480  002468  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  3481  00246A  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  3482  00246C  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  3483  00246E  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  3484  002470  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  3485  002472  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  3486  002474  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  3487  002476  B4D8               	btfsc	status,2,c
  3488  002478  EF40  F012         	goto	u4291
  3489  00247C  EF42  F012         	goto	u4290
  3490  002480                     u4291:
  3491  002480  EF94  F012         	goto	l4458
  3492  002484                     u4290:
  3493  002484  0E01               	movlw	1
  3494  002486  6E15               	movwf	___aodiv@counter^0,c
  3495  002488  EF50  F012         	goto	l4444
  3496  00248C                     l4442:
  3497  00248C  90D8               	bcf	status,0,c
  3498  00248E  360D               	rlcf	___aodiv@divisor^0,f,c
  3499  002490  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  3500  002492  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  3501  002494  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  3502  002496  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  3503  002498  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  3504  00249A  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  3505  00249C  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  3506  00249E  2A15               	incf	___aodiv@counter^0,f,c
  3507  0024A0                     l4444:
  3508  0024A0  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  3509  0024A2  EF55  F012         	goto	u4301
  3510  0024A6  EF57  F012         	goto	u4300
  3511  0024AA                     u4301:
  3512  0024AA  EF46  F012         	goto	l4442
  3513  0024AE                     u4300:
  3514  0024AE                     l4446:
  3515  0024AE  90D8               	bcf	status,0,c
  3516  0024B0  3617               	rlcf	___aodiv@quotient^0,f,c
  3517  0024B2  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  3518  0024B4  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  3519  0024B6  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  3520  0024B8  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  3521  0024BA  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  3522  0024BC  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  3523  0024BE  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  3524  0024C0  500D               	movf	___aodiv@divisor^0,w,c
  3525  0024C2  5C05               	subwf	___aodiv@dividend^0,w,c
  3526  0024C4  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3527  0024C6  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  3528  0024C8  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3529  0024CA  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  3530  0024CC  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3531  0024CE  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  3532  0024D0  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3533  0024D2  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  3534  0024D4  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3535  0024D6  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  3536  0024D8  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3537  0024DA  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  3538  0024DC  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3539  0024DE  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  3540  0024E0  A0D8               	btfss	status,0,c
  3541  0024E2  EF75  F012         	goto	u4311
  3542  0024E6  EF77  F012         	goto	u4310
  3543  0024EA                     u4311:
  3544  0024EA  EF88  F012         	goto	l4454
  3545  0024EE                     u4310:
  3546  0024EE  500D               	movf	___aodiv@divisor^0,w,c
  3547  0024F0  5E05               	subwf	___aodiv@dividend^0,f,c
  3548  0024F2  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3549  0024F4  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  3550  0024F6  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3551  0024F8  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  3552  0024FA  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3553  0024FC  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  3554  0024FE  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3555  002500  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  3556  002502  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3557  002504  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  3558  002506  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3559  002508  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  3560  00250A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3561  00250C  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  3562  00250E  8017               	bsf	___aodiv@quotient^0,0,c
  3563  002510                     l4454:
  3564  002510  90D8               	bcf	status,0,c
  3565  002512  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  3566  002514  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  3567  002516  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  3568  002518  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  3569  00251A  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  3570  00251C  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  3571  00251E  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  3572  002520  320D               	rrcf	___aodiv@divisor^0,f,c
  3573  002522  2E15               	decfsz	___aodiv@counter^0,f,c
  3574  002524  EF57  F012         	goto	l4446
  3575  002528                     l4458:
  3576  002528  5016               	movf	___aodiv@sign^0,w,c
  3577  00252A  B4D8               	btfsc	status,2,c
  3578  00252C  EF9A  F012         	goto	u4321
  3579  002530  EF9C  F012         	goto	u4320
  3580  002534                     u4321:
  3581  002534  EFAC  F012         	goto	l4462
  3582  002538                     u4320:
  3583  002538  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  3584  00253A  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  3585  00253C  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  3586  00253E  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  3587  002540  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  3588  002542  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  3589  002544  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  3590  002546  6C17               	negf	___aodiv@quotient^0,c
  3591  002548  0E00               	movlw	0
  3592  00254A  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  3593  00254C  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  3594  00254E  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  3595  002550  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  3596  002552  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  3597  002554  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  3598  002556  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  3599  002558                     l4462:
  3600  002558  C017  F005         	movff	___aodiv@quotient,?___aodiv
  3601  00255C  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  3602  002560  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  3603  002564  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  3604  002568  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  3605  00256C  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  3606  002570  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  3607  002574  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  3608  002578  0012               	return		;funcret
  3609  00257A                     __end_of___aodiv:
  3610                           	callstack 0
  3611                           
  3612 ;; *************** function _ctoa *****************
  3613 ;; Defined at:
  3614 ;;		line 259 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  3617 ;;		 -> sprintf@f(11), 
  3618 ;;  c               1   15[COMRAM] unsigned char 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  w               2   19[COMRAM] int 
  3621 ;;  l               2   17[COMRAM] int 
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  2   13[COMRAM] int 
  3624 ;; Registers used:
  3625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3631 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3632 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3633 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3634 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3635 ;;Total ram usage:        8 bytes
  3636 ;; Hardware stack levels used: 1
  3637 ;; Hardware stack levels required when called: 6
  3638 ;; This function calls:
  3639 ;;		_fputc
  3640 ;; This function is called by:
  3641 ;;		_vfpfcnvrt
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           	psect	text11
  3646  002C4A                     __ptext11:
  3647                           	callstack 0
  3648  002C4A                     _ctoa:
  3649                           	callstack 21
  3650  002C4A                     
  3651                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt
      +                          .c: 260: {;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  3652  002C4A  5050               	movf	_width^0,w,c
  3653  002C4C  1051               	iorwf	(_width+1)^0,w,c
  3654  002C4E  A4D8               	btfss	status,2,c
  3655  002C50  EF2C  F016         	goto	u4481
  3656  002C54  EF2E  F016         	goto	u4480
  3657  002C58                     u4481:
  3658  002C58  EF34  F016         	goto	l4548
  3659  002C5C                     u4480:
  3660  002C5C  C050  F014         	movff	_width,ctoa@w
  3661  002C60  C051  F015         	movff	_width+1,ctoa@w+1
  3662  002C64  EF3A  F016         	goto	l4550
  3663  002C68                     l4548:
  3664  002C68  0EFF               	movlw	255
  3665  002C6A  2450               	addwf	_width^0,w,c
  3666  002C6C  6E14               	movwf	ctoa@w^0,c
  3667  002C6E  0EFF               	movlw	255
  3668  002C70  2051               	addwfc	(_width+1)^0,w,c
  3669  002C72  6E15               	movwf	(ctoa@w+1)^0,c
  3670  002C74                     l4550:
  3671                           
  3672                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  3673  002C74  A052               	btfss	_flags^0,0,c
  3674  002C76  EF3F  F016         	goto	u4491
  3675  002C7A  EF41  F016         	goto	u4490
  3676  002C7E                     u4491:
  3677  002C7E  EF4A  F016         	goto	l4554
  3678  002C82                     u4490:
  3679  002C82                     
  3680                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  3681  002C82  C010  F005         	movff	ctoa@c,fputc@c
  3682  002C86  6A06               	clrf	(fputc@c+1)^0,c
  3683  002C88  C00E  F007         	movff	ctoa@fp,fputc@fp
  3684  002C8C  C00F  F008         	movff	ctoa@fp+1,fputc@fp+1
  3685  002C90  EC8F  F016         	call	_fputc	;wreg free
  3686  002C94                     l4554:
  3687                           
  3688                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  3689  002C94  BE15               	btfsc	(ctoa@w+1)^0,7,c
  3690  002C96  EF4F  F016         	goto	u4501
  3691  002C9A  EF51  F016         	goto	u4500
  3692  002C9E                     u4501:
  3693  002C9E  EF53  F016         	goto	l4558
  3694  002CA2                     u4500:
  3695  002CA2  EF57  F016         	goto	l1591
  3696  002CA6                     l4558:
  3697  002CA6  0E00               	movlw	0
  3698  002CA8  6E15               	movwf	(ctoa@w+1)^0,c
  3699  002CAA  0E00               	movlw	0
  3700  002CAC  6E14               	movwf	ctoa@w^0,c
  3701  002CAE                     l1591:
  3702                           
  3703                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  3704  002CAE  0E00               	movlw	0
  3705  002CB0  6E13               	movwf	(ctoa@l+1)^0,c
  3706  002CB2  0E00               	movlw	0
  3707  002CB4  6E12               	movwf	ctoa@l^0,c
  3708                           
  3709                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3710  002CB6  EF69  F016         	goto	l4564
  3711  002CBA                     l4560:
  3712                           
  3713                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  3714  002CBA  0E00               	movlw	0
  3715  002CBC  6E06               	movwf	(fputc@c+1)^0,c
  3716  002CBE  0E20               	movlw	32
  3717  002CC0  6E05               	movwf	fputc@c^0,c
  3718  002CC2  C00E  F007         	movff	ctoa@fp,fputc@fp
  3719  002CC6  C00F  F008         	movff	ctoa@fp+1,fputc@fp+1
  3720  002CCA  EC8F  F016         	call	_fputc	;wreg free
  3721  002CCE                     
  3722                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 275:         ++l;
  3723  002CCE  4A12               	infsnz	ctoa@l^0,f,c
  3724  002CD0  2A13               	incf	(ctoa@l+1)^0,f,c
  3725  002CD2                     l4564:
  3726                           
  3727                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3728  002CD2  5014               	movf	ctoa@w^0,w,c
  3729  002CD4  5C12               	subwf	ctoa@l^0,w,c
  3730  002CD6  5013               	movf	(ctoa@l+1)^0,w,c
  3731  002CD8  0A80               	xorlw	128
  3732  002CDA  6E11               	movwf	??_ctoa^0,c
  3733  002CDC  5015               	movf	(ctoa@w+1)^0,w,c
  3734  002CDE  0A80               	xorlw	128
  3735  002CE0  5811               	subwfb	??_ctoa^0,w,c
  3736  002CE2  A0D8               	btfss	status,0,c
  3737  002CE4  EF76  F016         	goto	u4511
  3738  002CE8  EF78  F016         	goto	u4510
  3739  002CEC                     u4511:
  3740  002CEC  EF5D  F016         	goto	l4560
  3741  002CF0                     u4510:
  3742  002CF0                     
  3743                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  3744  002CF0  B052               	btfsc	_flags^0,0,c
  3745  002CF2  EF7D  F016         	goto	u4521
  3746  002CF6  EF7F  F016         	goto	u4520
  3747  002CFA                     u4521:
  3748  002CFA  EF88  F016         	goto	l4568
  3749  002CFE                     u4520:
  3750  002CFE                     
  3751                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  3752  002CFE  C010  F005         	movff	ctoa@c,fputc@c
  3753  002D02  6A06               	clrf	(fputc@c+1)^0,c
  3754  002D04  C00E  F007         	movff	ctoa@fp,fputc@fp
  3755  002D08  C00F  F008         	movff	ctoa@fp+1,fputc@fp+1
  3756  002D0C  EC8F  F016         	call	_fputc	;wreg free
  3757  002D10                     l4568:
  3758                           
  3759                           ;D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  3760  002D10  0E01               	movlw	1
  3761  002D12  2412               	addwf	ctoa@l^0,w,c
  3762  002D14  6E0E               	movwf	?_ctoa^0,c
  3763  002D16  0E00               	movlw	0
  3764  002D18  2013               	addwfc	(ctoa@l+1)^0,w,c
  3765  002D1A  6E0F               	movwf	(?_ctoa+1)^0,c
  3766  002D1C  0012               	return		;funcret
  3767  002D1E                     __end_of_ctoa:
  3768                           	callstack 0
  3769                           
  3770 ;; *************** function _fputc *****************
  3771 ;; Defined at:
  3772 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;  c               2    4[COMRAM] int 
  3775 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  3776 ;;		 -> sprintf@f(11), 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;		None
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  2    4[COMRAM] int 
  3781 ;; Registers used:
  3782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3788 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3790 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3791 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3792 ;;Total ram usage:        9 bytes
  3793 ;; Hardware stack levels used: 1
  3794 ;; Hardware stack levels required when called: 5
  3795 ;; This function calls:
  3796 ;;		_putch
  3797 ;; This function is called by:
  3798 ;;		_pad
  3799 ;;		_ctoa
  3800 ;;		_vfpfcnvrt
  3801 ;;		_fputs
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text12
  3806  002D1E                     __ptext12:
  3807                           	callstack 0
  3808  002D1E                     _fputc:
  3809                           	callstack 22
  3810  002D1E  5007               	movf	fputc@fp^0,w,c
  3811  002D20  1008               	iorwf	(fputc@fp+1)^0,w,c
  3812  002D22  B4D8               	btfsc	status,2,c
  3813  002D24  EF96  F016         	goto	u4201
  3814  002D28  EF98  F016         	goto	u4200
  3815  002D2C                     u4201:
  3816  002D2C  EFA1  F016         	goto	l4388
  3817  002D30                     u4200:
  3818  002D30  5007               	movf	fputc@fp^0,w,c
  3819  002D32  1008               	iorwf	(fputc@fp+1)^0,w,c
  3820  002D34  A4D8               	btfss	status,2,c
  3821  002D36  EF9F  F016         	goto	u4211
  3822  002D3A  EFA1  F016         	goto	u4210
  3823  002D3E                     u4211:
  3824  002D3E  EFA6  F016         	goto	l4390
  3825  002D42                     u4210:
  3826  002D42                     l4388:
  3827  002D42  5005               	movf	fputc@c^0,w,c
  3828  002D44  EC61  F01C         	call	_putch
  3829  002D48  EFF3  F016         	goto	l1703
  3830  002D4C                     l4390:
  3831  002D4C  EE20 F009          	lfsr	2,9
  3832  002D50  5007               	movf	fputc@fp^0,w,c
  3833  002D52  26D9               	addwf	fsr2l,f,c
  3834  002D54  5008               	movf	(fputc@fp+1)^0,w,c
  3835  002D56  22DA               	addwfc	fsr2h,f,c
  3836  002D58  50DE               	movf	postinc2,w,c
  3837  002D5A  10DE               	iorwf	postinc2,w,c
  3838  002D5C  B4D8               	btfsc	status,2,c
  3839  002D5E  EFB3  F016         	goto	u4221
  3840  002D62  EFB5  F016         	goto	u4220
  3841  002D66                     u4221:
  3842  002D66  EFD0  F016         	goto	l4394
  3843  002D6A                     u4220:
  3844  002D6A  EE20 F009          	lfsr	2,9
  3845  002D6E  5007               	movf	fputc@fp^0,w,c
  3846  002D70  26D9               	addwf	fsr2l,f,c
  3847  002D72  5008               	movf	(fputc@fp+1)^0,w,c
  3848  002D74  22DA               	addwfc	fsr2h,f,c
  3849  002D76  EE10 F003          	lfsr	1,3
  3850  002D7A  5007               	movf	fputc@fp^0,w,c
  3851  002D7C  26E1               	addwf	fsr1l,f,c
  3852  002D7E  5008               	movf	(fputc@fp+1)^0,w,c
  3853  002D80  22E2               	addwfc	fsr1h,f,c
  3854  002D82  50DE               	movf	postinc2,w,c
  3855  002D84  5CE6               	subwf	postinc1,w,c
  3856  002D86  50E6               	movf	postinc1,w,c
  3857  002D88  0A80               	xorlw	128
  3858  002D8A  6E0D               	movwf	(??_fputc+4)^0,c
  3859  002D8C  50DE               	movf	postinc2,w,c
  3860  002D8E  0A80               	xorlw	128
  3861  002D90  580D               	subwfb	(??_fputc+4)^0,w,c
  3862  002D92  B0D8               	btfsc	status,0,c
  3863  002D94  EFCE  F016         	goto	u4231
  3864  002D98  EFD0  F016         	goto	u4230
  3865  002D9C                     u4231:
  3866  002D9C  EFF3  F016         	goto	l1703
  3867  002DA0                     u4230:
  3868  002DA0                     l4394:
  3869  002DA0  EE20 F003          	lfsr	2,3
  3870  002DA4  5007               	movf	fputc@fp^0,w,c
  3871  002DA6  26D9               	addwf	fsr2l,f,c
  3872  002DA8  5008               	movf	(fputc@fp+1)^0,w,c
  3873  002DAA  22DA               	addwfc	fsr2h,f,c
  3874  002DAC  CFDE F009          	movff	postinc2,??_fputc
  3875  002DB0  CFDD F00A          	movff	postdec2,??_fputc+1
  3876  002DB4  C007  FFD9         	movff	fputc@fp,fsr2l
  3877  002DB8  C008  FFDA         	movff	fputc@fp+1,fsr2h
  3878  002DBC  CFDE F00B          	movff	postinc2,??_fputc+2
  3879  002DC0  CFDD F00C          	movff	postdec2,??_fputc+3
  3880  002DC4  5009               	movf	??_fputc^0,w,c
  3881  002DC6  240B               	addwf	(??_fputc+2)^0,w,c
  3882  002DC8  6ED9               	movwf	fsr2l,c
  3883  002DCA  500A               	movf	(??_fputc+1)^0,w,c
  3884  002DCC  200C               	addwfc	(??_fputc+3)^0,w,c
  3885  002DCE  6EDA               	movwf	fsr2h,c
  3886  002DD0  C005  FFDF         	movff	fputc@c,indf2
  3887  002DD4  EE20 F003          	lfsr	2,3
  3888  002DD8  5007               	movf	fputc@fp^0,w,c
  3889  002DDA  26D9               	addwf	fsr2l,f,c
  3890  002DDC  5008               	movf	(fputc@fp+1)^0,w,c
  3891  002DDE  22DA               	addwfc	fsr2h,f,c
  3892  002DE0  2ADE               	incf	postinc2,f,c
  3893  002DE2  0E00               	movlw	0
  3894  002DE4  22DD               	addwfc	postdec2,f,c
  3895  002DE6                     l1703:
  3896  002DE6  0012               	return		;funcret
  3897  002DE8                     __end_of_fputc:
  3898                           	callstack 0
  3899                           
  3900 ;; *************** function _putch *****************
  3901 ;; Defined at:
  3902 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;  c               1    wreg     unsigned char 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  c               1    0[COMRAM] unsigned char 
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels used: 1
  3922 ;; Hardware stack levels required when called: 4
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		_fputc
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text13
  3931  0038C2                     __ptext13:
  3932                           	callstack 0
  3933  0038C2                     _putch:
  3934                           	callstack 22
  3935  0038C2  0012               	return		;funcret
  3936  0038C4                     __end_of_putch:
  3937                           	callstack 0
  3938                           
  3939 ;; *************** function _atoi *****************
  3940 ;; Defined at:
  3941 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\atoi.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3944 ;;		 -> STR_1(61), 
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;  n               2   19[COMRAM] int 
  3947 ;;  neg             2   17[COMRAM] int 
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  2   11[COMRAM] int 
  3950 ;; Registers used:
  3951 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3958 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3959 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3960 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3961 ;;Total ram usage:       10 bytes
  3962 ;; Hardware stack levels used: 1
  3963 ;; Hardware stack levels required when called: 5
  3964 ;; This function calls:
  3965 ;;		___wmul
  3966 ;;		_isdigit
  3967 ;;		_isspace
  3968 ;; This function is called by:
  3969 ;;		_vfpfcnvrt
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           	psect	text14
  3974  00257A                     __ptext14:
  3975                           	callstack 0
  3976  00257A                     _atoi:
  3977                           	callstack 22
  3978  00257A  0E00               	movlw	0
  3979  00257C  6E15               	movwf	(atoi@n+1)^0,c
  3980  00257E  0E00               	movlw	0
  3981  002580  6E14               	movwf	atoi@n^0,c
  3982  002582  0E00               	movlw	0
  3983  002584  6E13               	movwf	(atoi@neg+1)^0,c
  3984  002586  0E00               	movlw	0
  3985  002588  6E12               	movwf	atoi@neg^0,c
  3986  00258A  EFC9  F012         	goto	l4640
  3987  00258E                     l4636:
  3988  00258E  4A0C               	infsnz	atoi@s^0,f,c
  3989  002590  2A0D               	incf	(atoi@s+1)^0,f,c
  3990  002592                     l4640:
  3991  002592  C00C  FFF6         	movff	atoi@s,tblptrl
  3992  002596  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3993  00259A                     	if	0	;tblptru may be non-zero
  3994  00259A                     	endif
  3995  00259A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3996  00259A  0E00               	movlw	low (__mediumconst shr (0+16))
  3997  00259C  6EF8               	movwf	tblptru,c
  3998  00259E                     	endif
  3999  00259E  0008               	tblrd		*
  4000  0025A0  50F5               	movf	tablat,w,c
  4001  0025A2  0A20               	xorlw	32
  4002  0025A4  B4D8               	btfsc	status,2,c
  4003  0025A6  EFD7  F012         	goto	u4681
  4004  0025AA  EFD9  F012         	goto	u4680
  4005  0025AE                     u4681:
  4006  0025AE  EFC7  F012         	goto	l4636
  4007  0025B2                     u4680:
  4008  0025B2  0EF7               	movlw	247
  4009  0025B4  6E0E               	movwf	??_atoi^0,c
  4010  0025B6  0EFF               	movlw	255
  4011  0025B8  6E0F               	movwf	(??_atoi+1)^0,c
  4012  0025BA  C00C  FFF6         	movff	atoi@s,tblptrl
  4013  0025BE  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4014  0025C2                     	if	0	;tblptru may be non-zero
  4015  0025C2                     	endif
  4016  0025C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4017  0025C2  0E00               	movlw	low (__mediumconst shr (0+16))
  4018  0025C4  6EF8               	movwf	tblptru,c
  4019  0025C6                     	endif
  4020  0025C6  0008               	tblrd		*
  4021  0025C8  50F5               	movf	tablat,w,c
  4022  0025CA  6E10               	movwf	(??_atoi+2)^0,c
  4023  0025CC  6A11               	clrf	(??_atoi+3)^0,c
  4024  0025CE  500E               	movf	??_atoi^0,w,c
  4025  0025D0  2610               	addwf	(??_atoi+2)^0,f,c
  4026  0025D2  500F               	movf	(??_atoi+1)^0,w,c
  4027  0025D4  2211               	addwfc	(??_atoi+3)^0,f,c
  4028  0025D6  5011               	movf	(??_atoi+3)^0,w,c
  4029  0025D8  E109               	bnz	u4690
  4030  0025DA  0E05               	movlw	5
  4031  0025DC  5C10               	subwf	(??_atoi+2)^0,w,c
  4032  0025DE  A0D8               	btfss	status,0,c
  4033  0025E0  EFF4  F012         	goto	u4691
  4034  0025E4  EFF6  F012         	goto	u4690
  4035  0025E8                     u4691:
  4036  0025E8  EFC7  F012         	goto	l4636
  4037  0025EC                     u4690:
  4038  0025EC  EF00  F013         	goto	l4648
  4039  0025F0                     l4644:
  4040  0025F0  0E00               	movlw	0
  4041  0025F2  6E13               	movwf	(atoi@neg+1)^0,c
  4042  0025F4  0E01               	movlw	1
  4043  0025F6  6E12               	movwf	atoi@neg^0,c
  4044  0025F8                     l4646:
  4045  0025F8  4A0C               	infsnz	atoi@s^0,f,c
  4046  0025FA  2A0D               	incf	(atoi@s+1)^0,f,c
  4047  0025FC  EF39  F013         	goto	l4656
  4048  002600                     l4648:
  4049  002600  C00C  FFF6         	movff	atoi@s,tblptrl
  4050  002604  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4051  002608                     	if	0	;tblptru may be non-zero
  4052  002608                     	endif
  4053  002608                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4054  002608  0E00               	movlw	low (__mediumconst shr (0+16))
  4055  00260A  6EF8               	movwf	tblptru,c
  4056  00260C                     	endif
  4057  00260C  0008               	tblrd		*
  4058  00260E  50F5               	movf	tablat,w,c
  4059  002610  6E0E               	movwf	??_atoi^0,c
  4060  002612  6A0F               	clrf	(??_atoi+1)^0,c
  4061                           
  4062                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4063                           ; Switch size 1, requested type "simple"
  4064                           ; Number of cases is 1, Range of values is 0 to 0
  4065                           ; switch strategies available:
  4066                           ; Name         Instructions Cycles
  4067                           ; simple_byte            4     3 (average)
  4068                           ;	Chosen strategy is simple_byte
  4069  002614  500F               	movf	(??_atoi+1)^0,w,c
  4070  002616  0A00               	xorlw	0	; case 0
  4071  002618  B4D8               	btfsc	status,2,c
  4072  00261A  EF11  F013         	goto	l4870
  4073  00261E  EF39  F013         	goto	l4656
  4074  002622                     l4870:
  4075                           
  4076                           ; Switch size 1, requested type "simple"
  4077                           ; Number of cases is 2, Range of values is 43 to 45
  4078                           ; switch strategies available:
  4079                           ; Name         Instructions Cycles
  4080                           ; simple_byte            7     4 (average)
  4081                           ;	Chosen strategy is simple_byte
  4082  002622  500E               	movf	??_atoi^0,w,c
  4083  002624  0A2B               	xorlw	43	; case 43
  4084  002626  B4D8               	btfsc	status,2,c
  4085  002628  EFFC  F012         	goto	l4646
  4086  00262C  0A06               	xorlw	6	; case 45
  4087  00262E  B4D8               	btfsc	status,2,c
  4088  002630  EFF8  F012         	goto	l4644
  4089  002634  EF39  F013         	goto	l4656
  4090  002638                     l4650:
  4091  002638  C014  F005         	movff	atoi@n,___wmul@multiplier
  4092  00263C  C015  F006         	movff	atoi@n+1,___wmul@multiplier+1
  4093  002640  0E00               	movlw	0
  4094  002642  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  4095  002644  0E0A               	movlw	10
  4096  002646  6E07               	movwf	___wmul@multiplicand^0,c
  4097  002648  ECAD  F01B         	call	___wmul	;wreg free
  4098  00264C  C00C  FFF6         	movff	atoi@s,tblptrl
  4099  002650  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4100  002654                     	if	0	;tblptru may be non-zero
  4101  002654                     	endif
  4102  002654                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4103  002654  0E00               	movlw	low (__mediumconst shr (0+16))
  4104  002656  6EF8               	movwf	tblptru,c
  4105  002658                     	endif
  4106  002658  0008               	tblrd		*
  4107  00265A  50F5               	movf	tablat,w,c
  4108  00265C  5E05               	subwf	?___wmul^0,f,c
  4109  00265E  0E00               	movlw	0
  4110  002660  5A06               	subwfb	(?___wmul+1)^0,f,c
  4111  002662  0E30               	movlw	48
  4112  002664  2405               	addwf	?___wmul^0,w,c
  4113  002666  6E14               	movwf	atoi@n^0,c
  4114  002668  0E00               	movlw	0
  4115  00266A  2006               	addwfc	(?___wmul+1)^0,w,c
  4116  00266C  6E15               	movwf	(atoi@n+1)^0,c
  4117  00266E  EFFC  F012         	goto	l4646
  4118  002672                     l4656:
  4119  002672  0ED0               	movlw	208
  4120  002674  6E0E               	movwf	??_atoi^0,c
  4121  002676  0EFF               	movlw	255
  4122  002678  6E0F               	movwf	(??_atoi+1)^0,c
  4123  00267A  C00C  FFF6         	movff	atoi@s,tblptrl
  4124  00267E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4125  002682                     	if	0	;tblptru may be non-zero
  4126  002682                     	endif
  4127  002682                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4128  002682  0E00               	movlw	low (__mediumconst shr (0+16))
  4129  002684  6EF8               	movwf	tblptru,c
  4130  002686                     	endif
  4131  002686  0008               	tblrd		*
  4132  002688  50F5               	movf	tablat,w,c
  4133  00268A  6E10               	movwf	(??_atoi+2)^0,c
  4134  00268C  6A11               	clrf	(??_atoi+3)^0,c
  4135  00268E  500E               	movf	??_atoi^0,w,c
  4136  002690  2610               	addwf	(??_atoi+2)^0,f,c
  4137  002692  500F               	movf	(??_atoi+1)^0,w,c
  4138  002694  2211               	addwfc	(??_atoi+3)^0,f,c
  4139  002696  5011               	movf	(??_atoi+3)^0,w,c
  4140  002698  E109               	bnz	u4700
  4141  00269A  0E0A               	movlw	10
  4142  00269C  5C10               	subwf	(??_atoi+2)^0,w,c
  4143  00269E  A0D8               	btfss	status,0,c
  4144  0026A0  EF54  F013         	goto	u4701
  4145  0026A4  EF56  F013         	goto	u4700
  4146  0026A8                     u4701:
  4147  0026A8  EF1C  F013         	goto	l4650
  4148  0026AC                     u4700:
  4149  0026AC  5012               	movf	atoi@neg^0,w,c
  4150  0026AE  1013               	iorwf	(atoi@neg+1)^0,w,c
  4151  0026B0  A4D8               	btfss	status,2,c
  4152  0026B2  EF5D  F013         	goto	u4711
  4153  0026B6  EF5F  F013         	goto	u4710
  4154  0026BA                     u4711:
  4155  0026BA  EF6D  F013         	goto	l1674
  4156  0026BE                     u4710:
  4157  0026BE  C014  F00E         	movff	atoi@n,??_atoi
  4158  0026C2  C015  F00F         	movff	atoi@n+1,??_atoi+1
  4159  0026C6  1E0E               	comf	??_atoi^0,f,c
  4160  0026C8  1E0F               	comf	(??_atoi+1)^0,f,c
  4161  0026CA  4A0E               	infsnz	??_atoi^0,f,c
  4162  0026CC  2A0F               	incf	(??_atoi+1)^0,f,c
  4163  0026CE  C00E  F00C         	movff	??_atoi,?_atoi
  4164  0026D2  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  4165  0026D6  EF71  F013         	goto	l1677
  4166  0026DA                     l1674:
  4167  0026DA  C014  F00C         	movff	atoi@n,?_atoi
  4168  0026DE  C015  F00D         	movff	atoi@n+1,?_atoi+1
  4169  0026E2                     l1677:
  4170  0026E2  0012               	return		;funcret
  4171  0026E4                     __end_of_atoi:
  4172                           	callstack 0
  4173                           
  4174 ;; *************** function _isspace *****************
  4175 ;; Defined at:
  4176 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\isspace.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  c               2    4[COMRAM] int 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  2    4[COMRAM] int 
  4183 ;; Registers used:
  4184 ;;		wreg, status,2, status,0
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4192 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4193 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4194 ;;Total ram usage:        7 bytes
  4195 ;; Hardware stack levels used: 1
  4196 ;; Hardware stack levels required when called: 4
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_atoi
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text15
  4205  0032A2                     __ptext15:
  4206                           	callstack 0
  4207  0032A2                     _isspace:
  4208                           	callstack 22
  4209  0032A2  0E01               	movlw	1
  4210  0032A4  6E0B               	movwf	_isspace$2381^0,c
  4211  0032A6  0E20               	movlw	32
  4212  0032A8  1805               	xorwf	isspace@c^0,w,c
  4213  0032AA  1006               	iorwf	(isspace@c+1)^0,w,c
  4214  0032AC  B4D8               	btfsc	status,2,c
  4215  0032AE  EF5B  F019         	goto	u4461
  4216  0032B2  EF5D  F019         	goto	u4460
  4217  0032B6                     u4461:
  4218  0032B6  EF76  F019         	goto	l4540
  4219  0032BA                     u4460:
  4220  0032BA  0EF7               	movlw	247
  4221  0032BC  6E07               	movwf	??_isspace^0,c
  4222  0032BE  0EFF               	movlw	255
  4223  0032C0  6E08               	movwf	(??_isspace+1)^0,c
  4224  0032C2  C005  F009         	movff	isspace@c,??_isspace+2
  4225  0032C6  C006  F00A         	movff	isspace@c+1,??_isspace+3
  4226  0032CA  5007               	movf	??_isspace^0,w,c
  4227  0032CC  2609               	addwf	(??_isspace+2)^0,f,c
  4228  0032CE  5008               	movf	(??_isspace+1)^0,w,c
  4229  0032D0  220A               	addwfc	(??_isspace+3)^0,f,c
  4230  0032D2  500A               	movf	(??_isspace+3)^0,w,c
  4231  0032D4  E109               	bnz	u4470
  4232  0032D6  0E05               	movlw	5
  4233  0032D8  5C09               	subwf	(??_isspace+2)^0,w,c
  4234  0032DA  A0D8               	btfss	status,0,c
  4235  0032DC  EF72  F019         	goto	u4471
  4236  0032E0  EF74  F019         	goto	u4470
  4237  0032E4                     u4471:
  4238  0032E4  EF76  F019         	goto	l4540
  4239  0032E8                     u4470:
  4240  0032E8  0E00               	movlw	0
  4241  0032EA  6E0B               	movwf	_isspace$2381^0,c
  4242  0032EC                     l4540:
  4243  0032EC  C00B  F005         	movff	_isspace$2381,?_isspace
  4244  0032F0  6A06               	clrf	(?_isspace+1)^0,c
  4245  0032F2  0012               	return		;funcret
  4246  0032F4                     __end_of_isspace:
  4247                           	callstack 0
  4248                           
  4249 ;; *************** function _isdigit *****************
  4250 ;; Defined at:
  4251 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\isdigit.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  c               2    4[COMRAM] int 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;		None
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  2    4[COMRAM] int 
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4267 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4268 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4269 ;;Total ram usage:        6 bytes
  4270 ;; Hardware stack levels used: 1
  4271 ;; Hardware stack levels required when called: 4
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_vfpfcnvrt
  4276 ;;		_atoi
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text16
  4281  003518                     __ptext16:
  4282                           	callstack 0
  4283  003518                     _isdigit:
  4284                           	callstack 23
  4285  003518  0ED0               	movlw	208
  4286  00351A  6E07               	movwf	??_isdigit^0,c
  4287  00351C  0EFF               	movlw	255
  4288  00351E  6E08               	movwf	(??_isdigit+1)^0,c
  4289  003520  C005  F009         	movff	isdigit@c,??_isdigit+2
  4290  003524  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  4291  003528  5007               	movf	??_isdigit^0,w,c
  4292  00352A  2609               	addwf	(??_isdigit+2)^0,f,c
  4293  00352C  5008               	movf	(??_isdigit+1)^0,w,c
  4294  00352E  220A               	addwfc	(??_isdigit+3)^0,f,c
  4295  003530  500A               	movf	(??_isdigit+3)^0,w,c
  4296  003532  E10A               	bnz	u4440
  4297  003534  0E0A               	movlw	10
  4298  003536  5C09               	subwf	(??_isdigit+2)^0,w,c
  4299  003538  A0D8               	btfss	status,0,c
  4300  00353A  EFA1  F01A         	goto	u4441
  4301  00353E  EFA4  F01A         	goto	u4440
  4302  003542                     u4441:
  4303  003542  0E01               	movlw	1
  4304  003544  EFA5  F01A         	goto	u4450
  4305  003548                     u4440:
  4306  003548  0E00               	movlw	0
  4307  00354A                     u4450:
  4308  00354A  6E05               	movwf	?_isdigit^0,c
  4309  00354C  6A06               	clrf	(?_isdigit+1)^0,c
  4310  00354E  0012               	return		;funcret
  4311  003550                     __end_of_isdigit:
  4312                           	callstack 0
  4313                           
  4314 ;; *************** function ___wmul *****************
  4315 ;; Defined at:
  4316 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;  multiplier      2    4[COMRAM] unsigned int 
  4319 ;;  multiplicand    2    6[COMRAM] unsigned int 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  product         2    8[COMRAM] unsigned int 
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  2    4[COMRAM] unsigned int 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0, prodl, prodh
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4332 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4334 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4335 ;;Total ram usage:        6 bytes
  4336 ;; Hardware stack levels used: 1
  4337 ;; Hardware stack levels required when called: 4
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		_atoi
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text17
  4346  00375A                     __ptext17:
  4347                           	callstack 0
  4348  00375A                     ___wmul:
  4349                           	callstack 22
  4350  00375A  5005               	movf	___wmul@multiplier^0,w,c
  4351  00375C  0207               	mulwf	___wmul@multiplicand^0,c
  4352  00375E  CFF3 F009          	movff	prodl,___wmul@product
  4353  003762  CFF4 F00A          	movff	prodh,___wmul@product+1
  4354  003766  5005               	movf	___wmul@multiplier^0,w,c
  4355  003768  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  4356  00376A  50F3               	movf	243,w,c
  4357  00376C  260A               	addwf	(___wmul@product+1)^0,f,c
  4358  00376E  5006               	movf	(___wmul@multiplier+1)^0,w,c
  4359  003770  0207               	mulwf	___wmul@multiplicand^0,c
  4360  003772  50F3               	movf	243,w,c
  4361  003774  260A               	addwf	(___wmul@product+1)^0,f,c
  4362  003776  C009  F005         	movff	___wmul@product,?___wmul
  4363  00377A  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  4364  00377E  0012               	return		;funcret
  4365  003780                     __end_of___wmul:
  4366                           	callstack 0
  4367                           
  4368 ;; *************** function ___xxtofl *****************
  4369 ;; Defined at:
  4370 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  sign            1    wreg     unsigned char 
  4373 ;;  val             4    4[COMRAM] long 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  sign            1   12[COMRAM] unsigned char 
  4376 ;;  arg             4   14[COMRAM] unsigned long 
  4377 ;;  exp             1   13[COMRAM] unsigned char 
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  4    4[COMRAM] unsigned char 
  4380 ;; Registers used:
  4381 ;;		wreg, status,2, status,0
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4388 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4389 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4390 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4391 ;;Total ram usage:       14 bytes
  4392 ;; Hardware stack levels used: 1
  4393 ;; Hardware stack levels required when called: 4
  4394 ;; This function calls:
  4395 ;;		Nothing
  4396 ;; This function is called by:
  4397 ;;		_main
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text18
  4402  00223E                     __ptext18:
  4403                           	callstack 0
  4404  00223E                     ___xxtofl:
  4405                           	callstack 26
  4406                           
  4407                           ;incstack = 0
  4408                           ;___xxtofl@sign stored from wreg
  4409  00223E  6E0D               	movwf	___xxtofl@sign^0,c
  4410  002240  500D               	movf	___xxtofl@sign^0,w,c
  4411  002242  B4D8               	btfsc	status,2,c
  4412  002244  EF26  F011         	goto	u3751
  4413  002248  EF28  F011         	goto	u3750
  4414  00224C                     u3751:
  4415  00224C  EF4A  F011         	goto	l1521
  4416  002250                     u3750:
  4417  002250  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  4418  002252  EF2F  F011         	goto	u3760
  4419  002256  EF2D  F011         	goto	u3761
  4420  00225A                     u3761:
  4421  00225A  EF4A  F011         	goto	l1521
  4422  00225E                     u3760:
  4423  00225E  C005  F009         	movff	___xxtofl@val,??___xxtofl
  4424  002262  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  4425  002266  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  4426  00226A  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  4427  00226E  1E09               	comf	??___xxtofl^0,f,c
  4428  002270  1E0A               	comf	(??___xxtofl+1)^0,f,c
  4429  002272  1E0B               	comf	(??___xxtofl+2)^0,f,c
  4430  002274  1E0C               	comf	(??___xxtofl+3)^0,f,c
  4431  002276  2A09               	incf	??___xxtofl^0,f,c
  4432  002278  0E00               	movlw	0
  4433  00227A  220A               	addwfc	(??___xxtofl+1)^0,f,c
  4434  00227C  220B               	addwfc	(??___xxtofl+2)^0,f,c
  4435  00227E  220C               	addwfc	(??___xxtofl+3)^0,f,c
  4436  002280  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  4437  002284  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  4438  002288  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  4439  00228C  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  4440  002290  EF52  F011         	goto	l4180
  4441  002294                     l1521:
  4442  002294  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  4443  002298  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4444  00229C  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4445  0022A0  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4446  0022A4                     l4180:
  4447  0022A4  5005               	movf	___xxtofl@val^0,w,c
  4448  0022A6  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  4449  0022A8  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  4450  0022AA  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  4451  0022AC  A4D8               	btfss	status,2,c
  4452  0022AE  EF5B  F011         	goto	u3771
  4453  0022B2  EF5D  F011         	goto	u3770
  4454  0022B6                     u3771:
  4455  0022B6  EF67  F011         	goto	l4186
  4456  0022BA                     u3770:
  4457  0022BA  0E00               	movlw	0
  4458  0022BC  6E05               	movwf	?___xxtofl^0,c
  4459  0022BE  0E00               	movlw	0
  4460  0022C0  6E06               	movwf	(?___xxtofl+1)^0,c
  4461  0022C2  0E00               	movlw	0
  4462  0022C4  6E07               	movwf	(?___xxtofl+2)^0,c
  4463  0022C6  0E00               	movlw	0
  4464  0022C8  6E08               	movwf	(?___xxtofl+3)^0,c
  4465  0022CA  EFF8  F011         	goto	l1524
  4466  0022CE                     l4186:
  4467  0022CE  0E96               	movlw	150
  4468  0022D0  6E0E               	movwf	___xxtofl@exp^0,c
  4469  0022D2  EF71  F011         	goto	l4190
  4470  0022D6                     l4188:
  4471  0022D6  2A0E               	incf	___xxtofl@exp^0,f,c
  4472  0022D8  90D8               	bcf	status,0,c
  4473  0022DA  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  4474  0022DC  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  4475  0022DE  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  4476  0022E0  320F               	rrcf	___xxtofl@arg^0,f,c
  4477  0022E2                     l4190:
  4478  0022E2  0E00               	movlw	0
  4479  0022E4  140F               	andwf	___xxtofl@arg^0,w,c
  4480  0022E6  6E09               	movwf	??___xxtofl^0,c
  4481  0022E8  0E00               	movlw	0
  4482  0022EA  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  4483  0022EC  6E0A               	movwf	(??___xxtofl+1)^0,c
  4484  0022EE  0E00               	movlw	0
  4485  0022F0  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  4486  0022F2  6E0B               	movwf	(??___xxtofl+2)^0,c
  4487  0022F4  0EFE               	movlw	254
  4488  0022F6  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  4489  0022F8  6E0C               	movwf	(??___xxtofl+3)^0,c
  4490  0022FA  5009               	movf	??___xxtofl^0,w,c
  4491  0022FC  100A               	iorwf	(??___xxtofl+1)^0,w,c
  4492  0022FE  100B               	iorwf	(??___xxtofl+2)^0,w,c
  4493  002300  100C               	iorwf	(??___xxtofl+3)^0,w,c
  4494  002302  A4D8               	btfss	status,2,c
  4495  002304  EF86  F011         	goto	u3781
  4496  002308  EF88  F011         	goto	u3780
  4497  00230C                     u3781:
  4498  00230C  EF6B  F011         	goto	l4188
  4499  002310                     u3780:
  4500  002310  EF96  F011         	goto	l1528
  4501  002314                     l4192:
  4502  002314  2A0E               	incf	___xxtofl@exp^0,f,c
  4503  002316  0E01               	movlw	1
  4504  002318  260F               	addwf	___xxtofl@arg^0,f,c
  4505  00231A  0E00               	movlw	0
  4506  00231C  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  4507  00231E  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  4508  002320  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  4509  002322  90D8               	bcf	status,0,c
  4510  002324  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  4511  002326  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  4512  002328  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  4513  00232A  320F               	rrcf	___xxtofl@arg^0,f,c
  4514  00232C                     l1528:
  4515  00232C  0E00               	movlw	0
  4516  00232E  140F               	andwf	___xxtofl@arg^0,w,c
  4517  002330  6E09               	movwf	??___xxtofl^0,c
  4518  002332  0E00               	movlw	0
  4519  002334  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  4520  002336  6E0A               	movwf	(??___xxtofl+1)^0,c
  4521  002338  0E00               	movlw	0
  4522  00233A  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  4523  00233C  6E0B               	movwf	(??___xxtofl+2)^0,c
  4524  00233E  0EFF               	movlw	255
  4525  002340  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  4526  002342  6E0C               	movwf	(??___xxtofl+3)^0,c
  4527  002344  5009               	movf	??___xxtofl^0,w,c
  4528  002346  100A               	iorwf	(??___xxtofl+1)^0,w,c
  4529  002348  100B               	iorwf	(??___xxtofl+2)^0,w,c
  4530  00234A  100C               	iorwf	(??___xxtofl+3)^0,w,c
  4531  00234C  A4D8               	btfss	status,2,c
  4532  00234E  EFAB  F011         	goto	u3791
  4533  002352  EFAD  F011         	goto	u3790
  4534  002356                     u3791:
  4535  002356  EF8A  F011         	goto	l4192
  4536  00235A                     u3790:
  4537  00235A  EFB5  F011         	goto	l4200
  4538  00235E                     l4198:
  4539  00235E  060E               	decf	___xxtofl@exp^0,f,c
  4540  002360  90D8               	bcf	status,0,c
  4541  002362  360F               	rlcf	___xxtofl@arg^0,f,c
  4542  002364  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  4543  002366  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  4544  002368  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  4545  00236A                     l4200:
  4546  00236A  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  4547  00236C  EFBA  F011         	goto	u3801
  4548  002370  EFBC  F011         	goto	u3800
  4549  002374                     u3801:
  4550  002374  EFC4  F011         	goto	l1535
  4551  002378                     u3800:
  4552  002378  0E02               	movlw	2
  4553  00237A  600E               	cpfslt	___xxtofl@exp^0,c
  4554  00237C  EFC2  F011         	goto	u3811
  4555  002380  EFC4  F011         	goto	u3810
  4556  002384                     u3811:
  4557  002384  EFAF  F011         	goto	l4198
  4558  002388                     u3810:
  4559  002388                     l1535:
  4560  002388  B00E               	btfsc	___xxtofl@exp^0,0,c
  4561  00238A  EFC9  F011         	goto	u3821
  4562  00238E  EFCB  F011         	goto	u3820
  4563  002392                     u3821:
  4564  002392  EFCC  F011         	goto	l4206
  4565  002396                     u3820:
  4566  002396  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  4567  002398                     l4206:
  4568  002398  90D8               	bcf	status,0,c
  4569  00239A  320E               	rrcf	___xxtofl@exp^0,f,c
  4570  00239C  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  4571  0023A0  6A0A               	clrf	(??___xxtofl+1)^0,c
  4572  0023A2  6A0B               	clrf	(??___xxtofl+2)^0,c
  4573  0023A4  6A0C               	clrf	(??___xxtofl+3)^0,c
  4574  0023A6  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  4575  0023AA  6A0B               	clrf	(??___xxtofl+2)^0,c
  4576  0023AC  6A0A               	clrf	(??___xxtofl+1)^0,c
  4577  0023AE  6A09               	clrf	??___xxtofl^0,c
  4578  0023B0  5009               	movf	??___xxtofl^0,w,c
  4579  0023B2  120F               	iorwf	___xxtofl@arg^0,f,c
  4580  0023B4  500A               	movf	(??___xxtofl+1)^0,w,c
  4581  0023B6  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  4582  0023B8  500B               	movf	(??___xxtofl+2)^0,w,c
  4583  0023BA  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  4584  0023BC  500C               	movf	(??___xxtofl+3)^0,w,c
  4585  0023BE  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  4586  0023C0  500D               	movf	___xxtofl@sign^0,w,c
  4587  0023C2  B4D8               	btfsc	status,2,c
  4588  0023C4  EFE6  F011         	goto	u3831
  4589  0023C8  EFE8  F011         	goto	u3830
  4590  0023CC                     u3831:
  4591  0023CC  EFF0  F011         	goto	l4216
  4592  0023D0                     u3830:
  4593  0023D0  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  4594  0023D2  EFEF  F011         	goto	u3840
  4595  0023D6  EFED  F011         	goto	u3841
  4596  0023DA                     u3841:
  4597  0023DA  EFF0  F011         	goto	l4216
  4598  0023DE                     u3840:
  4599  0023DE  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  4600  0023E0                     l4216:
  4601  0023E0  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  4602  0023E4  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  4603  0023E8  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  4604  0023EC  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  4605  0023F0                     l1524:
  4606  0023F0  0012               	return		;funcret
  4607  0023F2                     __end_of___xxtofl:
  4608                           	callstack 0
  4609                           
  4610 ;; *************** function ___fltol *****************
  4611 ;; Defined at:
  4612 ;;		line 43 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  f1              4   59[COMRAM] unsigned char 
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;  exp1            1   68[COMRAM] unsigned char 
  4617 ;;  sign1           1   67[COMRAM] unsigned char 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  4   59[COMRAM] long 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4627 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4628 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4629 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4630 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4631 ;;Total ram usage:       10 bytes
  4632 ;; Hardware stack levels used: 1
  4633 ;; Hardware stack levels required when called: 4
  4634 ;; This function calls:
  4635 ;;		Nothing
  4636 ;; This function is called by:
  4637 ;;		_main
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640                           
  4641                           	psect	text19
  4642  002A5C                     __ptext19:
  4643                           	callstack 0
  4644  002A5C                     ___fltol:
  4645                           	callstack 26
  4646  002A5C  343E               	rlcf	(___fltol@f1+2)^0,w,c
  4647  002A5E  343F               	rlcf	(___fltol@f1+3)^0,w,c
  4648  002A60  6E45               	movwf	___fltol@exp1^0,c
  4649  002A62  5045               	movf	___fltol@exp1^0,w,c
  4650  002A64  A4D8               	btfss	status,2,c
  4651  002A66  EF37  F015         	goto	u3681
  4652  002A6A  EF39  F015         	goto	u3680
  4653  002A6E                     u3681:
  4654  002A6E  EF43  F015         	goto	l4136
  4655  002A72                     u3680:
  4656  002A72                     l4132:
  4657  002A72  0E00               	movlw	0
  4658  002A74  6E3C               	movwf	?___fltol^0,c
  4659  002A76  0E00               	movlw	0
  4660  002A78  6E3D               	movwf	(?___fltol+1)^0,c
  4661  002A7A  0E00               	movlw	0
  4662  002A7C  6E3E               	movwf	(?___fltol+2)^0,c
  4663  002A7E  0E00               	movlw	0
  4664  002A80  6E3F               	movwf	(?___fltol+3)^0,c
  4665  002A82  EFB0  F015         	goto	l1163
  4666  002A86                     l4136:
  4667  002A86  C03C  F040         	movff	___fltol@f1,??___fltol
  4668  002A8A  C03D  F041         	movff	___fltol@f1+1,??___fltol+1
  4669  002A8E  C03E  F042         	movff	___fltol@f1+2,??___fltol+2
  4670  002A92  C03F  F043         	movff	___fltol@f1+3,??___fltol+3
  4671  002A96  0E20               	movlw	32
  4672  002A98  EF53  F015         	goto	u3690
  4673  002A9C                     u3695:
  4674  002A9C  90D8               	bcf	status,0,c
  4675  002A9E  3243               	rrcf	(??___fltol+3)^0,f,c
  4676  002AA0  3242               	rrcf	(??___fltol+2)^0,f,c
  4677  002AA2  3241               	rrcf	(??___fltol+1)^0,f,c
  4678  002AA4  3240               	rrcf	??___fltol^0,f,c
  4679  002AA6                     u3690:
  4680  002AA6  2EE8               	decfsz	wreg,f,c
  4681  002AA8  EF4E  F015         	goto	u3695
  4682  002AAC  5040               	movf	??___fltol^0,w,c
  4683  002AAE  6E44               	movwf	___fltol@sign1^0,c
  4684  002AB0  8E3E               	bsf	(___fltol@f1+2)^0,7,c
  4685  002AB2  0EFF               	movlw	255
  4686  002AB4  163C               	andwf	___fltol@f1^0,f,c
  4687  002AB6  0EFF               	movlw	255
  4688  002AB8  163D               	andwf	(___fltol@f1+1)^0,f,c
  4689  002ABA  0EFF               	movlw	255
  4690  002ABC  163E               	andwf	(___fltol@f1+2)^0,f,c
  4691  002ABE  0E00               	movlw	0
  4692  002AC0  163F               	andwf	(___fltol@f1+3)^0,f,c
  4693  002AC2  0E96               	movlw	150
  4694  002AC4  5E45               	subwf	___fltol@exp1^0,f,c
  4695  002AC6  BE45               	btfsc	___fltol@exp1^0,7,c
  4696  002AC8  EF6A  F015         	goto	u3700
  4697  002ACC  EF68  F015         	goto	u3701
  4698  002AD0                     u3701:
  4699  002AD0  EF80  F015         	goto	l4156
  4700  002AD4                     u3700:
  4701  002AD4  5045               	movf	___fltol@exp1^0,w,c
  4702  002AD6  0A80               	xorlw	128
  4703  002AD8  0F97               	addlw	151
  4704  002ADA  B0D8               	btfsc	status,0,c
  4705  002ADC  EF72  F015         	goto	u3711
  4706  002AE0  EF74  F015         	goto	u3710
  4707  002AE4                     u3711:
  4708  002AE4  EF76  F015         	goto	l4152
  4709  002AE8                     u3710:
  4710  002AE8  EF39  F015         	goto	l4132
  4711  002AEC                     l4152:
  4712  002AEC  90D8               	bcf	status,0,c
  4713  002AEE  323F               	rrcf	(___fltol@f1+3)^0,f,c
  4714  002AF0  323E               	rrcf	(___fltol@f1+2)^0,f,c
  4715  002AF2  323D               	rrcf	(___fltol@f1+1)^0,f,c
  4716  002AF4  323C               	rrcf	___fltol@f1^0,f,c
  4717  002AF6  3E45               	incfsz	___fltol@exp1^0,f,c
  4718  002AF8  EF76  F015         	goto	l4152
  4719  002AFC  EF98  F015         	goto	l4166
  4720  002B00                     l4156:
  4721  002B00  0E1F               	movlw	31
  4722  002B02  6445               	cpfsgt	___fltol@exp1^0,c
  4723  002B04  EF86  F015         	goto	u3721
  4724  002B08  EF88  F015         	goto	u3720
  4725  002B0C                     u3721:
  4726  002B0C  EF90  F015         	goto	l4164
  4727  002B10                     u3720:
  4728  002B10  EF39  F015         	goto	l4132
  4729  002B14                     l4162:
  4730  002B14  90D8               	bcf	status,0,c
  4731  002B16  363C               	rlcf	___fltol@f1^0,f,c
  4732  002B18  363D               	rlcf	(___fltol@f1+1)^0,f,c
  4733  002B1A  363E               	rlcf	(___fltol@f1+2)^0,f,c
  4734  002B1C  363F               	rlcf	(___fltol@f1+3)^0,f,c
  4735  002B1E  0645               	decf	___fltol@exp1^0,f,c
  4736  002B20                     l4164:
  4737  002B20  5045               	movf	___fltol@exp1^0,w,c
  4738  002B22  A4D8               	btfss	status,2,c
  4739  002B24  EF96  F015         	goto	u3731
  4740  002B28  EF98  F015         	goto	u3730
  4741  002B2C                     u3731:
  4742  002B2C  EF8A  F015         	goto	l4162
  4743  002B30                     u3730:
  4744  002B30                     l4166:
  4745  002B30  5044               	movf	___fltol@sign1^0,w,c
  4746  002B32  B4D8               	btfsc	status,2,c
  4747  002B34  EF9E  F015         	goto	u3741
  4748  002B38  EFA0  F015         	goto	u3740
  4749  002B3C                     u3741:
  4750  002B3C  EFA8  F015         	goto	l4170
  4751  002B40                     u3740:
  4752  002B40  1E3F               	comf	(___fltol@f1+3)^0,f,c
  4753  002B42  1E3E               	comf	(___fltol@f1+2)^0,f,c
  4754  002B44  1E3D               	comf	(___fltol@f1+1)^0,f,c
  4755  002B46  6C3C               	negf	___fltol@f1^0,c
  4756  002B48  0E00               	movlw	0
  4757  002B4A  223D               	addwfc	(___fltol@f1+1)^0,f,c
  4758  002B4C  223E               	addwfc	(___fltol@f1+2)^0,f,c
  4759  002B4E  223F               	addwfc	(___fltol@f1+3)^0,f,c
  4760  002B50                     l4170:
  4761  002B50  C03C  F03C         	movff	___fltol@f1,?___fltol
  4762  002B54  C03D  F03D         	movff	___fltol@f1+1,?___fltol+1
  4763  002B58  C03E  F03E         	movff	___fltol@f1+2,?___fltol+2
  4764  002B5C  C03F  F03F         	movff	___fltol@f1+3,?___fltol+3
  4765  002B60                     l1163:
  4766  002B60  0012               	return		;funcret
  4767  002B62                     __end_of___fltol:
  4768                           	callstack 0
  4769                           
  4770 ;; *************** function ___flmul *****************
  4771 ;; Defined at:
  4772 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  b               4   18[COMRAM] long 
  4775 ;;  a               4   22[COMRAM] long 
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;  prod            4   37[COMRAM] struct .
  4778 ;;  grs             4   31[COMRAM] unsigned long 
  4779 ;;  temp            2   41[COMRAM] struct .
  4780 ;;  bexp            1   36[COMRAM] unsigned char 
  4781 ;;  aexp            1   35[COMRAM] unsigned char 
  4782 ;;  sign            1   30[COMRAM] unsigned char 
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  4   18[COMRAM] unsigned char 
  4785 ;; Registers used:
  4786 ;;		wreg, status,2, status,0, prodl, prodh
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4792 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4793 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4794 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4795 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4796 ;;Total ram usage:       25 bytes
  4797 ;; Hardware stack levels used: 1
  4798 ;; Hardware stack levels required when called: 4
  4799 ;; This function calls:
  4800 ;;		Nothing
  4801 ;; This function is called by:
  4802 ;;		_main
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text20
  4807  001404                     __ptext20:
  4808                           	callstack 0
  4809  001404                     ___flmul:
  4810                           	callstack 26
  4811  001404  5016               	movf	(___flmul@b+3)^0,w,c
  4812  001406  0B80               	andlw	128
  4813  001408  6E1F               	movwf	___flmul@sign^0,c
  4814  00140A  5016               	movf	(___flmul@b+3)^0,w,c
  4815  00140C  2416               	addwf	(___flmul@b+3)^0,w,c
  4816  00140E  6E25               	movwf	___flmul@bexp^0,c
  4817  001410  AE15               	btfss	(___flmul@b+2)^0,7,c
  4818  001412  EF0D  F00A         	goto	u3491
  4819  001416  EF0F  F00A         	goto	u3490
  4820  00141A                     u3491:
  4821  00141A  EF10  F00A         	goto	l4006
  4822  00141E                     u3490:
  4823  00141E  8025               	bsf	___flmul@bexp^0,0,c
  4824  001420                     l4006:
  4825  001420  5025               	movf	___flmul@bexp^0,w,c
  4826  001422  B4D8               	btfsc	status,2,c
  4827  001424  EF16  F00A         	goto	u3501
  4828  001428  EF18  F00A         	goto	u3500
  4829  00142C                     u3501:
  4830  00142C  EF2B  F00A         	goto	l4014
  4831  001430                     u3500:
  4832  001430  2825               	incf	___flmul@bexp^0,w,c
  4833  001432  A4D8               	btfss	status,2,c
  4834  001434  EF1E  F00A         	goto	u3511
  4835  001438  EF20  F00A         	goto	u3510
  4836  00143C                     u3511:
  4837  00143C  EF28  F00A         	goto	l4012
  4838  001440                     u3510:
  4839  001440  0E00               	movlw	0
  4840  001442  6E13               	movwf	___flmul@b^0,c
  4841  001444  0E00               	movlw	0
  4842  001446  6E14               	movwf	(___flmul@b+1)^0,c
  4843  001448  0E00               	movlw	0
  4844  00144A  6E15               	movwf	(___flmul@b+2)^0,c
  4845  00144C  0E00               	movlw	0
  4846  00144E  6E16               	movwf	(___flmul@b+3)^0,c
  4847  001450                     l4012:
  4848  001450  8E15               	bsf	(___flmul@b+2)^0,7,c
  4849  001452  EF33  F00A         	goto	l4016
  4850  001456                     l4014:
  4851  001456  0E00               	movlw	0
  4852  001458  6E13               	movwf	___flmul@b^0,c
  4853  00145A  0E00               	movlw	0
  4854  00145C  6E14               	movwf	(___flmul@b+1)^0,c
  4855  00145E  0E00               	movlw	0
  4856  001460  6E15               	movwf	(___flmul@b+2)^0,c
  4857  001462  0E00               	movlw	0
  4858  001464  6E16               	movwf	(___flmul@b+3)^0,c
  4859  001466                     l4016:
  4860  001466  501A               	movf	(___flmul@a+3)^0,w,c
  4861  001468  0B80               	andlw	128
  4862  00146A  1A1F               	xorwf	___flmul@sign^0,f,c
  4863  00146C  501A               	movf	(___flmul@a+3)^0,w,c
  4864  00146E  241A               	addwf	(___flmul@a+3)^0,w,c
  4865  001470  6E24               	movwf	___flmul@aexp^0,c
  4866  001472  AE19               	btfss	(___flmul@a+2)^0,7,c
  4867  001474  EF3E  F00A         	goto	u3521
  4868  001478  EF40  F00A         	goto	u3520
  4869  00147C                     u3521:
  4870  00147C  EF41  F00A         	goto	l4024
  4871  001480                     u3520:
  4872  001480  8024               	bsf	___flmul@aexp^0,0,c
  4873  001482                     l4024:
  4874  001482  5024               	movf	___flmul@aexp^0,w,c
  4875  001484  B4D8               	btfsc	status,2,c
  4876  001486  EF47  F00A         	goto	u3531
  4877  00148A  EF49  F00A         	goto	u3530
  4878  00148E                     u3531:
  4879  00148E  EF5C  F00A         	goto	l4032
  4880  001492                     u3530:
  4881  001492  2824               	incf	___flmul@aexp^0,w,c
  4882  001494  A4D8               	btfss	status,2,c
  4883  001496  EF4F  F00A         	goto	u3541
  4884  00149A  EF51  F00A         	goto	u3540
  4885  00149E                     u3541:
  4886  00149E  EF59  F00A         	goto	l4030
  4887  0014A2                     u3540:
  4888  0014A2  0E00               	movlw	0
  4889  0014A4  6E17               	movwf	___flmul@a^0,c
  4890  0014A6  0E00               	movlw	0
  4891  0014A8  6E18               	movwf	(___flmul@a+1)^0,c
  4892  0014AA  0E00               	movlw	0
  4893  0014AC  6E19               	movwf	(___flmul@a+2)^0,c
  4894  0014AE  0E00               	movlw	0
  4895  0014B0  6E1A               	movwf	(___flmul@a+3)^0,c
  4896  0014B2                     l4030:
  4897  0014B2  8E19               	bsf	(___flmul@a+2)^0,7,c
  4898  0014B4  EF64  F00A         	goto	l1480
  4899  0014B8                     l4032:
  4900  0014B8  0E00               	movlw	0
  4901  0014BA  6E17               	movwf	___flmul@a^0,c
  4902  0014BC  0E00               	movlw	0
  4903  0014BE  6E18               	movwf	(___flmul@a+1)^0,c
  4904  0014C0  0E00               	movlw	0
  4905  0014C2  6E19               	movwf	(___flmul@a+2)^0,c
  4906  0014C4  0E00               	movlw	0
  4907  0014C6  6E1A               	movwf	(___flmul@a+3)^0,c
  4908  0014C8                     l1480:
  4909  0014C8  5024               	movf	___flmul@aexp^0,w,c
  4910  0014CA  B4D8               	btfsc	status,2,c
  4911  0014CC  EF6A  F00A         	goto	u3551
  4912  0014D0  EF6C  F00A         	goto	u3550
  4913  0014D4                     u3551:
  4914  0014D4  EF74  F00A         	goto	l4036
  4915  0014D8                     u3550:
  4916  0014D8  5025               	movf	___flmul@bexp^0,w,c
  4917  0014DA  A4D8               	btfss	status,2,c
  4918  0014DC  EF72  F00A         	goto	u3561
  4919  0014E0  EF74  F00A         	goto	u3560
  4920  0014E4                     u3561:
  4921  0014E4  EF7E  F00A         	goto	l4040
  4922  0014E8                     u3560:
  4923  0014E8                     l4036:
  4924  0014E8  0E00               	movlw	0
  4925  0014EA  6E13               	movwf	?___flmul^0,c
  4926  0014EC  0E00               	movlw	0
  4927  0014EE  6E14               	movwf	(?___flmul+1)^0,c
  4928  0014F0  0E00               	movlw	0
  4929  0014F2  6E15               	movwf	(?___flmul+2)^0,c
  4930  0014F4  0E00               	movlw	0
  4931  0014F6  6E16               	movwf	(?___flmul+3)^0,c
  4932  0014F8  EF16  F00C         	goto	l1484
  4933  0014FC                     l4040:
  4934  0014FC  5019               	movf	(___flmul@a+2)^0,w,c
  4935  0014FE  0213               	mulwf	___flmul@b^0,c
  4936  001500  CFF3 F02A          	movff	prodl,___flmul@temp
  4937  001504  CFF4 F02B          	movff	prodh,___flmul@temp+1
  4938  001508  502A               	movf	___flmul@temp^0,w,c
  4939  00150A  6E20               	movwf	___flmul@grs^0,c
  4940  00150C  6A21               	clrf	(___flmul@grs+1)^0,c
  4941  00150E  6A22               	clrf	(___flmul@grs+2)^0,c
  4942  001510  6A23               	clrf	(___flmul@grs+3)^0,c
  4943  001512  502B               	movf	(___flmul@temp+1)^0,w,c
  4944  001514  6E26               	movwf	___flmul@prod^0,c
  4945  001516  6A27               	clrf	(___flmul@prod+1)^0,c
  4946  001518  6A28               	clrf	(___flmul@prod+2)^0,c
  4947  00151A  6A29               	clrf	(___flmul@prod+3)^0,c
  4948  00151C  5018               	movf	(___flmul@a+1)^0,w,c
  4949  00151E  0214               	mulwf	(___flmul@b+1)^0,c
  4950  001520  CFF3 F02A          	movff	prodl,___flmul@temp
  4951  001524  CFF4 F02B          	movff	prodh,___flmul@temp+1
  4952  001528  502A               	movf	___flmul@temp^0,w,c
  4953  00152A  2620               	addwf	___flmul@grs^0,f,c
  4954  00152C  0E00               	movlw	0
  4955  00152E  2221               	addwfc	(___flmul@grs+1)^0,f,c
  4956  001530  2222               	addwfc	(___flmul@grs+2)^0,f,c
  4957  001532  2223               	addwfc	(___flmul@grs+3)^0,f,c
  4958  001534  502B               	movf	(___flmul@temp+1)^0,w,c
  4959  001536  2626               	addwf	___flmul@prod^0,f,c
  4960  001538  0E00               	movlw	0
  4961  00153A  2227               	addwfc	(___flmul@prod+1)^0,f,c
  4962  00153C  2228               	addwfc	(___flmul@prod+2)^0,f,c
  4963  00153E  2229               	addwfc	(___flmul@prod+3)^0,f,c
  4964  001540  5017               	movf	___flmul@a^0,w,c
  4965  001542  0215               	mulwf	(___flmul@b+2)^0,c
  4966  001544  CFF3 F02A          	movff	prodl,___flmul@temp
  4967  001548  CFF4 F02B          	movff	prodh,___flmul@temp+1
  4968  00154C  502A               	movf	___flmul@temp^0,w,c
  4969  00154E  2620               	addwf	___flmul@grs^0,f,c
  4970  001550  0E00               	movlw	0
  4971  001552  2221               	addwfc	(___flmul@grs+1)^0,f,c
  4972  001554  2222               	addwfc	(___flmul@grs+2)^0,f,c
  4973  001556  2223               	addwfc	(___flmul@grs+3)^0,f,c
  4974  001558  502B               	movf	(___flmul@temp+1)^0,w,c
  4975  00155A  2626               	addwf	___flmul@prod^0,f,c
  4976  00155C  0E00               	movlw	0
  4977  00155E  2227               	addwfc	(___flmul@prod+1)^0,f,c
  4978  001560  2228               	addwfc	(___flmul@prod+2)^0,f,c
  4979  001562  2229               	addwfc	(___flmul@prod+3)^0,f,c
  4980  001564  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  4981  001568  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  4982  00156C  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  4983  001570  6A20               	clrf	___flmul@grs^0,c
  4984  001572  5017               	movf	___flmul@a^0,w,c
  4985  001574  0214               	mulwf	(___flmul@b+1)^0,c
  4986  001576  CFF3 F02A          	movff	prodl,___flmul@temp
  4987  00157A  CFF4 F02B          	movff	prodh,___flmul@temp+1
  4988  00157E  502A               	movf	___flmul@temp^0,w,c
  4989  001580  2620               	addwf	___flmul@grs^0,f,c
  4990  001582  502B               	movf	(___flmul@temp+1)^0,w,c
  4991  001584  2221               	addwfc	(___flmul@grs+1)^0,f,c
  4992  001586  0E00               	movlw	0
  4993  001588  2222               	addwfc	(___flmul@grs+2)^0,f,c
  4994  00158A  0E00               	movlw	0
  4995  00158C  2223               	addwfc	(___flmul@grs+3)^0,f,c
  4996  00158E  5018               	movf	(___flmul@a+1)^0,w,c
  4997  001590  0213               	mulwf	___flmul@b^0,c
  4998  001592  CFF3 F02A          	movff	prodl,___flmul@temp
  4999  001596  CFF4 F02B          	movff	prodh,___flmul@temp+1
  5000  00159A  502A               	movf	___flmul@temp^0,w,c
  5001  00159C  2620               	addwf	___flmul@grs^0,f,c
  5002  00159E  502B               	movf	(___flmul@temp+1)^0,w,c
  5003  0015A0  2221               	addwfc	(___flmul@grs+1)^0,f,c
  5004  0015A2  0E00               	movlw	0
  5005  0015A4  2222               	addwfc	(___flmul@grs+2)^0,f,c
  5006  0015A6  0E00               	movlw	0
  5007  0015A8  2223               	addwfc	(___flmul@grs+3)^0,f,c
  5008  0015AA  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  5009  0015AE  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  5010  0015B2  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  5011  0015B6  6A20               	clrf	___flmul@grs^0,c
  5012  0015B8  5017               	movf	___flmul@a^0,w,c
  5013  0015BA  0213               	mulwf	___flmul@b^0,c
  5014  0015BC  CFF3 F02A          	movff	prodl,___flmul@temp
  5015  0015C0  CFF4 F02B          	movff	prodh,___flmul@temp+1
  5016  0015C4  502A               	movf	___flmul@temp^0,w,c
  5017  0015C6  2620               	addwf	___flmul@grs^0,f,c
  5018  0015C8  502B               	movf	(___flmul@temp+1)^0,w,c
  5019  0015CA  2221               	addwfc	(___flmul@grs+1)^0,f,c
  5020  0015CC  0E00               	movlw	0
  5021  0015CE  2222               	addwfc	(___flmul@grs+2)^0,f,c
  5022  0015D0  0E00               	movlw	0
  5023  0015D2  2223               	addwfc	(___flmul@grs+3)^0,f,c
  5024  0015D4  5019               	movf	(___flmul@a+2)^0,w,c
  5025  0015D6  0214               	mulwf	(___flmul@b+1)^0,c
  5026  0015D8  CFF3 F02A          	movff	prodl,___flmul@temp
  5027  0015DC  CFF4 F02B          	movff	prodh,___flmul@temp+1
  5028  0015E0  502A               	movf	___flmul@temp^0,w,c
  5029  0015E2  2626               	addwf	___flmul@prod^0,f,c
  5030  0015E4  502B               	movf	(___flmul@temp+1)^0,w,c
  5031  0015E6  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5032  0015E8  0E00               	movlw	0
  5033  0015EA  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5034  0015EC  0E00               	movlw	0
  5035  0015EE  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5036  0015F0  5018               	movf	(___flmul@a+1)^0,w,c
  5037  0015F2  0215               	mulwf	(___flmul@b+2)^0,c
  5038  0015F4  CFF3 F02A          	movff	prodl,___flmul@temp
  5039  0015F8  CFF4 F02B          	movff	prodh,___flmul@temp+1
  5040  0015FC  502A               	movf	___flmul@temp^0,w,c
  5041  0015FE  2626               	addwf	___flmul@prod^0,f,c
  5042  001600  502B               	movf	(___flmul@temp+1)^0,w,c
  5043  001602  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5044  001604  0E00               	movlw	0
  5045  001606  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5046  001608  0E00               	movlw	0
  5047  00160A  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5048  00160C  5019               	movf	(___flmul@a+2)^0,w,c
  5049  00160E  0215               	mulwf	(___flmul@b+2)^0,c
  5050  001610  CFF3 F02A          	movff	prodl,___flmul@temp
  5051  001614  CFF4 F02B          	movff	prodh,___flmul@temp+1
  5052  001618  502A               	movf	___flmul@temp^0,w,c
  5053  00161A  6E1B               	movwf	??___flmul^0,c
  5054  00161C  502B               	movf	(___flmul@temp+1)^0,w,c
  5055  00161E  6E1C               	movwf	(??___flmul+1)^0,c
  5056  001620  6A1D               	clrf	(??___flmul+2)^0,c
  5057  001622  6A1E               	clrf	(??___flmul+3)^0,c
  5058  001624  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  5059  001628  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  5060  00162C  C01B  F01C         	movff	??___flmul,??___flmul+1
  5061  001630  6A1B               	clrf	??___flmul^0,c
  5062  001632  501B               	movf	??___flmul^0,w,c
  5063  001634  2626               	addwf	___flmul@prod^0,f,c
  5064  001636  501C               	movf	(??___flmul+1)^0,w,c
  5065  001638  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5066  00163A  501D               	movf	(??___flmul+2)^0,w,c
  5067  00163C  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5068  00163E  501E               	movf	(??___flmul+3)^0,w,c
  5069  001640  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5070  001642  C020  F01B         	movff	___flmul@grs,??___flmul
  5071  001646  C021  F01C         	movff	___flmul@grs+1,??___flmul+1
  5072  00164A  C022  F01D         	movff	___flmul@grs+2,??___flmul+2
  5073  00164E  C023  F01E         	movff	___flmul@grs+3,??___flmul+3
  5074  001652  0E19               	movlw	25
  5075  001654  EF31  F00B         	goto	u3570
  5076  001658                     u3575:
  5077  001658  90D8               	bcf	status,0,c
  5078  00165A  321E               	rrcf	(??___flmul+3)^0,f,c
  5079  00165C  321D               	rrcf	(??___flmul+2)^0,f,c
  5080  00165E  321C               	rrcf	(??___flmul+1)^0,f,c
  5081  001660  321B               	rrcf	??___flmul^0,f,c
  5082  001662                     u3570:
  5083  001662  2EE8               	decfsz	wreg,f,c
  5084  001664  EF2C  F00B         	goto	u3575
  5085  001668  501B               	movf	??___flmul^0,w,c
  5086  00166A  2626               	addwf	___flmul@prod^0,f,c
  5087  00166C  501C               	movf	(??___flmul+1)^0,w,c
  5088  00166E  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5089  001670  501D               	movf	(??___flmul+2)^0,w,c
  5090  001672  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5091  001674  501E               	movf	(??___flmul+3)^0,w,c
  5092  001676  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5093  001678  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  5094  00167C  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  5095  001680  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  5096  001684  6A20               	clrf	___flmul@grs^0,c
  5097  001686  5024               	movf	___flmul@aexp^0,w,c
  5098  001688  C025  F01B         	movff	___flmul@bexp,??___flmul
  5099  00168C  6A1C               	clrf	(??___flmul+1)^0,c
  5100  00168E  261B               	addwf	??___flmul^0,f,c
  5101  001690  0E00               	movlw	0
  5102  001692  221C               	addwfc	(??___flmul+1)^0,f,c
  5103  001694  0E82               	movlw	130
  5104  001696  241B               	addwf	??___flmul^0,w,c
  5105  001698  6E2A               	movwf	___flmul@temp^0,c
  5106  00169A  0EFF               	movlw	255
  5107  00169C  201C               	addwfc	(??___flmul+1)^0,w,c
  5108  00169E  6E2B               	movwf	(___flmul@temp+1)^0,c
  5109  0016A0  EF67  F00B         	goto	l4088
  5110  0016A4                     l4082:
  5111  0016A4  90D8               	bcf	status,0,c
  5112  0016A6  3626               	rlcf	___flmul@prod^0,f,c
  5113  0016A8  3627               	rlcf	(___flmul@prod+1)^0,f,c
  5114  0016AA  3628               	rlcf	(___flmul@prod+2)^0,f,c
  5115  0016AC  3629               	rlcf	(___flmul@prod+3)^0,f,c
  5116  0016AE  AE23               	btfss	(___flmul@grs+3)^0,7,c
  5117  0016B0  EF5C  F00B         	goto	u3581
  5118  0016B4  EF5E  F00B         	goto	u3580
  5119  0016B8                     u3581:
  5120  0016B8  EF5F  F00B         	goto	l1487
  5121  0016BC                     u3580:
  5122  0016BC  8026               	bsf	___flmul@prod^0,0,c
  5123  0016BE                     l1487:
  5124  0016BE  90D8               	bcf	status,0,c
  5125  0016C0  3620               	rlcf	___flmul@grs^0,f,c
  5126  0016C2  3621               	rlcf	(___flmul@grs+1)^0,f,c
  5127  0016C4  3622               	rlcf	(___flmul@grs+2)^0,f,c
  5128  0016C6  3623               	rlcf	(___flmul@grs+3)^0,f,c
  5129  0016C8  062A               	decf	___flmul@temp^0,f,c
  5130  0016CA  A0D8               	btfss	status,0,c
  5131  0016CC  062B               	decf	(___flmul@temp+1)^0,f,c
  5132  0016CE                     l4088:
  5133  0016CE  AE28               	btfss	(___flmul@prod+2)^0,7,c
  5134  0016D0  EF6C  F00B         	goto	u3591
  5135  0016D4  EF6E  F00B         	goto	u3590
  5136  0016D8                     u3591:
  5137  0016D8  EF52  F00B         	goto	l4082
  5138  0016DC                     u3590:
  5139  0016DC  0E00               	movlw	0
  5140  0016DE  6E24               	movwf	___flmul@aexp^0,c
  5141  0016E0  AE23               	btfss	(___flmul@grs+3)^0,7,c
  5142  0016E2  EF75  F00B         	goto	u3601
  5143  0016E6  EF77  F00B         	goto	u3600
  5144  0016EA                     u3601:
  5145  0016EA  EF9B  F00B         	goto	l1489
  5146  0016EE                     u3600:
  5147  0016EE  0EFF               	movlw	255
  5148  0016F0  1420               	andwf	___flmul@grs^0,w,c
  5149  0016F2  6E1B               	movwf	??___flmul^0,c
  5150  0016F4  0EFF               	movlw	255
  5151  0016F6  1421               	andwf	(___flmul@grs+1)^0,w,c
  5152  0016F8  6E1C               	movwf	(??___flmul+1)^0,c
  5153  0016FA  0EFF               	movlw	255
  5154  0016FC  1422               	andwf	(___flmul@grs+2)^0,w,c
  5155  0016FE  6E1D               	movwf	(??___flmul+2)^0,c
  5156  001700  0E7F               	movlw	127
  5157  001702  1423               	andwf	(___flmul@grs+3)^0,w,c
  5158  001704  6E1E               	movwf	(??___flmul+3)^0,c
  5159  001706  501B               	movf	??___flmul^0,w,c
  5160  001708  101C               	iorwf	(??___flmul+1)^0,w,c
  5161  00170A  101D               	iorwf	(??___flmul+2)^0,w,c
  5162  00170C  101E               	iorwf	(??___flmul+3)^0,w,c
  5163  00170E  B4D8               	btfsc	status,2,c
  5164  001710  EF8C  F00B         	goto	u3611
  5165  001714  EF8E  F00B         	goto	u3610
  5166  001718                     u3611:
  5167  001718  EF92  F00B         	goto	l1490
  5168  00171C                     u3610:
  5169  00171C                     l4096:
  5170  00171C  0E01               	movlw	1
  5171  00171E  6E24               	movwf	___flmul@aexp^0,c
  5172  001720  EF9B  F00B         	goto	l1489
  5173  001724                     l1490:
  5174  001724  A026               	btfss	___flmul@prod^0,0,c
  5175  001726  EF97  F00B         	goto	u3621
  5176  00172A  EF99  F00B         	goto	u3620
  5177  00172E                     u3621:
  5178  00172E  EF9B  F00B         	goto	l1489
  5179  001732                     u3620:
  5180  001732  EF8E  F00B         	goto	l4096
  5181  001736                     l1489:
  5182  001736  5024               	movf	___flmul@aexp^0,w,c
  5183  001738  B4D8               	btfsc	status,2,c
  5184  00173A  EFA1  F00B         	goto	u3631
  5185  00173E  EFA3  F00B         	goto	u3630
  5186  001742                     u3631:
  5187  001742  EFC7  F00B         	goto	l4108
  5188  001746                     u3630:
  5189  001746  0E01               	movlw	1
  5190  001748  2626               	addwf	___flmul@prod^0,f,c
  5191  00174A  0E00               	movlw	0
  5192  00174C  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5193  00174E  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5194  001750  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5195  001752  A029               	btfss	(___flmul@prod+3)^0,0,c
  5196  001754  EFAE  F00B         	goto	u3641
  5197  001758  EFB0  F00B         	goto	u3640
  5198  00175C                     u3641:
  5199  00175C  EFC7  F00B         	goto	l4108
  5200  001760                     u3640:
  5201  001760  C026  F01B         	movff	___flmul@prod,??___flmul
  5202  001764  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  5203  001768  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  5204  00176C  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  5205  001770  341E               	rlcf	(??___flmul+3)^0,w,c
  5206  001772  321E               	rrcf	(??___flmul+3)^0,f,c
  5207  001774  321D               	rrcf	(??___flmul+2)^0,f,c
  5208  001776  321C               	rrcf	(??___flmul+1)^0,f,c
  5209  001778  321B               	rrcf	??___flmul^0,f,c
  5210  00177A  C01B  F026         	movff	??___flmul,___flmul@prod
  5211  00177E  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  5212  001782  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  5213  001786  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  5214  00178A  4A2A               	infsnz	___flmul@temp^0,f,c
  5215  00178C  2A2B               	incf	(___flmul@temp+1)^0,f,c
  5216  00178E                     l4108:
  5217  00178E  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  5218  001790  EFD2  F00B         	goto	u3651
  5219  001794  502B               	movf	(___flmul@temp+1)^0,w,c
  5220  001796  E108               	bnz	u3650
  5221  001798  282A               	incf	___flmul@temp^0,w,c
  5222  00179A  A0D8               	btfss	status,0,c
  5223  00179C  EFD2  F00B         	goto	u3651
  5224  0017A0  EFD4  F00B         	goto	u3650
  5225  0017A4                     u3651:
  5226  0017A4  EFDE  F00B         	goto	l4112
  5227  0017A8                     u3650:
  5228  0017A8  0E00               	movlw	0
  5229  0017AA  6E26               	movwf	___flmul@prod^0,c
  5230  0017AC  0E00               	movlw	0
  5231  0017AE  6E27               	movwf	(___flmul@prod+1)^0,c
  5232  0017B0  0E80               	movlw	128
  5233  0017B2  6E28               	movwf	(___flmul@prod+2)^0,c
  5234  0017B4  0E7F               	movlw	127
  5235  0017B6  6E29               	movwf	(___flmul@prod+3)^0,c
  5236  0017B8  EF0C  F00C         	goto	l4124
  5237  0017BC                     l4112:
  5238  0017BC  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  5239  0017BE  EFEB  F00B         	goto	u3660
  5240  0017C2  502B               	movf	(___flmul@temp+1)^0,w,c
  5241  0017C4  E106               	bnz	u3661
  5242  0017C6  042A               	decf	___flmul@temp^0,w,c
  5243  0017C8  B0D8               	btfsc	status,0,c
  5244  0017CA  EFE9  F00B         	goto	u3661
  5245  0017CE  EFEB  F00B         	goto	u3660
  5246  0017D2                     u3661:
  5247  0017D2  EFF7  F00B         	goto	l1497
  5248  0017D6                     u3660:
  5249  0017D6  0E00               	movlw	0
  5250  0017D8  6E26               	movwf	___flmul@prod^0,c
  5251  0017DA  0E00               	movlw	0
  5252  0017DC  6E27               	movwf	(___flmul@prod+1)^0,c
  5253  0017DE  0E00               	movlw	0
  5254  0017E0  6E28               	movwf	(___flmul@prod+2)^0,c
  5255  0017E2  0E00               	movlw	0
  5256  0017E4  6E29               	movwf	(___flmul@prod+3)^0,c
  5257  0017E6  0E00               	movlw	0
  5258  0017E8  6E1F               	movwf	___flmul@sign^0,c
  5259  0017EA  EF0C  F00C         	goto	l4124
  5260  0017EE                     l1497:
  5261  0017EE  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  5262  0017F2  0EFF               	movlw	255
  5263  0017F4  1626               	andwf	___flmul@prod^0,f,c
  5264  0017F6  0EFF               	movlw	255
  5265  0017F8  1627               	andwf	(___flmul@prod+1)^0,f,c
  5266  0017FA  0E7F               	movlw	127
  5267  0017FC  1628               	andwf	(___flmul@prod+2)^0,f,c
  5268  0017FE  0E00               	movlw	0
  5269  001800  1629               	andwf	(___flmul@prod+3)^0,f,c
  5270  001802  A025               	btfss	___flmul@bexp^0,0,c
  5271  001804  EF06  F00C         	goto	u3671
  5272  001808  EF08  F00C         	goto	u3670
  5273  00180C                     u3671:
  5274  00180C  EF09  F00C         	goto	l4122
  5275  001810                     u3670:
  5276  001810  8E28               	bsf	(___flmul@prod+2)^0,7,c
  5277  001812                     l4122:
  5278  001812  90D8               	bcf	status,0,c
  5279  001814  3025               	rrcf	___flmul@bexp^0,w,c
  5280  001816  6E29               	movwf	(___flmul@prod+3)^0,c
  5281  001818                     l4124:
  5282  001818  501F               	movf	___flmul@sign^0,w,c
  5283  00181A  1229               	iorwf	(___flmul@prod+3)^0,f,c
  5284  00181C  C026  F013         	movff	___flmul@prod,?___flmul
  5285  001820  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  5286  001824  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  5287  001828  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  5288  00182C                     l1484:
  5289  00182C  0012               	return		;funcret
  5290  00182E                     __end_of___flmul:
  5291                           	callstack 0
  5292                           
  5293 ;; *************** function ___fladd *****************
  5294 ;; Defined at:
  5295 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  b               4   43[COMRAM] unsigned char 
  5298 ;;  a               4   47[COMRAM] unsigned char 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  grs             1   58[COMRAM] unsigned char 
  5301 ;;  bexp            1   57[COMRAM] unsigned char 
  5302 ;;  aexp            1   56[COMRAM] unsigned char 
  5303 ;;  signs           1   55[COMRAM] unsigned char 
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  4   43[COMRAM] unsigned char 
  5306 ;; Registers used:
  5307 ;;		wreg, status,2, status,0
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5313 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5314 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5315 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5316 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5317 ;;Total ram usage:       16 bytes
  5318 ;; Hardware stack levels used: 1
  5319 ;; Hardware stack levels required when called: 4
  5320 ;; This function calls:
  5321 ;;		Nothing
  5322 ;; This function is called by:
  5323 ;;		_main
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           	psect	text21
  5328  000F44                     __ptext21:
  5329                           	callstack 0
  5330  000F44                     ___fladd:
  5331                           	callstack 26
  5332  000F44  502F               	movf	(___fladd@b+3)^0,w,c
  5333  000F46  0B80               	andlw	128
  5334  000F48  6E38               	movwf	___fladd@signs^0,c
  5335  000F4A  502F               	movf	(___fladd@b+3)^0,w,c
  5336  000F4C  242F               	addwf	(___fladd@b+3)^0,w,c
  5337  000F4E  6E3A               	movwf	___fladd@bexp^0,c
  5338  000F50  AE2E               	btfss	(___fladd@b+2)^0,7,c
  5339  000F52  EFAD  F007         	goto	u3101
  5340  000F56  EFAF  F007         	goto	u3100
  5341  000F5A                     u3101:
  5342  000F5A  EFB0  F007         	goto	l3804
  5343  000F5E                     u3100:
  5344  000F5E  803A               	bsf	___fladd@bexp^0,0,c
  5345  000F60                     l3804:
  5346  000F60  503A               	movf	___fladd@bexp^0,w,c
  5347  000F62  B4D8               	btfsc	status,2,c
  5348  000F64  EFB6  F007         	goto	u3111
  5349  000F68  EFB8  F007         	goto	u3110
  5350  000F6C                     u3111:
  5351  000F6C  EFCD  F007         	goto	l3814
  5352  000F70                     u3110:
  5353  000F70  283A               	incf	___fladd@bexp^0,w,c
  5354  000F72  A4D8               	btfss	status,2,c
  5355  000F74  EFBE  F007         	goto	u3121
  5356  000F78  EFC0  F007         	goto	u3120
  5357  000F7C                     u3121:
  5358  000F7C  EFC8  F007         	goto	l3810
  5359  000F80                     u3120:
  5360  000F80  0E00               	movlw	0
  5361  000F82  6E2C               	movwf	___fladd@b^0,c
  5362  000F84  0E00               	movlw	0
  5363  000F86  6E2D               	movwf	(___fladd@b+1)^0,c
  5364  000F88  0E00               	movlw	0
  5365  000F8A  6E2E               	movwf	(___fladd@b+2)^0,c
  5366  000F8C  0E00               	movlw	0
  5367  000F8E  6E2F               	movwf	(___fladd@b+3)^0,c
  5368  000F90                     l3810:
  5369  000F90  8E2E               	bsf	(___fladd@b+2)^0,7,c
  5370  000F92  0E00               	movlw	0
  5371  000F94  6E2F               	movwf	(___fladd@b+3)^0,c
  5372  000F96  EFD5  F007         	goto	l3816
  5373  000F9A                     l3814:
  5374  000F9A  0E00               	movlw	0
  5375  000F9C  6E2C               	movwf	___fladd@b^0,c
  5376  000F9E  0E00               	movlw	0
  5377  000FA0  6E2D               	movwf	(___fladd@b+1)^0,c
  5378  000FA2  0E00               	movlw	0
  5379  000FA4  6E2E               	movwf	(___fladd@b+2)^0,c
  5380  000FA6  0E00               	movlw	0
  5381  000FA8  6E2F               	movwf	(___fladd@b+3)^0,c
  5382  000FAA                     l3816:
  5383  000FAA  5033               	movf	(___fladd@a+3)^0,w,c
  5384  000FAC  0B80               	andlw	128
  5385  000FAE  6E39               	movwf	___fladd@aexp^0,c
  5386  000FB0  5038               	movf	___fladd@signs^0,w,c
  5387  000FB2  1839               	xorwf	___fladd@aexp^0,w,c
  5388  000FB4  B4D8               	btfsc	status,2,c
  5389  000FB6  EFDF  F007         	goto	u3131
  5390  000FBA  EFE1  F007         	goto	u3130
  5391  000FBE                     u3131:
  5392  000FBE  EFE2  F007         	goto	l3822
  5393  000FC2                     u3130:
  5394  000FC2  8C38               	bsf	___fladd@signs^0,6,c
  5395  000FC4                     l3822:
  5396  000FC4  5033               	movf	(___fladd@a+3)^0,w,c
  5397  000FC6  2433               	addwf	(___fladd@a+3)^0,w,c
  5398  000FC8  6E39               	movwf	___fladd@aexp^0,c
  5399  000FCA  AE32               	btfss	(___fladd@a+2)^0,7,c
  5400  000FCC  EFEA  F007         	goto	u3141
  5401  000FD0  EFEC  F007         	goto	u3140
  5402  000FD4                     u3141:
  5403  000FD4  EFED  F007         	goto	l3828
  5404  000FD8                     u3140:
  5405  000FD8  8039               	bsf	___fladd@aexp^0,0,c
  5406  000FDA                     l3828:
  5407  000FDA  5039               	movf	___fladd@aexp^0,w,c
  5408  000FDC  B4D8               	btfsc	status,2,c
  5409  000FDE  EFF3  F007         	goto	u3151
  5410  000FE2  EFF5  F007         	goto	u3150
  5411  000FE6                     u3151:
  5412  000FE6  EF0A  F008         	goto	l3838
  5413  000FEA                     u3150:
  5414  000FEA  2839               	incf	___fladd@aexp^0,w,c
  5415  000FEC  A4D8               	btfss	status,2,c
  5416  000FEE  EFFB  F007         	goto	u3161
  5417  000FF2  EFFD  F007         	goto	u3160
  5418  000FF6                     u3161:
  5419  000FF6  EF05  F008         	goto	l3834
  5420  000FFA                     u3160:
  5421  000FFA  0E00               	movlw	0
  5422  000FFC  6E30               	movwf	___fladd@a^0,c
  5423  000FFE  0E00               	movlw	0
  5424  001000  6E31               	movwf	(___fladd@a+1)^0,c
  5425  001002  0E00               	movlw	0
  5426  001004  6E32               	movwf	(___fladd@a+2)^0,c
  5427  001006  0E00               	movlw	0
  5428  001008  6E33               	movwf	(___fladd@a+3)^0,c
  5429  00100A                     l3834:
  5430  00100A  8E32               	bsf	(___fladd@a+2)^0,7,c
  5431  00100C  0E00               	movlw	0
  5432  00100E  6E33               	movwf	(___fladd@a+3)^0,c
  5433  001010  EF12  F008         	goto	l3840
  5434  001014                     l3838:
  5435  001014  0E00               	movlw	0
  5436  001016  6E30               	movwf	___fladd@a^0,c
  5437  001018  0E00               	movlw	0
  5438  00101A  6E31               	movwf	(___fladd@a+1)^0,c
  5439  00101C  0E00               	movlw	0
  5440  00101E  6E32               	movwf	(___fladd@a+2)^0,c
  5441  001020  0E00               	movlw	0
  5442  001022  6E33               	movwf	(___fladd@a+3)^0,c
  5443  001024                     l3840:
  5444  001024  503A               	movf	___fladd@bexp^0,w,c
  5445  001026  5C39               	subwf	___fladd@aexp^0,w,c
  5446  001028  B0D8               	btfsc	status,0,c
  5447  00102A  EF19  F008         	goto	u3171
  5448  00102E  EF1B  F008         	goto	u3170
  5449  001032                     u3171:
  5450  001032  EF42  F008         	goto	l3876
  5451  001036                     u3170:
  5452  001036  AC38               	btfss	___fladd@signs^0,6,c
  5453  001038  EF20  F008         	goto	u3181
  5454  00103C  EF22  F008         	goto	u3180
  5455  001040                     u3181:
  5456  001040  EF24  F008         	goto	l3846
  5457  001044                     u3180:
  5458  001044  0E80               	movlw	128
  5459  001046  1A38               	xorwf	___fladd@signs^0,f,c
  5460  001048                     l3846:
  5461  001048  C03A  F03B         	movff	___fladd@bexp,___fladd@grs
  5462  00104C  C039  F03A         	movff	___fladd@aexp,___fladd@bexp
  5463  001050  C03B  F039         	movff	___fladd@grs,___fladd@aexp
  5464  001054  C02C  F03B         	movff	___fladd@b,___fladd@grs
  5465  001058  C030  F02C         	movff	___fladd@a,___fladd@b
  5466  00105C  C03B  F030         	movff	___fladd@grs,___fladd@a
  5467  001060  C02D  F03B         	movff	___fladd@b+1,___fladd@grs
  5468  001064  C031  F02D         	movff	___fladd@a+1,___fladd@b+1
  5469  001068  C03B  F031         	movff	___fladd@grs,___fladd@a+1
  5470  00106C  C02E  F03B         	movff	___fladd@b+2,___fladd@grs
  5471  001070  C032  F02E         	movff	___fladd@a+2,___fladd@b+2
  5472  001074  C03B  F032         	movff	___fladd@grs,___fladd@a+2
  5473  001078  C02F  F03B         	movff	___fladd@b+3,___fladd@grs
  5474  00107C  C033  F02F         	movff	___fladd@a+3,___fladd@b+3
  5475  001080  C03B  F033         	movff	___fladd@grs,___fladd@a+3
  5476  001084                     l3876:
  5477  001084  0E00               	movlw	0
  5478  001086  6E3B               	movwf	___fladd@grs^0,c
  5479  001088  503A               	movf	___fladd@bexp^0,w,c
  5480  00108A  C039  F034         	movff	___fladd@aexp,??___fladd
  5481  00108E  6A35               	clrf	(??___fladd+1)^0,c
  5482  001090  5E34               	subwf	??___fladd^0,f,c
  5483  001092  0E00               	movlw	0
  5484  001094  5A35               	subwfb	(??___fladd+1)^0,f,c
  5485  001096  BE35               	btfsc	(??___fladd+1)^0,7,c
  5486  001098  EF57  F008         	goto	u3191
  5487  00109C  5035               	movf	(??___fladd+1)^0,w,c
  5488  00109E  E109               	bnz	u3190
  5489  0010A0  0E1A               	movlw	26
  5490  0010A2  5C34               	subwf	??___fladd^0,w,c
  5491  0010A4  A0D8               	btfss	status,0,c
  5492  0010A6  EF57  F008         	goto	u3191
  5493  0010AA  EF59  F008         	goto	u3190
  5494  0010AE                     u3191:
  5495  0010AE  EF90  F008         	goto	l1395
  5496  0010B2                     u3190:
  5497  0010B2  502C               	movf	___fladd@b^0,w,c
  5498  0010B4  102D               	iorwf	(___fladd@b+1)^0,w,c
  5499  0010B6  102E               	iorwf	(___fladd@b+2)^0,w,c
  5500  0010B8  102F               	iorwf	(___fladd@b+3)^0,w,c
  5501  0010BA  A4D8               	btfss	status,2,c
  5502  0010BC  EF62  F008         	goto	u3201
  5503  0010C0  EF65  F008         	goto	u3200
  5504  0010C4                     u3201:
  5505  0010C4  0E01               	movlw	1
  5506  0010C6  EF66  F008         	goto	u3210
  5507  0010CA                     u3200:
  5508  0010CA  0E00               	movlw	0
  5509  0010CC                     u3210:
  5510  0010CC  6E3B               	movwf	___fladd@grs^0,c
  5511  0010CE  0E00               	movlw	0
  5512  0010D0  6E2C               	movwf	___fladd@b^0,c
  5513  0010D2  0E00               	movlw	0
  5514  0010D4  6E2D               	movwf	(___fladd@b+1)^0,c
  5515  0010D6  0E00               	movlw	0
  5516  0010D8  6E2E               	movwf	(___fladd@b+2)^0,c
  5517  0010DA  0E00               	movlw	0
  5518  0010DC  6E2F               	movwf	(___fladd@b+3)^0,c
  5519  0010DE  C039  F03A         	movff	___fladd@aexp,___fladd@bexp
  5520  0010E2  EF99  F008         	goto	l1394
  5521  0010E6                     l1396:
  5522  0010E6  A03B               	btfss	___fladd@grs^0,0,c
  5523  0010E8  EF78  F008         	goto	u3221
  5524  0010EC  EF7A  F008         	goto	u3220
  5525  0010F0                     u3221:
  5526  0010F0  EF80  F008         	goto	l3888
  5527  0010F4                     u3220:
  5528  0010F4  90D8               	bcf	status,0,c
  5529  0010F6  303B               	rrcf	___fladd@grs^0,w,c
  5530  0010F8  0901               	iorlw	1
  5531  0010FA  6E3B               	movwf	___fladd@grs^0,c
  5532  0010FC  EF82  F008         	goto	l3890
  5533  001100                     l3888:
  5534  001100  90D8               	bcf	status,0,c
  5535  001102  323B               	rrcf	___fladd@grs^0,f,c
  5536  001104                     l3890:
  5537  001104  A02C               	btfss	___fladd@b^0,0,c
  5538  001106  EF87  F008         	goto	u3231
  5539  00110A  EF89  F008         	goto	u3230
  5540  00110E                     u3231:
  5541  00110E  EF8A  F008         	goto	l3894
  5542  001112                     u3230:
  5543  001112  8E3B               	bsf	___fladd@grs^0,7,c
  5544  001114                     l3894:
  5545  001114  342F               	rlcf	(___fladd@b+3)^0,w,c
  5546  001116  322F               	rrcf	(___fladd@b+3)^0,f,c
  5547  001118  322E               	rrcf	(___fladd@b+2)^0,f,c
  5548  00111A  322D               	rrcf	(___fladd@b+1)^0,f,c
  5549  00111C  322C               	rrcf	___fladd@b^0,f,c
  5550  00111E  2A3A               	incf	___fladd@bexp^0,f,c
  5551  001120                     l1395:
  5552  001120  5039               	movf	___fladd@aexp^0,w,c
  5553  001122  5C3A               	subwf	___fladd@bexp^0,w,c
  5554  001124  A0D8               	btfss	status,0,c
  5555  001126  EF97  F008         	goto	u3241
  5556  00112A  EF99  F008         	goto	u3240
  5557  00112E                     u3241:
  5558  00112E  EF73  F008         	goto	l1396
  5559  001132                     u3240:
  5560  001132                     l1394:
  5561  001132  BC38               	btfsc	___fladd@signs^0,6,c
  5562  001134  EF9E  F008         	goto	u3251
  5563  001138  EFA0  F008         	goto	u3250
  5564  00113C                     u3251:
  5565  00113C  EFE0  F008         	goto	l3922
  5566  001140                     u3250:
  5567  001140  503A               	movf	___fladd@bexp^0,w,c
  5568  001142  A4D8               	btfss	status,2,c
  5569  001144  EFA6  F008         	goto	u3261
  5570  001148  EFA8  F008         	goto	u3260
  5571  00114C                     u3261:
  5572  00114C  EFB2  F008         	goto	l3904
  5573  001150                     u3260:
  5574  001150  0E00               	movlw	0
  5575  001152  6E2C               	movwf	?___fladd^0,c
  5576  001154  0E00               	movlw	0
  5577  001156  6E2D               	movwf	(?___fladd+1)^0,c
  5578  001158  0E00               	movlw	0
  5579  00115A  6E2E               	movwf	(?___fladd+2)^0,c
  5580  00115C  0E00               	movlw	0
  5581  00115E  6E2F               	movwf	(?___fladd+3)^0,c
  5582  001160  EF01  F00A         	goto	l1403
  5583  001164                     l3904:
  5584  001164  5030               	movf	___fladd@a^0,w,c
  5585  001166  262C               	addwf	___fladd@b^0,f,c
  5586  001168  5031               	movf	(___fladd@a+1)^0,w,c
  5587  00116A  222D               	addwfc	(___fladd@b+1)^0,f,c
  5588  00116C  5032               	movf	(___fladd@a+2)^0,w,c
  5589  00116E  222E               	addwfc	(___fladd@b+2)^0,f,c
  5590  001170  5033               	movf	(___fladd@a+3)^0,w,c
  5591  001172  222F               	addwfc	(___fladd@b+3)^0,f,c
  5592  001174  A02F               	btfss	(___fladd@b+3)^0,0,c
  5593  001176  EFBF  F008         	goto	u3271
  5594  00117A  EFC1  F008         	goto	u3270
  5595  00117E                     u3271:
  5596  00117E  EF6D  F009         	goto	l3958
  5597  001182                     u3270:
  5598  001182  A03B               	btfss	___fladd@grs^0,0,c
  5599  001184  EFC6  F008         	goto	u3281
  5600  001188  EFC8  F008         	goto	u3280
  5601  00118C                     u3281:
  5602  00118C  EFCE  F008         	goto	l3912
  5603  001190                     u3280:
  5604  001190  90D8               	bcf	status,0,c
  5605  001192  303B               	rrcf	___fladd@grs^0,w,c
  5606  001194  0901               	iorlw	1
  5607  001196  6E3B               	movwf	___fladd@grs^0,c
  5608  001198  EFD0  F008         	goto	l3914
  5609  00119C                     l3912:
  5610  00119C  90D8               	bcf	status,0,c
  5611  00119E  323B               	rrcf	___fladd@grs^0,f,c
  5612  0011A0                     l3914:
  5613  0011A0  A02C               	btfss	___fladd@b^0,0,c
  5614  0011A2  EFD5  F008         	goto	u3291
  5615  0011A6  EFD7  F008         	goto	u3290
  5616  0011AA                     u3291:
  5617  0011AA  EFD8  F008         	goto	l3918
  5618  0011AE                     u3290:
  5619  0011AE  8E3B               	bsf	___fladd@grs^0,7,c
  5620  0011B0                     l3918:
  5621  0011B0  342F               	rlcf	(___fladd@b+3)^0,w,c
  5622  0011B2  322F               	rrcf	(___fladd@b+3)^0,f,c
  5623  0011B4  322E               	rrcf	(___fladd@b+2)^0,f,c
  5624  0011B6  322D               	rrcf	(___fladd@b+1)^0,f,c
  5625  0011B8  322C               	rrcf	___fladd@b^0,f,c
  5626  0011BA  2A3A               	incf	___fladd@bexp^0,f,c
  5627  0011BC  EF6D  F009         	goto	l3958
  5628  0011C0                     l3922:
  5629  0011C0  5030               	movf	___fladd@a^0,w,c
  5630  0011C2  5C2C               	subwf	___fladd@b^0,w,c
  5631  0011C4  5031               	movf	(___fladd@a+1)^0,w,c
  5632  0011C6  582D               	subwfb	(___fladd@b+1)^0,w,c
  5633  0011C8  5032               	movf	(___fladd@a+2)^0,w,c
  5634  0011CA  582E               	subwfb	(___fladd@b+2)^0,w,c
  5635  0011CC  502F               	movf	(___fladd@b+3)^0,w,c
  5636  0011CE  0A80               	xorlw	128
  5637  0011D0  6E34               	movwf	??___fladd^0,c
  5638  0011D2  5033               	movf	(___fladd@a+3)^0,w,c
  5639  0011D4  0A80               	xorlw	128
  5640  0011D6  5834               	subwfb	??___fladd^0,w,c
  5641  0011D8  B0D8               	btfsc	status,0,c
  5642  0011DA  EFF1  F008         	goto	u3301
  5643  0011DE  EFF3  F008         	goto	u3300
  5644  0011E2                     u3301:
  5645  0011E2  EF1E  F009         	goto	l3932
  5646  0011E6                     u3300:
  5647  0011E6  502C               	movf	___fladd@b^0,w,c
  5648  0011E8  5C30               	subwf	___fladd@a^0,w,c
  5649  0011EA  6E34               	movwf	??___fladd^0,c
  5650  0011EC  502D               	movf	(___fladd@b+1)^0,w,c
  5651  0011EE  5831               	subwfb	(___fladd@a+1)^0,w,c
  5652  0011F0  6E35               	movwf	(??___fladd+1)^0,c
  5653  0011F2  502E               	movf	(___fladd@b+2)^0,w,c
  5654  0011F4  5832               	subwfb	(___fladd@a+2)^0,w,c
  5655  0011F6  6E36               	movwf	(??___fladd+2)^0,c
  5656  0011F8  502F               	movf	(___fladd@b+3)^0,w,c
  5657  0011FA  5833               	subwfb	(___fladd@a+3)^0,w,c
  5658  0011FC  6E37               	movwf	(??___fladd+3)^0,c
  5659  0011FE  0EFF               	movlw	255
  5660  001200  2434               	addwf	??___fladd^0,w,c
  5661  001202  6E2C               	movwf	___fladd@b^0,c
  5662  001204  0EFF               	movlw	255
  5663  001206  2035               	addwfc	(??___fladd+1)^0,w,c
  5664  001208  6E2D               	movwf	(___fladd@b+1)^0,c
  5665  00120A  0EFF               	movlw	255
  5666  00120C  2036               	addwfc	(??___fladd+2)^0,w,c
  5667  00120E  6E2E               	movwf	(___fladd@b+2)^0,c
  5668  001210  0EFF               	movlw	255
  5669  001212  2037               	addwfc	(??___fladd+3)^0,w,c
  5670  001214  6E2F               	movwf	(___fladd@b+3)^0,c
  5671  001216  0E80               	movlw	128
  5672  001218  1A38               	xorwf	___fladd@signs^0,f,c
  5673  00121A  6C3B               	negf	___fladd@grs^0,c
  5674  00121C  503B               	movf	___fladd@grs^0,w,c
  5675  00121E  A4D8               	btfss	status,2,c
  5676  001220  EF14  F009         	goto	u3311
  5677  001224  EF16  F009         	goto	u3310
  5678  001228                     u3311:
  5679  001228  EF26  F009         	goto	l1411
  5680  00122C                     u3310:
  5681  00122C  0E01               	movlw	1
  5682  00122E  262C               	addwf	___fladd@b^0,f,c
  5683  001230  0E00               	movlw	0
  5684  001232  222D               	addwfc	(___fladd@b+1)^0,f,c
  5685  001234  222E               	addwfc	(___fladd@b+2)^0,f,c
  5686  001236  222F               	addwfc	(___fladd@b+3)^0,f,c
  5687  001238  EF26  F009         	goto	l1411
  5688  00123C                     l3932:
  5689  00123C  5030               	movf	___fladd@a^0,w,c
  5690  00123E  5E2C               	subwf	___fladd@b^0,f,c
  5691  001240  5031               	movf	(___fladd@a+1)^0,w,c
  5692  001242  5A2D               	subwfb	(___fladd@b+1)^0,f,c
  5693  001244  5032               	movf	(___fladd@a+2)^0,w,c
  5694  001246  5A2E               	subwfb	(___fladd@b+2)^0,f,c
  5695  001248  5033               	movf	(___fladd@a+3)^0,w,c
  5696  00124A  5A2F               	subwfb	(___fladd@b+3)^0,f,c
  5697  00124C                     l1411:
  5698  00124C  502C               	movf	___fladd@b^0,w,c
  5699  00124E  102D               	iorwf	(___fladd@b+1)^0,w,c
  5700  001250  102E               	iorwf	(___fladd@b+2)^0,w,c
  5701  001252  102F               	iorwf	(___fladd@b+3)^0,w,c
  5702  001254  A4D8               	btfss	status,2,c
  5703  001256  EF2F  F009         	goto	u3321
  5704  00125A  EF31  F009         	goto	u3320
  5705  00125E                     u3321:
  5706  00125E  EF66  F009         	goto	l3956
  5707  001262                     u3320:
  5708  001262  503B               	movf	___fladd@grs^0,w,c
  5709  001264  A4D8               	btfss	status,2,c
  5710  001266  EF37  F009         	goto	u3331
  5711  00126A  EF39  F009         	goto	u3330
  5712  00126E                     u3331:
  5713  00126E  EF66  F009         	goto	l3956
  5714  001272                     u3330:
  5715  001272  0E00               	movlw	0
  5716  001274  6E2C               	movwf	?___fladd^0,c
  5717  001276  0E00               	movlw	0
  5718  001278  6E2D               	movwf	(?___fladd+1)^0,c
  5719  00127A  0E00               	movlw	0
  5720  00127C  6E2E               	movwf	(?___fladd+2)^0,c
  5721  00127E  0E00               	movlw	0
  5722  001280  6E2F               	movwf	(?___fladd+3)^0,c
  5723  001282  EF01  F00A         	goto	l1403
  5724  001286                     l3940:
  5725  001286  90D8               	bcf	status,0,c
  5726  001288  362C               	rlcf	___fladd@b^0,f,c
  5727  00128A  362D               	rlcf	(___fladd@b+1)^0,f,c
  5728  00128C  362E               	rlcf	(___fladd@b+2)^0,f,c
  5729  00128E  362F               	rlcf	(___fladd@b+3)^0,f,c
  5730  001290  AE3B               	btfss	___fladd@grs^0,7,c
  5731  001292  EF4D  F009         	goto	u3341
  5732  001296  EF4F  F009         	goto	u3340
  5733  00129A                     u3341:
  5734  00129A  EF50  F009         	goto	l3946
  5735  00129E                     u3340:
  5736  00129E  802C               	bsf	___fladd@b^0,0,c
  5737  0012A0                     l3946:
  5738  0012A0  A03B               	btfss	___fladd@grs^0,0,c
  5739  0012A2  EF55  F009         	goto	u3351
  5740  0012A6  EF57  F009         	goto	u3350
  5741  0012AA                     u3351:
  5742  0012AA  EF5B  F009         	goto	l3950
  5743  0012AE                     u3350:
  5744  0012AE  80D8               	bsf	status,0,c
  5745  0012B0  363B               	rlcf	___fladd@grs^0,f,c
  5746  0012B2  EF5D  F009         	goto	l3952
  5747  0012B6                     l3950:
  5748  0012B6  90D8               	bcf	status,0,c
  5749  0012B8  363B               	rlcf	___fladd@grs^0,f,c
  5750  0012BA                     l3952:
  5751  0012BA  503A               	movf	___fladd@bexp^0,w,c
  5752  0012BC  B4D8               	btfsc	status,2,c
  5753  0012BE  EF63  F009         	goto	u3361
  5754  0012C2  EF65  F009         	goto	u3360
  5755  0012C6                     u3361:
  5756  0012C6  EF66  F009         	goto	l3956
  5757  0012CA                     u3360:
  5758  0012CA  063A               	decf	___fladd@bexp^0,f,c
  5759  0012CC                     l3956:
  5760  0012CC  AE2E               	btfss	(___fladd@b+2)^0,7,c
  5761  0012CE  EF6B  F009         	goto	u3371
  5762  0012D2  EF6D  F009         	goto	u3370
  5763  0012D6                     u3371:
  5764  0012D6  EF43  F009         	goto	l3940
  5765  0012DA                     u3370:
  5766  0012DA                     l3958:
  5767  0012DA  0E00               	movlw	0
  5768  0012DC  6E39               	movwf	___fladd@aexp^0,c
  5769  0012DE  AE3B               	btfss	___fladd@grs^0,7,c
  5770  0012E0  EF74  F009         	goto	u3381
  5771  0012E4  EF76  F009         	goto	u3380
  5772  0012E8                     u3381:
  5773  0012E8  EF8E  F009         	goto	l1420
  5774  0012EC                     u3380:
  5775  0012EC  C03B  F034         	movff	___fladd@grs,??___fladd
  5776  0012F0  0E7F               	movlw	127
  5777  0012F2  1634               	andwf	??___fladd^0,f,c
  5778  0012F4  B4D8               	btfsc	status,2,c
  5779  0012F6  EF7F  F009         	goto	u3391
  5780  0012FA  EF81  F009         	goto	u3390
  5781  0012FE                     u3391:
  5782  0012FE  EF85  F009         	goto	l1421
  5783  001302                     u3390:
  5784  001302                     l3964:
  5785  001302  0E01               	movlw	1
  5786  001304  6E39               	movwf	___fladd@aexp^0,c
  5787  001306  EF8E  F009         	goto	l1420
  5788  00130A                     l1421:
  5789  00130A  A02C               	btfss	___fladd@b^0,0,c
  5790  00130C  EF8A  F009         	goto	u3401
  5791  001310  EF8C  F009         	goto	u3400
  5792  001314                     u3401:
  5793  001314  EF8E  F009         	goto	l1420
  5794  001318                     u3400:
  5795  001318  EF81  F009         	goto	l3964
  5796  00131C                     l1420:
  5797  00131C  5039               	movf	___fladd@aexp^0,w,c
  5798  00131E  B4D8               	btfsc	status,2,c
  5799  001320  EF94  F009         	goto	u3411
  5800  001324  EF96  F009         	goto	u3410
  5801  001328                     u3411:
  5802  001328  EFC1  F009         	goto	l3976
  5803  00132C                     u3410:
  5804  00132C  0E01               	movlw	1
  5805  00132E  262C               	addwf	___fladd@b^0,f,c
  5806  001330  0E00               	movlw	0
  5807  001332  222D               	addwfc	(___fladd@b+1)^0,f,c
  5808  001334  222E               	addwfc	(___fladd@b+2)^0,f,c
  5809  001336  222F               	addwfc	(___fladd@b+3)^0,f,c
  5810  001338  A02F               	btfss	(___fladd@b+3)^0,0,c
  5811  00133A  EFA1  F009         	goto	u3421
  5812  00133E  EFA3  F009         	goto	u3420
  5813  001342                     u3421:
  5814  001342  EFC1  F009         	goto	l3976
  5815  001346                     u3420:
  5816  001346  C02C  F034         	movff	___fladd@b,??___fladd
  5817  00134A  C02D  F035         	movff	___fladd@b+1,??___fladd+1
  5818  00134E  C02E  F036         	movff	___fladd@b+2,??___fladd+2
  5819  001352  C02F  F037         	movff	___fladd@b+3,??___fladd+3
  5820  001356  3437               	rlcf	(??___fladd+3)^0,w,c
  5821  001358  3237               	rrcf	(??___fladd+3)^0,f,c
  5822  00135A  3236               	rrcf	(??___fladd+2)^0,f,c
  5823  00135C  3235               	rrcf	(??___fladd+1)^0,f,c
  5824  00135E  3234               	rrcf	??___fladd^0,f,c
  5825  001360  C034  F02C         	movff	??___fladd,___fladd@b
  5826  001364  C035  F02D         	movff	??___fladd+1,___fladd@b+1
  5827  001368  C036  F02E         	movff	??___fladd+2,___fladd@b+2
  5828  00136C  C037  F02F         	movff	??___fladd+3,___fladd@b+3
  5829  001370  283A               	incf	___fladd@bexp^0,w,c
  5830  001372  B4D8               	btfsc	status,2,c
  5831  001374  EFBE  F009         	goto	u3431
  5832  001378  EFC0  F009         	goto	u3430
  5833  00137C                     u3431:
  5834  00137C  EFC1  F009         	goto	l3976
  5835  001380                     u3430:
  5836  001380  2A3A               	incf	___fladd@bexp^0,f,c
  5837  001382                     l3976:
  5838  001382  283A               	incf	___fladd@bexp^0,w,c
  5839  001384  B4D8               	btfsc	status,2,c
  5840  001386  EFC7  F009         	goto	u3441
  5841  00138A  EFC9  F009         	goto	u3440
  5842  00138E                     u3441:
  5843  00138E  EFD1  F009         	goto	l3980
  5844  001392                     u3440:
  5845  001392  503A               	movf	___fladd@bexp^0,w,c
  5846  001394  A4D8               	btfss	status,2,c
  5847  001396  EFCF  F009         	goto	u3451
  5848  00139A  EFD1  F009         	goto	u3450
  5849  00139E                     u3451:
  5850  00139E  EFE3  F009         	goto	l3984
  5851  0013A2                     u3450:
  5852  0013A2                     l3980:
  5853  0013A2  0E00               	movlw	0
  5854  0013A4  6E2C               	movwf	___fladd@b^0,c
  5855  0013A6  0E00               	movlw	0
  5856  0013A8  6E2D               	movwf	(___fladd@b+1)^0,c
  5857  0013AA  0E00               	movlw	0
  5858  0013AC  6E2E               	movwf	(___fladd@b+2)^0,c
  5859  0013AE  0E00               	movlw	0
  5860  0013B0  6E2F               	movwf	(___fladd@b+3)^0,c
  5861  0013B2  503A               	movf	___fladd@bexp^0,w,c
  5862  0013B4  A4D8               	btfss	status,2,c
  5863  0013B6  EFDF  F009         	goto	u3461
  5864  0013BA  EFE1  F009         	goto	u3460
  5865  0013BE                     u3461:
  5866  0013BE  EFE3  F009         	goto	l3984
  5867  0013C2                     u3460:
  5868  0013C2  0E00               	movlw	0
  5869  0013C4  6E38               	movwf	___fladd@signs^0,c
  5870  0013C6                     l3984:
  5871  0013C6  A03A               	btfss	___fladd@bexp^0,0,c
  5872  0013C8  EFE8  F009         	goto	u3471
  5873  0013CC  EFEA  F009         	goto	u3470
  5874  0013D0                     u3471:
  5875  0013D0  EFED  F009         	goto	l3988
  5876  0013D4                     u3470:
  5877  0013D4  8E2E               	bsf	(___fladd@b+2)^0,7,c
  5878  0013D6  EFEE  F009         	goto	l3990
  5879  0013DA                     l3988:
  5880  0013DA  9E2E               	bcf	(___fladd@b+2)^0,7,c
  5881  0013DC                     l3990:
  5882  0013DC  90D8               	bcf	status,0,c
  5883  0013DE  303A               	rrcf	___fladd@bexp^0,w,c
  5884  0013E0  6E2F               	movwf	(___fladd@b+3)^0,c
  5885  0013E2  AE38               	btfss	___fladd@signs^0,7,c
  5886  0013E4  EFF6  F009         	goto	u3481
  5887  0013E8  EFF8  F009         	goto	u3480
  5888  0013EC                     u3481:
  5889  0013EC  EFF9  F009         	goto	l3996
  5890  0013F0                     u3480:
  5891  0013F0  8E2F               	bsf	(___fladd@b+3)^0,7,c
  5892  0013F2                     l3996:
  5893  0013F2  C02C  F02C         	movff	___fladd@b,?___fladd
  5894  0013F6  C02D  F02D         	movff	___fladd@b+1,?___fladd+1
  5895  0013FA  C02E  F02E         	movff	___fladd@b+2,?___fladd+2
  5896  0013FE  C02F  F02F         	movff	___fladd@b+3,?___fladd+3
  5897  001402                     l1403:
  5898  001402  0012               	return		;funcret
  5899  001404                     __end_of___fladd:
  5900                           	callstack 0
  5901                           
  5902 ;; *************** function _SYSTEM_Initialize *****************
  5903 ;; Defined at:
  5904 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;		None
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;		None
  5909 ;; Return value:  Size  Location     Type
  5910 ;;                  1    wreg      void 
  5911 ;; Registers used:
  5912 ;;		wreg, status,2, status,0, cstack
  5913 ;; Tracked objects:
  5914 ;;		On entry : 0/0
  5915 ;;		On exit  : 0/0
  5916 ;;		Unchanged: 0/0
  5917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5922 ;;Total ram usage:        0 bytes
  5923 ;; Hardware stack levels used: 1
  5924 ;; Hardware stack levels required when called: 6
  5925 ;; This function calls:
  5926 ;;		_ADCC_Initialize
  5927 ;;		_INTERRUPT_Initialize
  5928 ;;		_OSCILLATOR_Initialize
  5929 ;;		_PIN_MANAGER_Initialize
  5930 ;;		_PMD_Initialize
  5931 ;;		_SPI1_Initialize
  5932 ;;		_TMR0_Initialize
  5933 ;;		_TMR1_Initialize
  5934 ;;		_TMR2_Initialize
  5935 ;; This function is called by:
  5936 ;;		_main
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           	psect	text22
  5941  003780                     __ptext22:
  5942                           	callstack 0
  5943  003780                     _SYSTEM_Initialize:
  5944                           	callstack 24
  5945  003780                     
  5946                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  5947  003780  EC5F  F01C         	call	_INTERRUPT_Initialize	;wreg free
  5948  003784                     
  5949                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  5950  003784  ECF6  F01B         	call	_PMD_Initialize	;wreg free
  5951  003788                     
  5952                           ;mcc_generated_files/mcc.c: 54:     SPI1_Initialize();
  5953  003788  ECE6  F01B         	call	_SPI1_Initialize	;wreg free
  5954  00378C                     
  5955                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  5956  00378C  ECB1  F015         	call	_PIN_MANAGER_Initialize	;wreg free
  5957  003790                     
  5958                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  5959  003790  EC04  F01C         	call	_OSCILLATOR_Initialize	;wreg free
  5960  003794                     
  5961                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  5962  003794  ECC4  F018         	call	_ADCC_Initialize	;wreg free
  5963  003798                     
  5964                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  5965  003798  EC81  F01B         	call	_TMR2_Initialize	;wreg free
  5966  00379C                     
  5967                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
  5968  00379C  ECA3  F019         	call	_TMR1_Initialize	;wreg free
  5969  0037A0                     
  5970                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  5971  0037A0  EC6E  F01A         	call	_TMR0_Initialize	;wreg free
  5972  0037A4  0012               	return		;funcret
  5973  0037A6                     __end_of_SYSTEM_Initialize:
  5974                           	callstack 0
  5975                           
  5976 ;; *************** function _TMR2_Initialize *****************
  5977 ;; Defined at:
  5978 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;		None
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;		None
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      void 
  5985 ;; Registers used:
  5986 ;;		wreg, status,2, status,0, cstack
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5996 ;;Total ram usage:        0 bytes
  5997 ;; Hardware stack levels used: 1
  5998 ;; Hardware stack levels required when called: 5
  5999 ;; This function calls:
  6000 ;;		_TMR2_SetInterruptHandler
  6001 ;; This function is called by:
  6002 ;;		_SYSTEM_Initialize
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           	psect	text23
  6007  003702                     __ptext23:
  6008                           	callstack 0
  6009  003702                     _TMR2_Initialize:
  6010                           	callstack 24
  6011  003702                     
  6012                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x03;
  6013  003702  0E03               	movlw	3
  6014  003704  6EBF               	movwf	191,c	;volatile
  6015                           
  6016                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
  6017  003706  0E00               	movlw	0
  6018  003708  6EBE               	movwf	190,c	;volatile
  6019                           
  6020                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
  6021  00370A  0E00               	movlw	0
  6022  00370C  6EC0               	movwf	192,c	;volatile
  6023                           
  6024                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x63;
  6025  00370E  0E63               	movlw	99
  6026  003710  6EBC               	movwf	188,c	;volatile
  6027                           
  6028                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
  6029  003712  0E00               	movlw	0
  6030  003714  6EBB               	movwf	187,c	;volatile
  6031  003716                     
  6032                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
  6033  003716  010E               	movlb	14	; () banked
  6034  003718  93CE               	bcf	206,1,b	;volatile
  6035  00371A                     
  6036                           ; BSR set to: 14
  6037                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
  6038  00371A  83C6               	bsf	198,1,b	;volatile
  6039  00371C                     
  6040                           ; BSR set to: 14
  6041                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  6042  00371C  0EC4               	movlw	low _TMR2_DefaultInterruptHandler
  6043  00371E  6E05               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
  6044  003720  0E38               	movlw	high _TMR2_DefaultInterruptHandler
  6045  003722  6E06               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
  6046  003724  0E00               	movlw	low (_TMR2_DefaultInterruptHandler shr (0+16))
  6047  003726  6E07               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+2)^0,c
  6048  003728  EC1A  F01C         	call	_TMR2_SetInterruptHandler	;wreg free
  6049  00372C                     
  6050                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xE0;
  6051  00372C  0EE0               	movlw	224
  6052  00372E  6EBD               	movwf	189,c	;volatile
  6053  003730  0012               	return		;funcret
  6054  003732                     __end_of_TMR2_Initialize:
  6055                           	callstack 0
  6056                           
  6057 ;; *************** function _TMR2_SetInterruptHandler *****************
  6058 ;; Defined at:
  6059 ;;		line 178 in file "mcc_generated_files/tmr2.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;  InterruptHan    3    4[COMRAM] PTR FTN()void 
  6062 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;		None
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  1    wreg      void 
  6067 ;; Registers used:
  6068 ;;		wreg, status,2, status,0
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6074 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6077 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6078 ;;Total ram usage:        3 bytes
  6079 ;; Hardware stack levels used: 1
  6080 ;; Hardware stack levels required when called: 4
  6081 ;; This function calls:
  6082 ;;		Nothing
  6083 ;; This function is called by:
  6084 ;;		_TMR2_Initialize
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text24
  6089  003834                     __ptext24:
  6090                           	callstack 0
  6091  003834                     _TMR2_SetInterruptHandler:
  6092                           	callstack 24
  6093  003834                     
  6094                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
  6095  003834  C005  F0D0         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  6096  003838  C006  F0D1         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  6097  00383C  C007  F0D2         	movff	TMR2_SetInterruptHandler@InterruptHandler+2,_TMR2_InterruptHandler+2
  6098  003840  0012               	return		;funcret
  6099  003842                     __end_of_TMR2_SetInterruptHandler:
  6100                           	callstack 0
  6101                           
  6102 ;; *************** function _TMR1_Initialize *****************
  6103 ;; Defined at:
  6104 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;		None
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;		None
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  1    wreg      void 
  6111 ;; Registers used:
  6112 ;;		wreg, status,2, status,0, cstack
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6120 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6121 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6122 ;;Total ram usage:        2 bytes
  6123 ;; Hardware stack levels used: 1
  6124 ;; Hardware stack levels required when called: 5
  6125 ;; This function calls:
  6126 ;;		_TMR1_SetInterruptHandler
  6127 ;; This function is called by:
  6128 ;;		_SYSTEM_Initialize
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           	psect	text25
  6133  003346                     __ptext25:
  6134                           	callstack 0
  6135  003346                     _TMR1_Initialize:
  6136                           	callstack 24
  6137  003346                     
  6138                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  6139  003346  0E00               	movlw	0
  6140  003348  6ED0               	movwf	208,c	;volatile
  6141                           
  6142                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  6143  00334A  0E00               	movlw	0
  6144  00334C  6ED1               	movwf	209,c	;volatile
  6145                           
  6146                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
  6147  00334E  0E04               	movlw	4
  6148  003350  6ED2               	movwf	210,c	;volatile
  6149                           
  6150                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xF8;
  6151  003352  0EF8               	movlw	248
  6152  003354  6ECE               	movwf	206,c	;volatile
  6153                           
  6154                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0x6E;
  6155  003356  0E6E               	movlw	110
  6156  003358  6ECD               	movwf	205,c	;volatile
  6157  00335A                     
  6158                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
  6159  00335A  010E               	movlb	14	; () banked
  6160  00335C  91CE               	bcf	206,0,b	;volatile
  6161  00335E                     
  6162                           ; BSR set to: 14
  6163                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6164  00335E  50CD               	movf	205,w,c	;volatile
  6165  003360  CFCE F008          	movff	4046,??_TMR1_Initialize	;volatile
  6166  003364  6A09               	clrf	(??_TMR1_Initialize+1)^0,c
  6167  003366  C008  F009         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  6168  00336A  6A08               	clrf	??_TMR1_Initialize^0,c
  6169  00336C  1008               	iorwf	??_TMR1_Initialize^0,w,c
  6170  00336E  0100               	movlb	0	; () banked
  6171  003370  6FE8               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  6172  003372  5009               	movf	(??_TMR1_Initialize+1)^0,w,c
  6173  003374  6FE9               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  6174  003376                     
  6175                           ; BSR set to: 0
  6176                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  6177  003376  010E               	movlb	14	; () banked
  6178  003378  81C6               	bsf	198,0,b	;volatile
  6179  00337A                     
  6180                           ; BSR set to: 14
  6181                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  6182  00337A  0EC6               	movlw	low _TMR1_DefaultInterruptHandler
  6183  00337C  6E05               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  6184  00337E  0E38               	movlw	high _TMR1_DefaultInterruptHandler
  6185  003380  6E06               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  6186  003382  0E00               	movlw	low (_TMR1_DefaultInterruptHandler shr (0+16))
  6187  003384  6E07               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+2)^0,c
  6188  003386  EC21  F01C         	call	_TMR1_SetInterruptHandler	;wreg free
  6189  00338A                     
  6190                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x31;
  6191  00338A  0E31               	movlw	49
  6192  00338C  6ECF               	movwf	207,c	;volatile
  6193  00338E  0012               	return		;funcret
  6194  003390                     __end_of_TMR1_Initialize:
  6195                           	callstack 0
  6196                           
  6197 ;; *************** function _TMR1_SetInterruptHandler *****************
  6198 ;; Defined at:
  6199 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;  InterruptHan    3    4[COMRAM] PTR FTN()void 
  6202 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;		None
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  1    wreg      void 
  6207 ;; Registers used:
  6208 ;;		wreg, status,2, status,0
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6214 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6217 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6218 ;;Total ram usage:        3 bytes
  6219 ;; Hardware stack levels used: 1
  6220 ;; Hardware stack levels required when called: 4
  6221 ;; This function calls:
  6222 ;;		Nothing
  6223 ;; This function is called by:
  6224 ;;		_TMR1_Initialize
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228                           	psect	text26
  6229  003842                     __ptext26:
  6230                           	callstack 0
  6231  003842                     _TMR1_SetInterruptHandler:
  6232                           	callstack 24
  6233  003842                     
  6234                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  6235  003842  C005  F0D3         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  6236  003846  C006  F0D4         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  6237  00384A  C007  F0D5         	movff	TMR1_SetInterruptHandler@InterruptHandler+2,_TMR1_InterruptHandler+2
  6238  00384E  0012               	return		;funcret
  6239  003850                     __end_of_TMR1_SetInterruptHandler:
  6240                           	callstack 0
  6241                           
  6242 ;; *************** function _TMR0_Initialize *****************
  6243 ;; Defined at:
  6244 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;		None
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;		None
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  1    wreg      void 
  6251 ;; Registers used:
  6252 ;;		wreg, status,2, status,0, cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6260 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6261 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6262 ;;Total ram usage:        2 bytes
  6263 ;; Hardware stack levels used: 1
  6264 ;; Hardware stack levels required when called: 5
  6265 ;; This function calls:
  6266 ;;		_TMR0_SetInterruptHandler
  6267 ;; This function is called by:
  6268 ;;		_SYSTEM_Initialize
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text27
  6273  0034DC                     __ptext27:
  6274                           	callstack 0
  6275  0034DC                     _TMR0_Initialize:
  6276                           	callstack 24
  6277  0034DC                     
  6278                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x04;
  6279  0034DC  0E04               	movlw	4
  6280  0034DE  6ED6               	movwf	214,c	;volatile
  6281  0034E0                     
  6282                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xFF;
  6283  0034E0  68D4               	setf	212,c	;volatile
  6284                           
  6285                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0xF0;
  6286  0034E2  0EF0               	movlw	240
  6287  0034E4  6ED3               	movwf	211,c	;volatile
  6288  0034E6                     
  6289                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  6290  0034E6  50D3               	movf	211,w,c	;volatile
  6291  0034E8  CFD4 F008          	movff	4052,??_TMR0_Initialize	;volatile
  6292  0034EC  6A09               	clrf	(??_TMR0_Initialize+1)^0,c
  6293  0034EE  C008  F009         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  6294  0034F2  6A08               	clrf	??_TMR0_Initialize^0,c
  6295  0034F4  1008               	iorwf	??_TMR0_Initialize^0,w,c
  6296  0034F6  6E54               	movwf	_timer0ReloadVal16bit^0,c	;volatile
  6297  0034F8  5009               	movf	(??_TMR0_Initialize+1)^0,w,c
  6298  0034FA  6E55               	movwf	(_timer0ReloadVal16bit+1)^0,c	;volatile
  6299  0034FC                     
  6300                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
  6301  0034FC  010E               	movlb	14	; () banked
  6302  0034FE  9BCA               	bcf	202,5,b	;volatile
  6303  003500                     
  6304                           ; BSR set to: 14
  6305                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
  6306  003500  8BC2               	bsf	194,5,b	;volatile
  6307  003502                     
  6308                           ; BSR set to: 14
  6309                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6310  003502  0EC8               	movlw	low _TMR0_DefaultInterruptHandler
  6311  003504  6E05               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  6312  003506  0E38               	movlw	high _TMR0_DefaultInterruptHandler
  6313  003508  6E06               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  6314  00350A  0E00               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  6315  00350C  6E07               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)^0,c
  6316  00350E  EC28  F01C         	call	_TMR0_SetInterruptHandler	;wreg free
  6317  003512                     
  6318                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
  6319  003512  0E90               	movlw	144
  6320  003514  6ED5               	movwf	213,c	;volatile
  6321  003516  0012               	return		;funcret
  6322  003518                     __end_of_TMR0_Initialize:
  6323                           	callstack 0
  6324                           
  6325 ;; *************** function _TMR0_SetInterruptHandler *****************
  6326 ;; Defined at:
  6327 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  InterruptHan    3    4[COMRAM] PTR FTN()void 
  6330 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;		None
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  1    wreg      void 
  6335 ;; Registers used:
  6336 ;;		wreg, status,2, status,0
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6342 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6345 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6346 ;;Total ram usage:        3 bytes
  6347 ;; Hardware stack levels used: 1
  6348 ;; Hardware stack levels required when called: 4
  6349 ;; This function calls:
  6350 ;;		Nothing
  6351 ;; This function is called by:
  6352 ;;		_TMR0_Initialize
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text28
  6357  003850                     __ptext28:
  6358                           	callstack 0
  6359  003850                     _TMR0_SetInterruptHandler:
  6360                           	callstack 24
  6361  003850                     
  6362                           ;mcc_generated_files/tmr0.c: 152:     TMR0_InterruptHandler = InterruptHandler;
  6363  003850  C005  F0D9         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  6364  003854  C006  F0DA         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  6365  003858  C007  F0DB         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  6366  00385C  0012               	return		;funcret
  6367  00385E                     __end_of_TMR0_SetInterruptHandler:
  6368                           	callstack 0
  6369                           
  6370 ;; *************** function _SPI1_Initialize *****************
  6371 ;; Defined at:
  6372 ;;		line 62 in file "mcc_generated_files/spi1.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;		None
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;		None
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  1    wreg      void 
  6379 ;; Registers used:
  6380 ;;		wreg, status,2
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6390 ;;Total ram usage:        0 bytes
  6391 ;; Hardware stack levels used: 1
  6392 ;; Hardware stack levels required when called: 4
  6393 ;; This function calls:
  6394 ;;		Nothing
  6395 ;; This function is called by:
  6396 ;;		_SYSTEM_Initialize
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400                           	psect	text29
  6401  0037CC                     __ptext29:
  6402                           	callstack 0
  6403  0037CC                     _SPI1_Initialize:
  6404                           	callstack 25
  6405  0037CC                     
  6406                           ;mcc_generated_files/spi1.c: 65:     SSP1CLKPPS = 13;
  6407  0037CC  0E0D               	movlw	13
  6408  0037CE  010E               	movlb	14	; () banked
  6409  0037D0  6FB7               	movwf	183,b	;volatile
  6410                           
  6411                           ;mcc_generated_files/spi1.c: 66:     SSP1DATPPS = 12;
  6412  0037D2  0E0C               	movlw	12
  6413  0037D4  6FB8               	movwf	184,b	;volatile
  6414                           
  6415                           ;mcc_generated_files/spi1.c: 67:     RB5PPS = 15;
  6416  0037D6  0E0F               	movlw	15
  6417  0037D8  6FF4               	movwf	244,b	;volatile
  6418                           
  6419                           ;mcc_generated_files/spi1.c: 69:     SSP1STAT = 0x40;
  6420  0037DA  0E40               	movlw	64
  6421  0037DC  6E95               	movwf	149,c	;volatile
  6422                           
  6423                           ;mcc_generated_files/spi1.c: 70:     SSP1CON1 = 0x00;
  6424  0037DE  0E00               	movlw	0
  6425  0037E0  6E96               	movwf	150,c	;volatile
  6426                           
  6427                           ;mcc_generated_files/spi1.c: 71:     SSP1ADD = 0x01;
  6428  0037E2  0E01               	movlw	1
  6429  0037E4  6E93               	movwf	147,c	;volatile
  6430  0037E6                     
  6431                           ; BSR set to: 14
  6432                           ;mcc_generated_files/spi1.c: 72:     TRISBbits.TRISB5 = 0;
  6433  0037E6  9A89               	bcf	137,5,c	;volatile
  6434  0037E8                     
  6435                           ; BSR set to: 14
  6436                           ;mcc_generated_files/spi1.c: 73:     SSP1CON1bits.SSPEN = 0;
  6437  0037E8  9A96               	bcf	150,5,c	;volatile
  6438  0037EA                     
  6439                           ; BSR set to: 14
  6440  0037EA  0012               	return		;funcret
  6441  0037EC                     __end_of_SPI1_Initialize:
  6442                           	callstack 0
  6443                           
  6444 ;; *************** function _PMD_Initialize *****************
  6445 ;; Defined at:
  6446 ;;		line 77 in file "mcc_generated_files/mcc.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;		None
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;		None
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  1    wreg      void 
  6453 ;; Registers used:
  6454 ;;		wreg, status,2
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6464 ;;Total ram usage:        0 bytes
  6465 ;; Hardware stack levels used: 1
  6466 ;; Hardware stack levels required when called: 4
  6467 ;; This function calls:
  6468 ;;		Nothing
  6469 ;; This function is called by:
  6470 ;;		_SYSTEM_Initialize
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text30
  6475  0037EC                     __ptext30:
  6476                           	callstack 0
  6477  0037EC                     _PMD_Initialize:
  6478                           	callstack 25
  6479  0037EC                     
  6480                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
  6481  0037EC  0E00               	movlw	0
  6482  0037EE  010E               	movlb	14	; () banked
  6483  0037F0  6FE1               	movwf	225,b	;volatile
  6484                           
  6485                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
  6486  0037F2  0E00               	movlw	0
  6487  0037F4  6FE2               	movwf	226,b	;volatile
  6488                           
  6489                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
  6490  0037F6  0E00               	movlw	0
  6491  0037F8  6FE3               	movwf	227,b	;volatile
  6492                           
  6493                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
  6494  0037FA  0E00               	movlw	0
  6495  0037FC  6FE4               	movwf	228,b	;volatile
  6496                           
  6497                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
  6498  0037FE  0E00               	movlw	0
  6499  003800  6FE5               	movwf	229,b	;volatile
  6500                           
  6501                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
  6502  003802  0E00               	movlw	0
  6503  003804  6FE6               	movwf	230,b	;volatile
  6504  003806                     
  6505                           ; BSR set to: 14
  6506  003806  0012               	return		;funcret
  6507  003808                     __end_of_PMD_Initialize:
  6508                           	callstack 0
  6509                           
  6510 ;; *************** function _PIN_MANAGER_Initialize *****************
  6511 ;; Defined at:
  6512 ;;		line 60 in file "mcc_generated_files/pin_manager.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;		None
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;		None
  6517 ;; Return value:  Size  Location     Type
  6518 ;;                  1    wreg      void 
  6519 ;; Registers used:
  6520 ;;		wreg, status,2, status,0, cstack
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6530 ;;Total ram usage:        0 bytes
  6531 ;; Hardware stack levels used: 1
  6532 ;; Hardware stack levels required when called: 5
  6533 ;; This function calls:
  6534 ;;		_IOCCF0_SetInterruptHandler
  6535 ;;		_IOCCF1_SetInterruptHandler
  6536 ;;		_IOCCF2_SetInterruptHandler
  6537 ;;		_IOCCF3_SetInterruptHandler
  6538 ;; This function is called by:
  6539 ;;		_SYSTEM_Initialize
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           	psect	text31
  6544  002B62                     __ptext31:
  6545                           	callstack 0
  6546  002B62                     _PIN_MANAGER_Initialize:
  6547                           	callstack 24
  6548  002B62                     
  6549                           ;mcc_generated_files/pin_manager.c: 65:     LATE = 0x00;
  6550  002B62  0E00               	movlw	0
  6551  002B64  6E87               	movwf	135,c	;volatile
  6552                           
  6553                           ;mcc_generated_files/pin_manager.c: 66:     LATD = 0x00;
  6554  002B66  0E00               	movlw	0
  6555  002B68  6E86               	movwf	134,c	;volatile
  6556                           
  6557                           ;mcc_generated_files/pin_manager.c: 67:     LATA = 0x00;
  6558  002B6A  0E00               	movlw	0
  6559  002B6C  6E83               	movwf	131,c	;volatile
  6560                           
  6561                           ;mcc_generated_files/pin_manager.c: 68:     LATB = 0x00;
  6562  002B6E  0E00               	movlw	0
  6563  002B70  6E84               	movwf	132,c	;volatile
  6564                           
  6565                           ;mcc_generated_files/pin_manager.c: 69:     LATC = 0x0F;
  6566  002B72  0E0F               	movlw	15
  6567  002B74  6E85               	movwf	133,c	;volatile
  6568                           
  6569                           ;mcc_generated_files/pin_manager.c: 74:     TRISE = 0x07;
  6570  002B76  0E07               	movlw	7
  6571  002B78  6E8C               	movwf	140,c	;volatile
  6572                           
  6573                           ;mcc_generated_files/pin_manager.c: 75:     TRISA = 0xF8;
  6574  002B7A  0EF8               	movlw	248
  6575  002B7C  6E88               	movwf	136,c	;volatile
  6576                           
  6577                           ;mcc_generated_files/pin_manager.c: 76:     TRISB = 0xD0;
  6578  002B7E  0ED0               	movlw	208
  6579  002B80  6E89               	movwf	137,c	;volatile
  6580                           
  6581                           ;mcc_generated_files/pin_manager.c: 77:     TRISC = 0x1F;
  6582  002B82  0E1F               	movlw	31
  6583  002B84  6E8A               	movwf	138,c	;volatile
  6584  002B86                     
  6585                           ;mcc_generated_files/pin_manager.c: 78:     TRISD = 0xFF;
  6586  002B86  688B               	setf	139,c	;volatile
  6587  002B88                     
  6588                           ;mcc_generated_files/pin_manager.c: 83:     ANSELD = 0xFF;
  6589  002B88  010F               	movlb	15	; () banked
  6590  002B8A  6926               	setf	38,b	;volatile
  6591                           
  6592                           ;mcc_generated_files/pin_manager.c: 84:     ANSELC = 0xF0;
  6593  002B8C  0EF0               	movlw	240
  6594  002B8E  6F21               	movwf	33,b	;volatile
  6595                           
  6596                           ;mcc_generated_files/pin_manager.c: 85:     ANSELB = 0xCF;
  6597  002B90  0ECF               	movlw	207
  6598  002B92  6F19               	movwf	25,b	;volatile
  6599                           
  6600                           ;mcc_generated_files/pin_manager.c: 86:     ANSELE = 0x07;
  6601  002B94  0E07               	movlw	7
  6602  002B96  6F2E               	movwf	46,b	;volatile
  6603                           
  6604                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xEF;
  6605  002B98  0EEF               	movlw	239
  6606  002B9A  6F11               	movwf	17,b	;volatile
  6607                           
  6608                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x00;
  6609  002B9C  0E00               	movlw	0
  6610  002B9E  6F25               	movwf	37,b	;volatile
  6611                           
  6612                           ;mcc_generated_files/pin_manager.c: 93:     WPUE = 0x00;
  6613  002BA0  0E00               	movlw	0
  6614  002BA2  6F2D               	movwf	45,b	;volatile
  6615                           
  6616                           ;mcc_generated_files/pin_manager.c: 94:     WPUB = 0x00;
  6617  002BA4  0E00               	movlw	0
  6618  002BA6  6F18               	movwf	24,b	;volatile
  6619                           
  6620                           ;mcc_generated_files/pin_manager.c: 95:     WPUA = 0x00;
  6621  002BA8  0E00               	movlw	0
  6622  002BAA  6F10               	movwf	16,b	;volatile
  6623                           
  6624                           ;mcc_generated_files/pin_manager.c: 96:     WPUC = 0x00;
  6625  002BAC  0E00               	movlw	0
  6626  002BAE  6F20               	movwf	32,b	;volatile
  6627                           
  6628                           ;mcc_generated_files/pin_manager.c: 101:     ODCONE = 0x00;
  6629  002BB0  0E00               	movlw	0
  6630  002BB2  6F2C               	movwf	44,b	;volatile
  6631                           
  6632                           ;mcc_generated_files/pin_manager.c: 102:     ODCONA = 0x00;
  6633  002BB4  0E00               	movlw	0
  6634  002BB6  6F0F               	movwf	15,b	;volatile
  6635                           
  6636                           ;mcc_generated_files/pin_manager.c: 103:     ODCONB = 0x00;
  6637  002BB8  0E00               	movlw	0
  6638  002BBA  6F17               	movwf	23,b	;volatile
  6639                           
  6640                           ;mcc_generated_files/pin_manager.c: 104:     ODCONC = 0x00;
  6641  002BBC  0E00               	movlw	0
  6642  002BBE  6F1F               	movwf	31,b	;volatile
  6643                           
  6644                           ;mcc_generated_files/pin_manager.c: 105:     ODCOND = 0x00;
  6645  002BC0  0E00               	movlw	0
  6646  002BC2  6F24               	movwf	36,b	;volatile
  6647  002BC4                     
  6648                           ; BSR set to: 15
  6649                           ;mcc_generated_files/pin_manager.c: 110:     SLRCONA = 0xFF;
  6650  002BC4  690E               	setf	14,b	;volatile
  6651  002BC6                     
  6652                           ; BSR set to: 15
  6653                           ;mcc_generated_files/pin_manager.c: 111:     SLRCONB = 0xFF;
  6654  002BC6  6916               	setf	22,b	;volatile
  6655  002BC8                     
  6656                           ; BSR set to: 15
  6657                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONC = 0xFF;
  6658  002BC8  691E               	setf	30,b	;volatile
  6659  002BCA                     
  6660                           ; BSR set to: 15
  6661                           ;mcc_generated_files/pin_manager.c: 113:     SLRCOND = 0xFF;
  6662  002BCA  6923               	setf	35,b	;volatile
  6663                           
  6664                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONE = 0x07;
  6665  002BCC  0E07               	movlw	7
  6666  002BCE  6F2B               	movwf	43,b	;volatile
  6667  002BD0                     
  6668                           ; BSR set to: 15
  6669                           ;mcc_generated_files/pin_manager.c: 119:     INLVLA = 0xFF;
  6670  002BD0  690D               	setf	13,b	;volatile
  6671  002BD2                     
  6672                           ; BSR set to: 15
  6673                           ;mcc_generated_files/pin_manager.c: 120:     INLVLB = 0xFF;
  6674  002BD2  6915               	setf	21,b	;volatile
  6675  002BD4                     
  6676                           ; BSR set to: 15
  6677                           ;mcc_generated_files/pin_manager.c: 121:     INLVLC = 0xFF;
  6678  002BD4  691D               	setf	29,b	;volatile
  6679  002BD6                     
  6680                           ; BSR set to: 15
  6681                           ;mcc_generated_files/pin_manager.c: 122:     INLVLD = 0xFF;
  6682  002BD6  6922               	setf	34,b	;volatile
  6683                           
  6684                           ;mcc_generated_files/pin_manager.c: 123:     INLVLE = 0x0F;
  6685  002BD8  0E0F               	movlw	15
  6686  002BDA  6F2A               	movwf	42,b	;volatile
  6687  002BDC                     
  6688                           ; BSR set to: 15
  6689                           ;mcc_generated_files/pin_manager.c: 130:     IOCCFbits.IOCCF0 = 0;
  6690  002BDC  911A               	bcf	26,0,b	;volatile
  6691  002BDE                     
  6692                           ; BSR set to: 15
  6693                           ;mcc_generated_files/pin_manager.c: 132:     IOCCFbits.IOCCF1 = 0;
  6694  002BDE  931A               	bcf	26,1,b	;volatile
  6695  002BE0                     
  6696                           ; BSR set to: 15
  6697                           ;mcc_generated_files/pin_manager.c: 134:     IOCCFbits.IOCCF2 = 0;
  6698  002BE0  951A               	bcf	26,2,b	;volatile
  6699  002BE2                     
  6700                           ; BSR set to: 15
  6701                           ;mcc_generated_files/pin_manager.c: 136:     IOCCFbits.IOCCF3 = 0;
  6702  002BE2  971A               	bcf	26,3,b	;volatile
  6703  002BE4                     
  6704                           ; BSR set to: 15
  6705                           ;mcc_generated_files/pin_manager.c: 138:     IOCCNbits.IOCCN0 = 1;
  6706  002BE4  811B               	bsf	27,0,b	;volatile
  6707  002BE6                     
  6708                           ; BSR set to: 15
  6709                           ;mcc_generated_files/pin_manager.c: 140:     IOCCNbits.IOCCN1 = 1;
  6710  002BE6  831B               	bsf	27,1,b	;volatile
  6711  002BE8                     
  6712                           ; BSR set to: 15
  6713                           ;mcc_generated_files/pin_manager.c: 142:     IOCCNbits.IOCCN2 = 1;
  6714  002BE8  851B               	bsf	27,2,b	;volatile
  6715  002BEA                     
  6716                           ; BSR set to: 15
  6717                           ;mcc_generated_files/pin_manager.c: 144:     IOCCNbits.IOCCN3 = 1;
  6718  002BEA  871B               	bsf	27,3,b	;volatile
  6719  002BEC                     
  6720                           ; BSR set to: 15
  6721                           ;mcc_generated_files/pin_manager.c: 146:     IOCCPbits.IOCCP0 = 0;
  6722  002BEC  911C               	bcf	28,0,b	;volatile
  6723  002BEE                     
  6724                           ; BSR set to: 15
  6725                           ;mcc_generated_files/pin_manager.c: 148:     IOCCPbits.IOCCP1 = 0;
  6726  002BEE  931C               	bcf	28,1,b	;volatile
  6727  002BF0                     
  6728                           ; BSR set to: 15
  6729                           ;mcc_generated_files/pin_manager.c: 150:     IOCCPbits.IOCCP2 = 0;
  6730  002BF0  951C               	bcf	28,2,b	;volatile
  6731  002BF2                     
  6732                           ; BSR set to: 15
  6733                           ;mcc_generated_files/pin_manager.c: 152:     IOCCPbits.IOCCP3 = 0;
  6734  002BF2  971C               	bcf	28,3,b	;volatile
  6735  002BF4                     
  6736                           ; BSR set to: 15
  6737                           ;mcc_generated_files/pin_manager.c: 157:     IOCCF0_SetInterruptHandler(IOCCF0_DefaultIn
      +                          terruptHandler);
  6738  002BF4  0ED0               	movlw	low _IOCCF0_DefaultInterruptHandler
  6739  002BF6  6E05               	movwf	IOCCF0_SetInterruptHandler@InterruptHandler^0,c
  6740  002BF8  0E38               	movlw	high _IOCCF0_DefaultInterruptHandler
  6741  002BFA  6E06               	movwf	(IOCCF0_SetInterruptHandler@InterruptHandler+1)^0,c
  6742  002BFC  0E00               	movlw	low (_IOCCF0_DefaultInterruptHandler shr (0+16))
  6743  002BFE  6E07               	movwf	(IOCCF0_SetInterruptHandler@InterruptHandler+2)^0,c
  6744  002C00  EC44  F01C         	call	_IOCCF0_SetInterruptHandler	;wreg free
  6745  002C04                     
  6746                           ;mcc_generated_files/pin_manager.c: 158:     IOCCF1_SetInterruptHandler(IOCCF1_DefaultIn
      +                          terruptHandler);
  6747  002C04  0ECE               	movlw	low _IOCCF1_DefaultInterruptHandler
  6748  002C06  6E05               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler^0,c
  6749  002C08  0E38               	movlw	high _IOCCF1_DefaultInterruptHandler
  6750  002C0A  6E06               	movwf	(IOCCF1_SetInterruptHandler@InterruptHandler+1)^0,c
  6751  002C0C  0E00               	movlw	low (_IOCCF1_DefaultInterruptHandler shr (0+16))
  6752  002C0E  6E07               	movwf	(IOCCF1_SetInterruptHandler@InterruptHandler+2)^0,c
  6753  002C10  EC3D  F01C         	call	_IOCCF1_SetInterruptHandler	;wreg free
  6754  002C14                     
  6755                           ;mcc_generated_files/pin_manager.c: 159:     IOCCF2_SetInterruptHandler(IOCCF2_DefaultIn
      +                          terruptHandler);
  6756  002C14  0ECC               	movlw	low _IOCCF2_DefaultInterruptHandler
  6757  002C16  6E05               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler^0,c
  6758  002C18  0E38               	movlw	high _IOCCF2_DefaultInterruptHandler
  6759  002C1A  6E06               	movwf	(IOCCF2_SetInterruptHandler@InterruptHandler+1)^0,c
  6760  002C1C  0E00               	movlw	low (_IOCCF2_DefaultInterruptHandler shr (0+16))
  6761  002C1E  6E07               	movwf	(IOCCF2_SetInterruptHandler@InterruptHandler+2)^0,c
  6762  002C20  EC36  F01C         	call	_IOCCF2_SetInterruptHandler	;wreg free
  6763  002C24                     
  6764                           ;mcc_generated_files/pin_manager.c: 160:     IOCCF3_SetInterruptHandler(IOCCF3_DefaultIn
      +                          terruptHandler);
  6765  002C24  0ECA               	movlw	low _IOCCF3_DefaultInterruptHandler
  6766  002C26  6E05               	movwf	IOCCF3_SetInterruptHandler@InterruptHandler^0,c
  6767  002C28  0E38               	movlw	high _IOCCF3_DefaultInterruptHandler
  6768  002C2A  6E06               	movwf	(IOCCF3_SetInterruptHandler@InterruptHandler+1)^0,c
  6769  002C2C  0E00               	movlw	low (_IOCCF3_DefaultInterruptHandler shr (0+16))
  6770  002C2E  6E07               	movwf	(IOCCF3_SetInterruptHandler@InterruptHandler+2)^0,c
  6771  002C30  EC2F  F01C         	call	_IOCCF3_SetInterruptHandler	;wreg free
  6772  002C34                     
  6773                           ;mcc_generated_files/pin_manager.c: 163:     PIE0bits.IOCIE = 1;
  6774  002C34  010E               	movlb	14	; () banked
  6775  002C36  89C2               	bsf	194,4,b	;volatile
  6776                           
  6777                           ;mcc_generated_files/pin_manager.c: 166:     SSP1CLKPPS = 0x0D;
  6778  002C38  0E0D               	movlw	13
  6779  002C3A  6FB7               	movwf	183,b	;volatile
  6780                           
  6781                           ;mcc_generated_files/pin_manager.c: 167:     RB5PPS = 0x0F;
  6782  002C3C  0E0F               	movlw	15
  6783  002C3E  6FF4               	movwf	244,b	;volatile
  6784                           
  6785                           ;mcc_generated_files/pin_manager.c: 168:     T0CKIPPS = 0x04;
  6786  002C40  0E04               	movlw	4
  6787  002C42  6FA4               	movwf	164,b	;volatile
  6788                           
  6789                           ;mcc_generated_files/pin_manager.c: 169:     SSP1DATPPS = 0x0C;
  6790  002C44  0E0C               	movlw	12
  6791  002C46  6FB8               	movwf	184,b	;volatile
  6792  002C48                     
  6793                           ; BSR set to: 14
  6794  002C48  0012               	return		;funcret
  6795  002C4A                     __end_of_PIN_MANAGER_Initialize:
  6796                           	callstack 0
  6797                           
  6798 ;; *************** function _IOCCF3_SetInterruptHandler *****************
  6799 ;; Defined at:
  6800 ;;		line 304 in file "mcc_generated_files/pin_manager.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;  InterruptHan    3    4[COMRAM] PTR FTN()void 
  6803 ;;		 -> IOCCF3_DefaultInterruptHandler(1), 
  6804 ;; Auto vars:     Size  Location     Type
  6805 ;;		None
  6806 ;; Return value:  Size  Location     Type
  6807 ;;                  1    wreg      void 
  6808 ;; Registers used:
  6809 ;;		wreg, status,2, status,0
  6810 ;; Tracked objects:
  6811 ;;		On entry : 0/0
  6812 ;;		On exit  : 0/0
  6813 ;;		Unchanged: 0/0
  6814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6815 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6818 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6819 ;;Total ram usage:        3 bytes
  6820 ;; Hardware stack levels used: 1
  6821 ;; Hardware stack levels required when called: 4
  6822 ;; This function calls:
  6823 ;;		Nothing
  6824 ;; This function is called by:
  6825 ;;		_PIN_MANAGER_Initialize
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           	psect	text32
  6830  00385E                     __ptext32:
  6831                           	callstack 0
  6832  00385E                     _IOCCF3_SetInterruptHandler:
  6833                           	callstack 24
  6834  00385E                     
  6835                           ;mcc_generated_files/pin_manager.c: 305:     IOCCF3_InterruptHandler = InterruptHandler;
  6836  00385E  C005  F0DC         	movff	IOCCF3_SetInterruptHandler@InterruptHandler,_IOCCF3_InterruptHandler
  6837  003862  C006  F0DD         	movff	IOCCF3_SetInterruptHandler@InterruptHandler+1,_IOCCF3_InterruptHandler+1
  6838  003866  C007  F0DE         	movff	IOCCF3_SetInterruptHandler@InterruptHandler+2,_IOCCF3_InterruptHandler+2
  6839  00386A  0012               	return		;funcret
  6840  00386C                     __end_of_IOCCF3_SetInterruptHandler:
  6841                           	callstack 0
  6842                           
  6843 ;; *************** function _IOCCF2_SetInterruptHandler *****************
  6844 ;; Defined at:
  6845 ;;		line 274 in file "mcc_generated_files/pin_manager.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;  InterruptHan    3    4[COMRAM] PTR FTN()void 
  6848 ;;		 -> IOCCF2_DefaultInterruptHandler(1), 
  6849 ;; Auto vars:     Size  Location     Type
  6850 ;;		None
  6851 ;; Return value:  Size  Location     Type
  6852 ;;                  1    wreg      void 
  6853 ;; Registers used:
  6854 ;;		wreg, status,2, status,0
  6855 ;; Tracked objects:
  6856 ;;		On entry : 0/0
  6857 ;;		On exit  : 0/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6860 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6863 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6864 ;;Total ram usage:        3 bytes
  6865 ;; Hardware stack levels used: 1
  6866 ;; Hardware stack levels required when called: 4
  6867 ;; This function calls:
  6868 ;;		Nothing
  6869 ;; This function is called by:
  6870 ;;		_PIN_MANAGER_Initialize
  6871 ;; This function uses a non-reentrant model
  6872 ;;
  6873                           
  6874                           	psect	text33
  6875  00386C                     __ptext33:
  6876                           	callstack 0
  6877  00386C                     _IOCCF2_SetInterruptHandler:
  6878                           	callstack 24
  6879  00386C                     
  6880                           ;mcc_generated_files/pin_manager.c: 275:     IOCCF2_InterruptHandler = InterruptHandler;
  6881  00386C  C005  F0DF         	movff	IOCCF2_SetInterruptHandler@InterruptHandler,_IOCCF2_InterruptHandler
  6882  003870  C006  F0E0         	movff	IOCCF2_SetInterruptHandler@InterruptHandler+1,_IOCCF2_InterruptHandler+1
  6883  003874  C007  F0E1         	movff	IOCCF2_SetInterruptHandler@InterruptHandler+2,_IOCCF2_InterruptHandler+2
  6884  003878  0012               	return		;funcret
  6885  00387A                     __end_of_IOCCF2_SetInterruptHandler:
  6886                           	callstack 0
  6887                           
  6888 ;; *************** function _IOCCF1_SetInterruptHandler *****************
  6889 ;; Defined at:
  6890 ;;		line 244 in file "mcc_generated_files/pin_manager.c"
  6891 ;; Parameters:    Size  Location     Type
  6892 ;;  InterruptHan    3    4[COMRAM] PTR FTN()void 
  6893 ;;		 -> IOCCF1_DefaultInterruptHandler(1), 
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;		None
  6896 ;; Return value:  Size  Location     Type
  6897 ;;                  1    wreg      void 
  6898 ;; Registers used:
  6899 ;;		wreg, status,2, status,0
  6900 ;; Tracked objects:
  6901 ;;		On entry : 0/0
  6902 ;;		On exit  : 0/0
  6903 ;;		Unchanged: 0/0
  6904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6905 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6908 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6909 ;;Total ram usage:        3 bytes
  6910 ;; Hardware stack levels used: 1
  6911 ;; Hardware stack levels required when called: 4
  6912 ;; This function calls:
  6913 ;;		Nothing
  6914 ;; This function is called by:
  6915 ;;		_PIN_MANAGER_Initialize
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           	psect	text34
  6920  00387A                     __ptext34:
  6921                           	callstack 0
  6922  00387A                     _IOCCF1_SetInterruptHandler:
  6923                           	callstack 24
  6924  00387A                     
  6925                           ;mcc_generated_files/pin_manager.c: 245:     IOCCF1_InterruptHandler = InterruptHandler;
  6926  00387A  C005  F0E2         	movff	IOCCF1_SetInterruptHandler@InterruptHandler,_IOCCF1_InterruptHandler
  6927  00387E  C006  F0E3         	movff	IOCCF1_SetInterruptHandler@InterruptHandler+1,_IOCCF1_InterruptHandler+1
  6928  003882  C007  F0E4         	movff	IOCCF1_SetInterruptHandler@InterruptHandler+2,_IOCCF1_InterruptHandler+2
  6929  003886  0012               	return		;funcret
  6930  003888                     __end_of_IOCCF1_SetInterruptHandler:
  6931                           	callstack 0
  6932                           
  6933 ;; *************** function _IOCCF0_SetInterruptHandler *****************
  6934 ;; Defined at:
  6935 ;;		line 214 in file "mcc_generated_files/pin_manager.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;  InterruptHan    3    4[COMRAM] PTR FTN()void 
  6938 ;;		 -> IOCCF0_DefaultInterruptHandler(1), 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;		None
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  1    wreg      void 
  6943 ;; Registers used:
  6944 ;;		wreg, status,2, status,0
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6950 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6953 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6954 ;;Total ram usage:        3 bytes
  6955 ;; Hardware stack levels used: 1
  6956 ;; Hardware stack levels required when called: 4
  6957 ;; This function calls:
  6958 ;;		Nothing
  6959 ;; This function is called by:
  6960 ;;		_PIN_MANAGER_Initialize
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text35
  6965  003888                     __ptext35:
  6966                           	callstack 0
  6967  003888                     _IOCCF0_SetInterruptHandler:
  6968                           	callstack 24
  6969  003888                     
  6970                           ;mcc_generated_files/pin_manager.c: 215:     IOCCF0_InterruptHandler = InterruptHandler;
  6971  003888  C005  F0E5         	movff	IOCCF0_SetInterruptHandler@InterruptHandler,_IOCCF0_InterruptHandler
  6972  00388C  C006  F0E6         	movff	IOCCF0_SetInterruptHandler@InterruptHandler+1,_IOCCF0_InterruptHandler+1
  6973  003890  C007  F0E7         	movff	IOCCF0_SetInterruptHandler@InterruptHandler+2,_IOCCF0_InterruptHandler+2
  6974  003894  0012               	return		;funcret
  6975  003896                     __end_of_IOCCF0_SetInterruptHandler:
  6976                           	callstack 0
  6977                           
  6978 ;; *************** function _OSCILLATOR_Initialize *****************
  6979 ;; Defined at:
  6980 ;;		line 63 in file "mcc_generated_files/mcc.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;		None
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;		None
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      void 
  6987 ;; Registers used:
  6988 ;;		wreg, status,2
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6998 ;;Total ram usage:        0 bytes
  6999 ;; Hardware stack levels used: 1
  7000 ;; Hardware stack levels required when called: 4
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		_SYSTEM_Initialize
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           	psect	text36
  7009  003808                     __ptext36:
  7010                           	callstack 0
  7011  003808                     _OSCILLATOR_Initialize:
  7012                           	callstack 25
  7013  003808                     
  7014                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
  7015  003808  0E60               	movlw	96
  7016  00380A  010E               	movlb	14	; () banked
  7017  00380C  6FD8               	movwf	216,b	;volatile
  7018                           
  7019                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  7020  00380E  0E00               	movlw	0
  7021  003810  6FDA               	movwf	218,b	;volatile
  7022                           
  7023                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  7024  003812  0E00               	movlw	0
  7025  003814  6FDC               	movwf	220,b	;volatile
  7026                           
  7027                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x06;
  7028  003816  0E06               	movlw	6
  7029  003818  6FDE               	movwf	222,b	;volatile
  7030                           
  7031                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  7032  00381A  0E00               	movlw	0
  7033  00381C  6FDD               	movwf	221,b	;volatile
  7034  00381E                     
  7035                           ; BSR set to: 14
  7036  00381E  0012               	return		;funcret
  7037  003820                     __end_of_OSCILLATOR_Initialize:
  7038                           	callstack 0
  7039                           
  7040 ;; *************** function _INTERRUPT_Initialize *****************
  7041 ;; Defined at:
  7042 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;		None
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;		None
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  1    wreg      void 
  7049 ;; Registers used:
  7050 ;;		None
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7060 ;;Total ram usage:        0 bytes
  7061 ;; Hardware stack levels used: 1
  7062 ;; Hardware stack levels required when called: 4
  7063 ;; This function calls:
  7064 ;;		Nothing
  7065 ;; This function is called by:
  7066 ;;		_SYSTEM_Initialize
  7067 ;; This function uses a non-reentrant model
  7068 ;;
  7069                           
  7070                           	psect	text37
  7071  0038BE                     __ptext37:
  7072                           	callstack 0
  7073  0038BE                     _INTERRUPT_Initialize:
  7074                           	callstack 25
  7075  0038BE                     
  7076                           ;mcc_generated_files/interrupt_manager.c: 61:     INTCONbits.IPEN = 0;
  7077  0038BE  9AF2               	bcf	242,5,c	;volatile
  7078  0038C0  0012               	return		;funcret
  7079  0038C2                     __end_of_INTERRUPT_Initialize:
  7080                           	callstack 0
  7081                           
  7082 ;; *************** function _ADCC_Initialize *****************
  7083 ;; Defined at:
  7084 ;;		line 63 in file "mcc_generated_files/adcc.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;		None
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;		None
  7089 ;; Return value:  Size  Location     Type
  7090 ;;                  1    wreg      void 
  7091 ;; Registers used:
  7092 ;;		wreg, status,2, status,0, cstack
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7102 ;;Total ram usage:        0 bytes
  7103 ;; Hardware stack levels used: 1
  7104 ;; Hardware stack levels required when called: 5
  7105 ;; This function calls:
  7106 ;;		_ADCC_SetADIInterruptHandler
  7107 ;; This function is called by:
  7108 ;;		_SYSTEM_Initialize
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112                           	psect	text38
  7113  003188                     __ptext38:
  7114                           	callstack 0
  7115  003188                     _ADCC_Initialize:
  7116                           	callstack 24
  7117  003188                     
  7118                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
  7119  003188  0E00               	movlw	0
  7120  00318A  6E6A               	movwf	106,c	;volatile
  7121                           
  7122                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
  7123  00318C  0E00               	movlw	0
  7124  00318E  6E6B               	movwf	107,c	;volatile
  7125                           
  7126                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  7127  003190  0E00               	movlw	0
  7128  003192  6E6C               	movwf	108,c	;volatile
  7129                           
  7130                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
  7131  003194  0E00               	movlw	0
  7132  003196  6E6D               	movwf	109,c	;volatile
  7133                           
  7134                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  7135  003198  0E00               	movlw	0
  7136  00319A  6E68               	movwf	104,c	;volatile
  7137                           
  7138                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  7139  00319C  0E00               	movlw	0
  7140  00319E  6E69               	movwf	105,c	;volatile
  7141                           
  7142                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
  7143  0031A0  0E00               	movlw	0
  7144  0031A2  6E66               	movwf	102,c	;volatile
  7145                           
  7146                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
  7147  0031A4  0E00               	movlw	0
  7148  0031A6  010F               	movlb	15	; () banked
  7149  0031A8  6F5F               	movwf	95,b	;volatile
  7150                           
  7151                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
  7152  0031AA  0E00               	movlw	0
  7153  0031AC  6F5D               	movwf	93,b	;volatile
  7154                           
  7155                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
  7156  0031AE  0E00               	movlw	0
  7157  0031B0  6F5E               	movwf	94,b	;volatile
  7158                           
  7159                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
  7160  0031B2  0E00               	movlw	0
  7161  0031B4  6F59               	movwf	89,b	;volatile
  7162                           
  7163                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
  7164  0031B6  0E00               	movlw	0
  7165  0031B8  6F5A               	movwf	90,b	;volatile
  7166                           
  7167                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
  7168  0031BA  0E00               	movlw	0
  7169  0031BC  6F5B               	movwf	91,b	;volatile
  7170                           
  7171                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
  7172  0031BE  0E00               	movlw	0
  7173  0031C0  6E65               	movwf	101,c	;volatile
  7174                           
  7175                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
  7176  0031C2  0E00               	movlw	0
  7177  0031C4  6F58               	movwf	88,b	;volatile
  7178                           
  7179                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
  7180  0031C6  0E00               	movlw	0
  7181  0031C8  6F56               	movwf	86,b	;volatile
  7182                           
  7183                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x3F;
  7184  0031CA  0E3F               	movlw	63
  7185  0031CC  6F57               	movwf	87,b	;volatile
  7186                           
  7187                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
  7188  0031CE  0E84               	movlw	132
  7189  0031D0  6E60               	movwf	96,c	;volatile
  7190                           
  7191                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
  7192  0031D2  0E00               	movlw	0
  7193  0031D4  6F5C               	movwf	92,b	;volatile
  7194  0031D6                     
  7195                           ; BSR set to: 15
  7196                           ;mcc_generated_files/adcc.c: 106:     PIR1bits.ADIF = 0;
  7197  0031D6  010E               	movlb	14	; () banked
  7198  0031D8  91CB               	bcf	203,0,b	;volatile
  7199  0031DA                     
  7200                           ; BSR set to: 14
  7201                           ;mcc_generated_files/adcc.c: 108:     PIE1bits.ADIE = 1;
  7202  0031DA  81C3               	bsf	195,0,b	;volatile
  7203  0031DC                     
  7204                           ; BSR set to: 14
  7205                           ;mcc_generated_files/adcc.c: 110:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
  7206  0031DC  0ED2               	movlw	low _ADCC_DefaultInterruptHandler
  7207  0031DE  6E05               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
  7208  0031E0  0E38               	movlw	high _ADCC_DefaultInterruptHandler
  7209  0031E2  6E06               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
  7210  0031E4  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
  7211  0031E6  6E07               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)^0,c
  7212  0031E8  EC4B  F01C         	call	_ADCC_SetADIInterruptHandler	;wreg free
  7213  0031EC  0012               	return		;funcret
  7214  0031EE                     __end_of_ADCC_Initialize:
  7215                           	callstack 0
  7216                           
  7217 ;; *************** function _ADCC_SetADIInterruptHandler *****************
  7218 ;; Defined at:
  7219 ;;		line 307 in file "mcc_generated_files/adcc.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  InterruptHan    3    4[COMRAM] PTR FTN()void 
  7222 ;;		 -> ADCC_DefaultInterruptHandler(1), 
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;		None
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  1    wreg      void 
  7227 ;; Registers used:
  7228 ;;		wreg, status,2, status,0
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7234 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7237 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7238 ;;Total ram usage:        3 bytes
  7239 ;; Hardware stack levels used: 1
  7240 ;; Hardware stack levels required when called: 4
  7241 ;; This function calls:
  7242 ;;		Nothing
  7243 ;; This function is called by:
  7244 ;;		_ADCC_Initialize
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text39
  7249  003896                     __ptext39:
  7250                           	callstack 0
  7251  003896                     _ADCC_SetADIInterruptHandler:
  7252                           	callstack 24
  7253  003896                     
  7254                           ;mcc_generated_files/adcc.c: 308:     ADCC_ADI_InterruptHandler = InterruptHandler;
  7255  003896  C005  F0D6         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
  7256  00389A  C006  F0D7         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
  7257  00389E  C007  F0D8         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
  7258  0038A2  0012               	return		;funcret
  7259  0038A4                     __end_of_ADCC_SetADIInterruptHandler:
  7260                           	callstack 0
  7261                           
  7262 ;; *************** function _LCD_WriteString *****************
  7263 ;; Defined at:
  7264 ;;		line 81 in file "ANY_LCD.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;  str             2   24[COMRAM] PTR unsigned char 
  7267 ;;		 -> LCDout(32), 
  7268 ;;  lcd             6   26[COMRAM] struct any_lcd
  7269 ;; Auto vars:     Size  Location     Type
  7270 ;;		None
  7271 ;; Return value:  Size  Location     Type
  7272 ;;                  1    wreg      void 
  7273 ;; Registers used:
  7274 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7280 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7282 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7283 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7284 ;;Total ram usage:        9 bytes
  7285 ;; Hardware stack levels used: 1
  7286 ;; Hardware stack levels required when called: 6
  7287 ;; This function calls:
  7288 ;;		_LCD_MakeData
  7289 ;;		_LCD_SendBytes
  7290 ;; This function is called by:
  7291 ;;		_main
  7292 ;; This function uses a non-reentrant model
  7293 ;;
  7294                           
  7295                           	psect	text40
  7296  0031EE                     __ptext40:
  7297                           	callstack 0
  7298  0031EE                     _LCD_WriteString:
  7299                           	callstack 24
  7300  0031EE                     
  7301                           ;ANY_LCD.c: 83:     static uint16_t buffer[4];;ANY_LCD.c: 84:     while(*str){
  7302  0031EE  EF1B  F019         	goto	l3796
  7303  0031F2                     l3790:
  7304                           
  7305                           ;ANY_LCD.c: 85:         LCD_MakeData(buffer,*str);
  7306  0031F2  0EBC               	movlw	low LCD_WriteString@buffer
  7307  0031F4  6E05               	movwf	LCD_MakeData@buffer^0,c
  7308  0031F6  0E00               	movlw	high LCD_WriteString@buffer
  7309  0031F8  6E06               	movwf	(LCD_MakeData@buffer+1)^0,c
  7310  0031FA  C019  FFD9         	movff	LCD_WriteString@str,fsr2l
  7311  0031FE  C01A  FFDA         	movff	LCD_WriteString@str+1,fsr2h
  7312  003202  50DF               	movf	indf2,w,c
  7313  003204  6E21               	movwf	??_LCD_WriteString^0,c
  7314  003206  5021               	movf	??_LCD_WriteString^0,w,c
  7315  003208  6E07               	movwf	LCD_MakeData@data^0,c
  7316  00320A  6A08               	clrf	(LCD_MakeData@data+1)^0,c
  7317  00320C  EC24  F014         	call	_LCD_MakeData	;wreg free
  7318  003210                     
  7319                           ;ANY_LCD.c: 86:         LCD_SendBytes(buffer,lcd,4);
  7320  003210  0EBC               	movlw	low LCD_WriteString@buffer
  7321  003212  6E0D               	movwf	LCD_SendBytes@buffer^0,c
  7322  003214  0E00               	movlw	high LCD_WriteString@buffer
  7323  003216  6E0E               	movwf	(LCD_SendBytes@buffer+1)^0,c
  7324  003218  EE20  F01B         	lfsr	2,LCD_WriteString@lcd
  7325  00321C  EE00  F00F         	lfsr	0,LCD_SendBytes@lcd
  7326  003220  0E05               	movlw	5
  7327  003222                     u3081:
  7328  003222  CFDB FFEB          	movff	plusw2,plusw0
  7329  003226  06E8               	decf	wreg,f,c
  7330  003228  E2FC               	bc	u3081
  7331  00322A  0E04               	movlw	4
  7332  00322C  6E15               	movwf	LCD_SendBytes@len^0,c
  7333  00322E  EC1C  F018         	call	_LCD_SendBytes	;wreg free
  7334  003232                     
  7335                           ;ANY_LCD.c: 87:         str++;
  7336  003232  4A19               	infsnz	LCD_WriteString@str^0,f,c
  7337  003234  2A1A               	incf	(LCD_WriteString@str+1)^0,f,c
  7338  003236                     l3796:
  7339                           
  7340                           ;ANY_LCD.c: 84:     while(*str){
  7341  003236  C019  FFD9         	movff	LCD_WriteString@str,fsr2l
  7342  00323A  C01A  FFDA         	movff	LCD_WriteString@str+1,fsr2h
  7343  00323E  50DF               	movf	indf2,w,c
  7344  003240  A4D8               	btfss	status,2,c
  7345  003242  EF25  F019         	goto	u3091
  7346  003246  EF27  F019         	goto	u3090
  7347  00324A                     u3091:
  7348  00324A  EFF9  F018         	goto	l3790
  7349  00324E                     u3090:
  7350  00324E  0012               	return		;funcret
  7351  003250                     __end_of_LCD_WriteString:
  7352                           	callstack 0
  7353                           
  7354 ;; *************** function _LCD_MakeData *****************
  7355 ;; Defined at:
  7356 ;;		line 162 in file "ANY_LCD.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  buffer          2    4[COMRAM] PTR unsigned short 
  7359 ;;		 -> LCD_WriteData@buffer(8), LCD_WriteString@buffer(8), 
  7360 ;;  data            2    6[COMRAM] unsigned short 
  7361 ;; Auto vars:     Size  Location     Type
  7362 ;;		None
  7363 ;; Return value:  Size  Location     Type
  7364 ;;                  1    wreg      void 
  7365 ;; Registers used:
  7366 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7367 ;; Tracked objects:
  7368 ;;		On entry : 0/0
  7369 ;;		On exit  : 0/0
  7370 ;;		Unchanged: 0/0
  7371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7372 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7374 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7375 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7376 ;;Total ram usage:        8 bytes
  7377 ;; Hardware stack levels used: 1
  7378 ;; Hardware stack levels required when called: 4
  7379 ;; This function calls:
  7380 ;;		Nothing
  7381 ;; This function is called by:
  7382 ;;		_LCD_WriteString
  7383 ;;		_LCD_WriteData
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           	psect	text41
  7388  002848                     __ptext41:
  7389                           	callstack 0
  7390  002848                     _LCD_MakeData:
  7391                           	callstack 25
  7392  002848                     
  7393                           ;ANY_LCD.c: 166:     buffer[0] = ((data & 0xF0) | 0x08 | 0x04 | 0x01) & (~0x02);
  7394  002848  0EFD               	movlw	253
  7395  00284A  6E09               	movwf	??_LCD_MakeData^0,c
  7396  00284C  0EFF               	movlw	255
  7397  00284E  6E0A               	movwf	(??_LCD_MakeData+1)^0,c
  7398  002850  0EF0               	movlw	240
  7399  002852  1407               	andwf	LCD_MakeData@data^0,w,c
  7400  002854  6E0B               	movwf	(??_LCD_MakeData+2)^0,c
  7401  002856  0E00               	movlw	0
  7402  002858  1408               	andwf	(LCD_MakeData@data+1)^0,w,c
  7403  00285A  6E0C               	movwf	(??_LCD_MakeData+3)^0,c
  7404  00285C  0E0D               	movlw	13
  7405  00285E  120B               	iorwf	(??_LCD_MakeData+2)^0,f,c
  7406  002860  0E00               	movlw	0
  7407  002862  120C               	iorwf	(??_LCD_MakeData+3)^0,f,c
  7408  002864  5009               	movf	??_LCD_MakeData^0,w,c
  7409  002866  160B               	andwf	(??_LCD_MakeData+2)^0,f,c
  7410  002868  500A               	movf	(??_LCD_MakeData+1)^0,w,c
  7411  00286A  160C               	andwf	(??_LCD_MakeData+3)^0,f,c
  7412  00286C  C005  FFD9         	movff	LCD_MakeData@buffer,fsr2l
  7413  002870  C006  FFDA         	movff	LCD_MakeData@buffer+1,fsr2h
  7414  002874  C00B  FFDE         	movff	??_LCD_MakeData+2,postinc2
  7415  002878  C00C  FFDD         	movff	??_LCD_MakeData+3,postdec2
  7416                           
  7417                           ;ANY_LCD.c: 168:     buffer[1] = ((data & 0xF0) | 0x08 | 0x01) & (~0x02) & (~0x04);
  7418  00287C  0EF9               	movlw	249
  7419  00287E  6E09               	movwf	??_LCD_MakeData^0,c
  7420  002880  0EFF               	movlw	255
  7421  002882  6E0A               	movwf	(??_LCD_MakeData+1)^0,c
  7422  002884  0EF0               	movlw	240
  7423  002886  1407               	andwf	LCD_MakeData@data^0,w,c
  7424  002888  6E0B               	movwf	(??_LCD_MakeData+2)^0,c
  7425  00288A  0E00               	movlw	0
  7426  00288C  1408               	andwf	(LCD_MakeData@data+1)^0,w,c
  7427  00288E  6E0C               	movwf	(??_LCD_MakeData+3)^0,c
  7428  002890  0E09               	movlw	9
  7429  002892  120B               	iorwf	(??_LCD_MakeData+2)^0,f,c
  7430  002894  0E00               	movlw	0
  7431  002896  120C               	iorwf	(??_LCD_MakeData+3)^0,f,c
  7432  002898  5009               	movf	??_LCD_MakeData^0,w,c
  7433  00289A  160B               	andwf	(??_LCD_MakeData+2)^0,f,c
  7434  00289C  500A               	movf	(??_LCD_MakeData+1)^0,w,c
  7435  00289E  160C               	andwf	(??_LCD_MakeData+3)^0,f,c
  7436  0028A0  EE20 F002          	lfsr	2,2
  7437  0028A4  5005               	movf	LCD_MakeData@buffer^0,w,c
  7438  0028A6  26D9               	addwf	fsr2l,f,c
  7439  0028A8  5006               	movf	(LCD_MakeData@buffer+1)^0,w,c
  7440  0028AA  22DA               	addwfc	fsr2h,f,c
  7441  0028AC  C00B  FFDE         	movff	??_LCD_MakeData+2,postinc2
  7442  0028B0  C00C  FFDD         	movff	??_LCD_MakeData+3,postdec2
  7443                           
  7444                           ;ANY_LCD.c: 172:     buffer[2] = (((data<<4) & 0xF0) | 0x08 | 0x04 | 0x01) & (~0x02);
  7445  0028B4  0EFD               	movlw	253
  7446  0028B6  6E09               	movwf	??_LCD_MakeData^0,c
  7447  0028B8  0EFF               	movlw	255
  7448  0028BA  6E0A               	movwf	(??_LCD_MakeData+1)^0,c
  7449  0028BC  C007  F00B         	movff	LCD_MakeData@data,??_LCD_MakeData+2
  7450  0028C0  C008  F00C         	movff	LCD_MakeData@data+1,??_LCD_MakeData+3
  7451  0028C4  3A0B               	swapf	(??_LCD_MakeData+2)^0,f,c
  7452  0028C6  3A0C               	swapf	(??_LCD_MakeData+3)^0,f,c
  7453  0028C8  0EF0               	movlw	240
  7454  0028CA  160C               	andwf	(??_LCD_MakeData+3)^0,f,c
  7455  0028CC  500B               	movf	(??_LCD_MakeData+2)^0,w,c
  7456  0028CE  0B0F               	andlw	15
  7457  0028D0  120C               	iorwf	(??_LCD_MakeData+3)^0,f,c
  7458  0028D2  0EF0               	movlw	240
  7459  0028D4  160B               	andwf	(??_LCD_MakeData+2)^0,f,c
  7460  0028D6  0EF0               	movlw	240
  7461  0028D8  160B               	andwf	(??_LCD_MakeData+2)^0,f,c
  7462  0028DA  0E00               	movlw	0
  7463  0028DC  160C               	andwf	(??_LCD_MakeData+3)^0,f,c
  7464  0028DE  0E0D               	movlw	13
  7465  0028E0  120B               	iorwf	(??_LCD_MakeData+2)^0,f,c
  7466  0028E2  0E00               	movlw	0
  7467  0028E4  120C               	iorwf	(??_LCD_MakeData+3)^0,f,c
  7468  0028E6  5009               	movf	??_LCD_MakeData^0,w,c
  7469  0028E8  160B               	andwf	(??_LCD_MakeData+2)^0,f,c
  7470  0028EA  500A               	movf	(??_LCD_MakeData+1)^0,w,c
  7471  0028EC  160C               	andwf	(??_LCD_MakeData+3)^0,f,c
  7472  0028EE  EE20 F004          	lfsr	2,4
  7473  0028F2  5005               	movf	LCD_MakeData@buffer^0,w,c
  7474  0028F4  26D9               	addwf	fsr2l,f,c
  7475  0028F6  5006               	movf	(LCD_MakeData@buffer+1)^0,w,c
  7476  0028F8  22DA               	addwfc	fsr2h,f,c
  7477  0028FA  C00B  FFDE         	movff	??_LCD_MakeData+2,postinc2
  7478  0028FE  C00C  FFDD         	movff	??_LCD_MakeData+3,postdec2
  7479                           
  7480                           ;ANY_LCD.c: 174:     buffer[3] = (((data<<4) & 0xF0) | 0x08 | 0x01) & (~0x02) & (~0x04);
  7481  002902  0EF9               	movlw	249
  7482  002904  6E09               	movwf	??_LCD_MakeData^0,c
  7483  002906  0EFF               	movlw	255
  7484  002908  6E0A               	movwf	(??_LCD_MakeData+1)^0,c
  7485  00290A  C007  F00B         	movff	LCD_MakeData@data,??_LCD_MakeData+2
  7486  00290E  C008  F00C         	movff	LCD_MakeData@data+1,??_LCD_MakeData+3
  7487  002912  3A0B               	swapf	(??_LCD_MakeData+2)^0,f,c
  7488  002914  3A0C               	swapf	(??_LCD_MakeData+3)^0,f,c
  7489  002916  0EF0               	movlw	240
  7490  002918  160C               	andwf	(??_LCD_MakeData+3)^0,f,c
  7491  00291A  500B               	movf	(??_LCD_MakeData+2)^0,w,c
  7492  00291C  0B0F               	andlw	15
  7493  00291E  120C               	iorwf	(??_LCD_MakeData+3)^0,f,c
  7494  002920  0EF0               	movlw	240
  7495  002922  160B               	andwf	(??_LCD_MakeData+2)^0,f,c
  7496  002924  0EF0               	movlw	240
  7497  002926  160B               	andwf	(??_LCD_MakeData+2)^0,f,c
  7498  002928  0E00               	movlw	0
  7499  00292A  160C               	andwf	(??_LCD_MakeData+3)^0,f,c
  7500  00292C  0E09               	movlw	9
  7501  00292E  120B               	iorwf	(??_LCD_MakeData+2)^0,f,c
  7502  002930  0E00               	movlw	0
  7503  002932  120C               	iorwf	(??_LCD_MakeData+3)^0,f,c
  7504  002934  5009               	movf	??_LCD_MakeData^0,w,c
  7505  002936  160B               	andwf	(??_LCD_MakeData+2)^0,f,c
  7506  002938  500A               	movf	(??_LCD_MakeData+1)^0,w,c
  7507  00293A  160C               	andwf	(??_LCD_MakeData+3)^0,f,c
  7508  00293C  EE20 F006          	lfsr	2,6
  7509  002940  5005               	movf	LCD_MakeData@buffer^0,w,c
  7510  002942  26D9               	addwf	fsr2l,f,c
  7511  002944  5006               	movf	(LCD_MakeData@buffer+1)^0,w,c
  7512  002946  22DA               	addwfc	fsr2h,f,c
  7513  002948  C00B  FFDE         	movff	??_LCD_MakeData+2,postinc2
  7514  00294C  C00C  FFDD         	movff	??_LCD_MakeData+3,postdec2
  7515  002950  0012               	return		;funcret
  7516  002952                     __end_of_LCD_MakeData:
  7517                           	callstack 0
  7518                           
  7519 ;; *************** function _LCD_Init *****************
  7520 ;; Defined at:
  7521 ;;		line 108 in file "ANY_LCD.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;  lcd             6   32[COMRAM] struct any_lcd
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;		None
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  1    wreg      void 
  7528 ;; Registers used:
  7529 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  7530 ;; Tracked objects:
  7531 ;;		On entry : 0/0
  7532 ;;		On exit  : 0/0
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7535 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7538 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7539 ;;Total ram usage:        6 bytes
  7540 ;; Hardware stack levels used: 1
  7541 ;; Hardware stack levels required when called: 7
  7542 ;; This function calls:
  7543 ;;		_LCD_WriteCMD
  7544 ;;		_delayUS
  7545 ;; This function is called by:
  7546 ;;		_main
  7547 ;; This function uses a non-reentrant model
  7548 ;;
  7549                           
  7550                           	psect	text42
  7551  002EB0                     __ptext42:
  7552                           	callstack 0
  7553  002EB0                     _LCD_Init:
  7554                           	callstack 23
  7555  002EB0                     
  7556                           ;ANY_LCD.c: 109:     LCD_WriteCMD(0x33,lcd);
  7557  002EB0  0E00               	movlw	0
  7558  002EB2  6E1A               	movwf	(LCD_WriteCMD@cmd+1)^0,c
  7559  002EB4  0E33               	movlw	51
  7560  002EB6  6E19               	movwf	LCD_WriteCMD@cmd^0,c
  7561  002EB8  EE20  F021         	lfsr	2,LCD_Init@lcd
  7562  002EBC  EE00  F01B         	lfsr	0,LCD_WriteCMD@lcd
  7563  002EC0  0E05               	movlw	5
  7564  002EC2                     u3021:
  7565  002EC2  CFDB FFEB          	movff	plusw2,plusw0
  7566  002EC6  06E8               	decf	wreg,f,c
  7567  002EC8  E2FC               	bc	u3021
  7568  002ECA  ECA8  F01A         	call	_LCD_WriteCMD	;wreg free
  7569                           
  7570                           ;ANY_LCD.c: 110:     LCD_WriteCMD(0x32,lcd);
  7571  002ECE  0E00               	movlw	0
  7572  002ED0  6E1A               	movwf	(LCD_WriteCMD@cmd+1)^0,c
  7573  002ED2  0E32               	movlw	50
  7574  002ED4  6E19               	movwf	LCD_WriteCMD@cmd^0,c
  7575  002ED6  EE20  F021         	lfsr	2,LCD_Init@lcd
  7576  002EDA  EE00  F01B         	lfsr	0,LCD_WriteCMD@lcd
  7577  002EDE  0E05               	movlw	5
  7578  002EE0                     u3031:
  7579  002EE0  CFDB FFEB          	movff	plusw2,plusw0
  7580  002EE4  06E8               	decf	wreg,f,c
  7581  002EE6  E2FC               	bc	u3031
  7582  002EE8  ECA8  F01A         	call	_LCD_WriteCMD	;wreg free
  7583                           
  7584                           ;ANY_LCD.c: 111:     LCD_WriteCMD(0x28,lcd);
  7585  002EEC  0E00               	movlw	0
  7586  002EEE  6E1A               	movwf	(LCD_WriteCMD@cmd+1)^0,c
  7587  002EF0  0E28               	movlw	40
  7588  002EF2  6E19               	movwf	LCD_WriteCMD@cmd^0,c
  7589  002EF4  EE20  F021         	lfsr	2,LCD_Init@lcd
  7590  002EF8  EE00  F01B         	lfsr	0,LCD_WriteCMD@lcd
  7591  002EFC  0E05               	movlw	5
  7592  002EFE                     u3041:
  7593  002EFE  CFDB FFEB          	movff	plusw2,plusw0
  7594  002F02  06E8               	decf	wreg,f,c
  7595  002F04  E2FC               	bc	u3041
  7596  002F06  ECA8  F01A         	call	_LCD_WriteCMD	;wreg free
  7597                           
  7598                           ;ANY_LCD.c: 112:     LCD_WriteCMD(0x0C,lcd);
  7599  002F0A  0E00               	movlw	0
  7600  002F0C  6E1A               	movwf	(LCD_WriteCMD@cmd+1)^0,c
  7601  002F0E  0E0C               	movlw	12
  7602  002F10  6E19               	movwf	LCD_WriteCMD@cmd^0,c
  7603  002F12  EE20  F021         	lfsr	2,LCD_Init@lcd
  7604  002F16  EE00  F01B         	lfsr	0,LCD_WriteCMD@lcd
  7605  002F1A  0E05               	movlw	5
  7606  002F1C                     u3051:
  7607  002F1C  CFDB FFEB          	movff	plusw2,plusw0
  7608  002F20  06E8               	decf	wreg,f,c
  7609  002F22  E2FC               	bc	u3051
  7610  002F24  ECA8  F01A         	call	_LCD_WriteCMD	;wreg free
  7611                           
  7612                           ;ANY_LCD.c: 114:     LCD_WriteCMD(0x01,lcd);
  7613  002F28  0E00               	movlw	0
  7614  002F2A  6E1A               	movwf	(LCD_WriteCMD@cmd+1)^0,c
  7615  002F2C  0E01               	movlw	1
  7616  002F2E  6E19               	movwf	LCD_WriteCMD@cmd^0,c
  7617  002F30  EE20  F021         	lfsr	2,LCD_Init@lcd
  7618  002F34  EE00  F01B         	lfsr	0,LCD_WriteCMD@lcd
  7619  002F38  0E05               	movlw	5
  7620  002F3A                     u3061:
  7621  002F3A  CFDB FFEB          	movff	plusw2,plusw0
  7622  002F3E  06E8               	decf	wreg,f,c
  7623  002F40  E2FC               	bc	u3061
  7624  002F42  ECA8  F01A         	call	_LCD_WriteCMD	;wreg free
  7625  002F46                     
  7626                           ;ANY_LCD.c: 115:     lcd.delay_us(1E4);
  7627  002F46  0E10               	movlw	16
  7628  002F48  6E05               	movwf	delayUS@usec^0,c
  7629  002F4A  0E27               	movlw	39
  7630  002F4C  6E06               	movwf	(delayUS@usec+1)^0,c
  7631  002F4E  0E00               	movlw	0
  7632  002F50  6E07               	movwf	(delayUS@usec+2)^0,c
  7633  002F52  0E00               	movlw	0
  7634  002F54  6E08               	movwf	(delayUS@usec+3)^0,c
  7635  002F56  EE20  F024         	lfsr	2,LCD_Init@lcd+3
  7636  002F5A  D802               	call	u3078
  7637  002F5C  EFBA  F017         	goto	u3079
  7638  002F60                     u3078:
  7639  002F60  0005               	push	
  7640  002F62  6EFA               	movwf	pclath,c
  7641  002F64  50DE               	movf	postinc2,w,c
  7642  002F66  6EFD               	movwf	tosl,c
  7643  002F68  50DE               	movf	postinc2,w,c
  7644  002F6A  6EFE               	movwf	tosh,c
  7645  002F6C  50DE               	movf	postinc2,w,c
  7646  002F6E  6EFF               	movwf	tosu,c
  7647  002F70  50FA               	movf	pclath,w,c
  7648  002F72  0012               	return		;indir
  7649  002F74                     u3079:
  7650  002F74  0012               	return		;funcret
  7651  002F76                     __end_of_LCD_Init:
  7652                           	callstack 0
  7653                           
  7654 ;; *************** function _LCD_WriteCMD *****************
  7655 ;; Defined at:
  7656 ;;		line 71 in file "ANY_LCD.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  cmd             2   24[COMRAM] unsigned short 
  7659 ;;  lcd             6   26[COMRAM] struct any_lcd
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;		None
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  1    wreg      void 
  7664 ;; Registers used:
  7665 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7671 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7674 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7675 ;;Total ram usage:        8 bytes
  7676 ;; Hardware stack levels used: 1
  7677 ;; Hardware stack levels required when called: 6
  7678 ;; This function calls:
  7679 ;;		_LCD_MakeCMD
  7680 ;;		_LCD_SendBytes
  7681 ;; This function is called by:
  7682 ;;		_main
  7683 ;;		_LCD_Init
  7684 ;;		_LCD_Reset
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           	psect	text43
  7689  003550                     __ptext43:
  7690                           	callstack 0
  7691  003550                     _LCD_WriteCMD:
  7692                           	callstack 24
  7693  003550                     
  7694                           ;ANY_LCD.c: 72:     static uint16_t buffer[4];;ANY_LCD.c: 73:     LCD_MakeCMD(buffer,cmd
      +                          );
  7695  003550  0EC4               	movlw	low LCD_WriteCMD@buffer
  7696  003552  6E05               	movwf	LCD_MakeCMD@buffer^0,c
  7697  003554  0E00               	movlw	high LCD_WriteCMD@buffer
  7698  003556  6E06               	movwf	(LCD_MakeCMD@buffer+1)^0,c
  7699  003558  C019  F007         	movff	LCD_WriteCMD@cmd,LCD_MakeCMD@data
  7700  00355C  C01A  F008         	movff	LCD_WriteCMD@cmd+1,LCD_MakeCMD@data+1
  7701  003560  ECA9  F014         	call	_LCD_MakeCMD	;wreg free
  7702  003564                     
  7703                           ;ANY_LCD.c: 74:     LCD_SendBytes(buffer,lcd,4);
  7704  003564  0EC4               	movlw	low LCD_WriteCMD@buffer
  7705  003566  6E0D               	movwf	LCD_SendBytes@buffer^0,c
  7706  003568  0E00               	movlw	high LCD_WriteCMD@buffer
  7707  00356A  6E0E               	movwf	(LCD_SendBytes@buffer+1)^0,c
  7708  00356C  EE20  F01B         	lfsr	2,LCD_WriteCMD@lcd
  7709  003570  EE00  F00F         	lfsr	0,LCD_SendBytes@lcd
  7710  003574  0E05               	movlw	5
  7711  003576                     u2881:
  7712  003576  CFDB FFEB          	movff	plusw2,plusw0
  7713  00357A  06E8               	decf	wreg,f,c
  7714  00357C  E2FC               	bc	u2881
  7715  00357E  0E04               	movlw	4
  7716  003580  6E15               	movwf	LCD_SendBytes@len^0,c
  7717  003582  EC1C  F018         	call	_LCD_SendBytes	;wreg free
  7718  003586  0012               	return		;funcret
  7719  003588                     __end_of_LCD_WriteCMD:
  7720                           	callstack 0
  7721                           
  7722 ;; *************** function _LCD_SendBytes *****************
  7723 ;; Defined at:
  7724 ;;		line 185 in file "ANY_LCD.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;  buffer          2   12[COMRAM] PTR unsigned short 
  7727 ;;		 -> LCD_WriteData@buffer(8), LCD_WriteString@buffer(8), LCD_WriteCMD@buffer(8), 
  7728 ;;  lcd             6   14[COMRAM] struct any_lcd
  7729 ;;  len             1   20[COMRAM] unsigned char 
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;  i               1   23[COMRAM] unsigned char 
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1    wreg      void 
  7734 ;; Registers used:
  7735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7741 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7743 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7744 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7745 ;;Total ram usage:       12 bytes
  7746 ;; Hardware stack levels used: 1
  7747 ;; Hardware stack levels required when called: 5
  7748 ;; This function calls:
  7749 ;;		_delayUS
  7750 ;;		_writeLCD
  7751 ;; This function is called by:
  7752 ;;		_LCD_WriteCMD
  7753 ;;		_LCD_WriteString
  7754 ;;		_LCD_WriteData
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757                           
  7758                           	psect	text44
  7759  003038                     __ptext44:
  7760                           	callstack 0
  7761  003038                     _LCD_SendBytes:
  7762                           	callstack 24
  7763  003038                     
  7764                           ;ANY_LCD.c: 187:  for(uint8_t i = 0;i < len;i++){
  7765  003038  0E00               	movlw	0
  7766  00303A  6E18               	movwf	LCD_SendBytes@i^0,c
  7767  00303C  EF52  F018         	goto	l3466
  7768  003040                     l3460:
  7769                           
  7770                           ;ANY_LCD.c: 188:   lcd.lcd_write(buffer[i]);
  7771  003040  D802               	call	u2688
  7772  003042  EF3A  F018         	goto	u2689
  7773  003046                     u2688:
  7774  003046  0005               	push	
  7775  003048  6EFA               	movwf	pclath,c
  7776  00304A  500F               	movf	LCD_SendBytes@lcd^0,w,c
  7777  00304C  6EFD               	movwf	tosl,c
  7778  00304E  5010               	movf	(LCD_SendBytes@lcd+1)^0,w,c
  7779  003050  6EFE               	movwf	tosh,c
  7780  003052  5011               	movf	(LCD_SendBytes@lcd+2)^0,w,c
  7781  003054  6EFF               	movwf	tosu,c
  7782  003056  50FA               	movf	pclath,w,c
  7783  003058  5018               	movf	LCD_SendBytes@i^0,w,c
  7784  00305A  0D02               	mullw	2
  7785  00305C  CFF3 F016          	movff	prodl,??_LCD_SendBytes
  7786  003060  CFF4 F017          	movff	prodh,??_LCD_SendBytes+1
  7787  003064  5016               	movf	??_LCD_SendBytes^0,w,c
  7788  003066  240D               	addwf	LCD_SendBytes@buffer^0,w,c
  7789  003068  6ED9               	movwf	fsr2l,c
  7790  00306A  5017               	movf	(??_LCD_SendBytes+1)^0,w,c
  7791  00306C  200E               	addwfc	(LCD_SendBytes@buffer+1)^0,w,c
  7792  00306E  6EDA               	movwf	fsr2h,c
  7793  003070  50DF               	movf	indf2,w,c
  7794  003072  0012               	return		;indir
  7795  003074                     u2689:
  7796  003074                     
  7797                           ;ANY_LCD.c: 189:          lcd.delay_us(1E2);
  7798  003074  0E64               	movlw	100
  7799  003076  6E05               	movwf	delayUS@usec^0,c
  7800  003078  0E00               	movlw	0
  7801  00307A  6E06               	movwf	(delayUS@usec+1)^0,c
  7802  00307C  0E00               	movlw	0
  7803  00307E  6E07               	movwf	(delayUS@usec+2)^0,c
  7804  003080  0E00               	movlw	0
  7805  003082  6E08               	movwf	(delayUS@usec+3)^0,c
  7806  003084  EE20  F012         	lfsr	2,LCD_SendBytes@lcd+3
  7807  003088  D802               	call	u2698
  7808  00308A  EF51  F018         	goto	u2699
  7809  00308E                     u2698:
  7810  00308E  0005               	push	
  7811  003090  6EFA               	movwf	pclath,c
  7812  003092  50DE               	movf	postinc2,w,c
  7813  003094  6EFD               	movwf	tosl,c
  7814  003096  50DE               	movf	postinc2,w,c
  7815  003098  6EFE               	movwf	tosh,c
  7816  00309A  50DE               	movf	postinc2,w,c
  7817  00309C  6EFF               	movwf	tosu,c
  7818  00309E  50FA               	movf	pclath,w,c
  7819  0030A0  0012               	return		;indir
  7820  0030A2                     u2699:
  7821  0030A2                     
  7822                           ;ANY_LCD.c: 190:  }
  7823  0030A2  2A18               	incf	LCD_SendBytes@i^0,f,c
  7824  0030A4                     l3466:
  7825  0030A4  5015               	movf	LCD_SendBytes@len^0,w,c
  7826  0030A6  5C18               	subwf	LCD_SendBytes@i^0,w,c
  7827  0030A8  A0D8               	btfss	status,0,c
  7828  0030AA  EF59  F018         	goto	u2701
  7829  0030AE  EF5B  F018         	goto	u2700
  7830  0030B2                     u2701:
  7831  0030B2  EF20  F018         	goto	l3460
  7832  0030B6                     u2700:
  7833  0030B6  0012               	return		;funcret
  7834  0030B8                     __end_of_LCD_SendBytes:
  7835                           	callstack 0
  7836                           
  7837 ;; *************** function _writeLCD *****************
  7838 ;; Defined at:
  7839 ;;		line 243 in file "main.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;  bitfield        1    wreg     unsigned char 
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;  bitfield        1    6[COMRAM] unsigned char 
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  1    wreg      void 
  7846 ;; Registers used:
  7847 ;;		wreg, status,2, status,0
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7855 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7856 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7857 ;;Total ram usage:        3 bytes
  7858 ;; Hardware stack levels used: 1
  7859 ;; Hardware stack levels required when called: 4
  7860 ;; This function calls:
  7861 ;;		Nothing
  7862 ;; This function is called by:
  7863 ;;		_main
  7864 ;;		_LCD_SendBytes
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           
  7868                           	psect	text45
  7869  0037A6                     __ptext45:
  7870                           	callstack 0
  7871  0037A6                     _writeLCD:
  7872                           	callstack 24
  7873                           
  7874                           ;incstack = 0
  7875                           ;writeLCD@bitfield stored from wreg
  7876  0037A6  6E07               	movwf	writeLCD@bitfield^0,c
  7877  0037A8                     
  7878                           ;main.c: 251:   PORTB = (bitfield & 0xF0) >> 4;
  7879  0037A8  3807               	swapf	writeLCD@bitfield^0,w,c
  7880  0037AA  0B0F               	andlw	15
  7881  0037AC  0B0F               	andlw	15
  7882  0037AE  6E8E               	movwf	142,c	;volatile
  7883                           
  7884                           ;main.c: 252:   PORTC = (bitfield & 0x07) << 5;
  7885  0037B0  C007  F005         	movff	writeLCD@bitfield,??_writeLCD
  7886  0037B4  0E07               	movlw	7
  7887  0037B6  1605               	andwf	??_writeLCD^0,f,c
  7888  0037B8  0E05               	movlw	5
  7889  0037BA  6E06               	movwf	(??_writeLCD+1)^0,c
  7890  0037BC                     u2435:
  7891  0037BC  90D8               	bcf	status,0,c
  7892  0037BE  3605               	rlcf	??_writeLCD^0,f,c
  7893  0037C0  2E06               	decfsz	(??_writeLCD+1)^0,f,c
  7894  0037C2  EFDE  F01B         	goto	u2435
  7895  0037C6  5005               	movf	??_writeLCD^0,w,c
  7896  0037C8  6E8F               	movwf	143,c	;volatile
  7897  0037CA  0012               	return		;funcret
  7898  0037CC                     __end_of_writeLCD:
  7899                           	callstack 0
  7900                           
  7901 ;; *************** function _delayUS *****************
  7902 ;; Defined at:
  7903 ;;		line 237 in file "main.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;  usec            4    4[COMRAM] unsigned long 
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;  i               4    8[COMRAM] unsigned long 
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  1    wreg      void 
  7910 ;; Registers used:
  7911 ;;		wreg, status,2, status,0
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7917 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7918 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7920 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7921 ;;Total ram usage:        8 bytes
  7922 ;; Hardware stack levels used: 1
  7923 ;; Hardware stack levels required when called: 4
  7924 ;; This function calls:
  7925 ;;		Nothing
  7926 ;; This function is called by:
  7927 ;;		_main
  7928 ;;		_LCD_SendBytes
  7929 ;;		_LCD_Init
  7930 ;;		_LCD_Reset
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text46
  7935  003390                     __ptext46:
  7936                           	callstack 0
  7937  003390                     _delayUS:
  7938                           	callstack 26
  7939  003390                     
  7940                           ;main.c: 238:   for(uint32_t i=0;i<usec;i++){
  7941  003390  0E00               	movlw	0
  7942  003392  6E09               	movwf	delayUS@i^0,c
  7943  003394  0E00               	movlw	0
  7944  003396  6E0A               	movwf	(delayUS@i+1)^0,c
  7945  003398  0E00               	movlw	0
  7946  00339A  6E0B               	movwf	(delayUS@i+2)^0,c
  7947  00339C  0E00               	movlw	0
  7948  00339E  6E0C               	movwf	(delayUS@i+3)^0,c
  7949  0033A0  EFDC  F019         	goto	l815
  7950  0033A4                     l816:
  7951                           
  7952                           ;main.c: 239:     _delay((unsigned long)((1)*(32000000/4000000.0)));
  7953  0033A4  D000               	nop2		;2 cycle nop
  7954  0033A6  D000               	nop2		;2 cycle nop
  7955  0033A8  D000               	nop2		;2 cycle nop
  7956  0033AA  D000               	nop2		;2 cycle nop
  7957  0033AC                     
  7958                           ;main.c: 240:   }
  7959  0033AC  0E01               	movlw	1
  7960  0033AE  2609               	addwf	delayUS@i^0,f,c
  7961  0033B0  0E00               	movlw	0
  7962  0033B2  220A               	addwfc	(delayUS@i+1)^0,f,c
  7963  0033B4  220B               	addwfc	(delayUS@i+2)^0,f,c
  7964  0033B6  220C               	addwfc	(delayUS@i+3)^0,f,c
  7965  0033B8                     l815:
  7966  0033B8  5005               	movf	delayUS@usec^0,w,c
  7967  0033BA  5C09               	subwf	delayUS@i^0,w,c
  7968  0033BC  5006               	movf	(delayUS@usec+1)^0,w,c
  7969  0033BE  580A               	subwfb	(delayUS@i+1)^0,w,c
  7970  0033C0  5007               	movf	(delayUS@usec+2)^0,w,c
  7971  0033C2  580B               	subwfb	(delayUS@i+2)^0,w,c
  7972  0033C4  5008               	movf	(delayUS@usec+3)^0,w,c
  7973  0033C6  580C               	subwfb	(delayUS@i+3)^0,w,c
  7974  0033C8  A0D8               	btfss	status,0,c
  7975  0033CA  EFE9  F019         	goto	u2421
  7976  0033CE  EFEB  F019         	goto	u2420
  7977  0033D2                     u2421:
  7978  0033D2  EFD2  F019         	goto	l816
  7979  0033D6                     u2420:
  7980  0033D6  0012               	return		;funcret
  7981  0033D8                     __end_of_delayUS:
  7982                           	callstack 0
  7983                           
  7984 ;; *************** function _LCD_MakeCMD *****************
  7985 ;; Defined at:
  7986 ;;		line 138 in file "ANY_LCD.c"
  7987 ;; Parameters:    Size  Location     Type
  7988 ;;  buffer          2    4[COMRAM] PTR unsigned short 
  7989 ;;		 -> LCD_WriteCMD@buffer(8), 
  7990 ;;  data            2    6[COMRAM] unsigned short 
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;		None
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      void 
  7995 ;; Registers used:
  7996 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8002 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8004 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8005 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8006 ;;Total ram usage:        8 bytes
  8007 ;; Hardware stack levels used: 1
  8008 ;; Hardware stack levels required when called: 4
  8009 ;; This function calls:
  8010 ;;		Nothing
  8011 ;; This function is called by:
  8012 ;;		_LCD_WriteCMD
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           	psect	text47
  8017  002952                     __ptext47:
  8018                           	callstack 0
  8019  002952                     _LCD_MakeCMD:
  8020                           	callstack 25
  8021  002952                     
  8022                           ;ANY_LCD.c: 142:     buffer[0] = ((data & 0xF0) | 0x08 | 0x04) & (~0x01) & (~0x02);
  8023  002952  0EFC               	movlw	252
  8024  002954  6E09               	movwf	??_LCD_MakeCMD^0,c
  8025  002956  0EFF               	movlw	255
  8026  002958  6E0A               	movwf	(??_LCD_MakeCMD+1)^0,c
  8027  00295A  0EF0               	movlw	240
  8028  00295C  1407               	andwf	LCD_MakeCMD@data^0,w,c
  8029  00295E  6E0B               	movwf	(??_LCD_MakeCMD+2)^0,c
  8030  002960  0E00               	movlw	0
  8031  002962  1408               	andwf	(LCD_MakeCMD@data+1)^0,w,c
  8032  002964  6E0C               	movwf	(??_LCD_MakeCMD+3)^0,c
  8033  002966  0E0C               	movlw	12
  8034  002968  120B               	iorwf	(??_LCD_MakeCMD+2)^0,f,c
  8035  00296A  0E00               	movlw	0
  8036  00296C  120C               	iorwf	(??_LCD_MakeCMD+3)^0,f,c
  8037  00296E  5009               	movf	??_LCD_MakeCMD^0,w,c
  8038  002970  160B               	andwf	(??_LCD_MakeCMD+2)^0,f,c
  8039  002972  500A               	movf	(??_LCD_MakeCMD+1)^0,w,c
  8040  002974  160C               	andwf	(??_LCD_MakeCMD+3)^0,f,c
  8041  002976  C005  FFD9         	movff	LCD_MakeCMD@buffer,fsr2l
  8042  00297A  C006  FFDA         	movff	LCD_MakeCMD@buffer+1,fsr2h
  8043  00297E  C00B  FFDE         	movff	??_LCD_MakeCMD+2,postinc2
  8044  002982  C00C  FFDD         	movff	??_LCD_MakeCMD+3,postdec2
  8045                           
  8046                           ;ANY_LCD.c: 144:     buffer[1] = ((data & 0xF0) | 0x08) & (~0x01) & (~0x02) & (~0x04);
  8047  002986  0EF8               	movlw	248
  8048  002988  6E09               	movwf	??_LCD_MakeCMD^0,c
  8049  00298A  0EFF               	movlw	255
  8050  00298C  6E0A               	movwf	(??_LCD_MakeCMD+1)^0,c
  8051  00298E  0EF0               	movlw	240
  8052  002990  1407               	andwf	LCD_MakeCMD@data^0,w,c
  8053  002992  6E0B               	movwf	(??_LCD_MakeCMD+2)^0,c
  8054  002994  0E00               	movlw	0
  8055  002996  1408               	andwf	(LCD_MakeCMD@data+1)^0,w,c
  8056  002998  6E0C               	movwf	(??_LCD_MakeCMD+3)^0,c
  8057  00299A  0E08               	movlw	8
  8058  00299C  120B               	iorwf	(??_LCD_MakeCMD+2)^0,f,c
  8059  00299E  0E00               	movlw	0
  8060  0029A0  120C               	iorwf	(??_LCD_MakeCMD+3)^0,f,c
  8061  0029A2  5009               	movf	??_LCD_MakeCMD^0,w,c
  8062  0029A4  160B               	andwf	(??_LCD_MakeCMD+2)^0,f,c
  8063  0029A6  500A               	movf	(??_LCD_MakeCMD+1)^0,w,c
  8064  0029A8  160C               	andwf	(??_LCD_MakeCMD+3)^0,f,c
  8065  0029AA  EE20 F002          	lfsr	2,2
  8066  0029AE  5005               	movf	LCD_MakeCMD@buffer^0,w,c
  8067  0029B0  26D9               	addwf	fsr2l,f,c
  8068  0029B2  5006               	movf	(LCD_MakeCMD@buffer+1)^0,w,c
  8069  0029B4  22DA               	addwfc	fsr2h,f,c
  8070  0029B6  C00B  FFDE         	movff	??_LCD_MakeCMD+2,postinc2
  8071  0029BA  C00C  FFDD         	movff	??_LCD_MakeCMD+3,postdec2
  8072                           
  8073                           ;ANY_LCD.c: 148:     buffer[2] = (((data<<4) & 0xF0) | 0x08 | 0x04) & (~0x01) & (~0x02);
  8074  0029BE  0EFC               	movlw	252
  8075  0029C0  6E09               	movwf	??_LCD_MakeCMD^0,c
  8076  0029C2  0EFF               	movlw	255
  8077  0029C4  6E0A               	movwf	(??_LCD_MakeCMD+1)^0,c
  8078  0029C6  C007  F00B         	movff	LCD_MakeCMD@data,??_LCD_MakeCMD+2
  8079  0029CA  C008  F00C         	movff	LCD_MakeCMD@data+1,??_LCD_MakeCMD+3
  8080  0029CE  3A0B               	swapf	(??_LCD_MakeCMD+2)^0,f,c
  8081  0029D0  3A0C               	swapf	(??_LCD_MakeCMD+3)^0,f,c
  8082  0029D2  0EF0               	movlw	240
  8083  0029D4  160C               	andwf	(??_LCD_MakeCMD+3)^0,f,c
  8084  0029D6  500B               	movf	(??_LCD_MakeCMD+2)^0,w,c
  8085  0029D8  0B0F               	andlw	15
  8086  0029DA  120C               	iorwf	(??_LCD_MakeCMD+3)^0,f,c
  8087  0029DC  0EF0               	movlw	240
  8088  0029DE  160B               	andwf	(??_LCD_MakeCMD+2)^0,f,c
  8089  0029E0  0EF0               	movlw	240
  8090  0029E2  160B               	andwf	(??_LCD_MakeCMD+2)^0,f,c
  8091  0029E4  0E00               	movlw	0
  8092  0029E6  160C               	andwf	(??_LCD_MakeCMD+3)^0,f,c
  8093  0029E8  0E0C               	movlw	12
  8094  0029EA  120B               	iorwf	(??_LCD_MakeCMD+2)^0,f,c
  8095  0029EC  0E00               	movlw	0
  8096  0029EE  120C               	iorwf	(??_LCD_MakeCMD+3)^0,f,c
  8097  0029F0  5009               	movf	??_LCD_MakeCMD^0,w,c
  8098  0029F2  160B               	andwf	(??_LCD_MakeCMD+2)^0,f,c
  8099  0029F4  500A               	movf	(??_LCD_MakeCMD+1)^0,w,c
  8100  0029F6  160C               	andwf	(??_LCD_MakeCMD+3)^0,f,c
  8101  0029F8  EE20 F004          	lfsr	2,4
  8102  0029FC  5005               	movf	LCD_MakeCMD@buffer^0,w,c
  8103  0029FE  26D9               	addwf	fsr2l,f,c
  8104  002A00  5006               	movf	(LCD_MakeCMD@buffer+1)^0,w,c
  8105  002A02  22DA               	addwfc	fsr2h,f,c
  8106  002A04  C00B  FFDE         	movff	??_LCD_MakeCMD+2,postinc2
  8107  002A08  C00C  FFDD         	movff	??_LCD_MakeCMD+3,postdec2
  8108                           
  8109                           ;ANY_LCD.c: 150:     buffer[3] = (((data<<4) & 0xF0) | 0x08) & (~0x01) & (~0x02) & (~0x0
      +                          4);
  8110  002A0C  0EF8               	movlw	248
  8111  002A0E  6E09               	movwf	??_LCD_MakeCMD^0,c
  8112  002A10  0EFF               	movlw	255
  8113  002A12  6E0A               	movwf	(??_LCD_MakeCMD+1)^0,c
  8114  002A14  C007  F00B         	movff	LCD_MakeCMD@data,??_LCD_MakeCMD+2
  8115  002A18  C008  F00C         	movff	LCD_MakeCMD@data+1,??_LCD_MakeCMD+3
  8116  002A1C  3A0B               	swapf	(??_LCD_MakeCMD+2)^0,f,c
  8117  002A1E  3A0C               	swapf	(??_LCD_MakeCMD+3)^0,f,c
  8118  002A20  0EF0               	movlw	240
  8119  002A22  160C               	andwf	(??_LCD_MakeCMD+3)^0,f,c
  8120  002A24  500B               	movf	(??_LCD_MakeCMD+2)^0,w,c
  8121  002A26  0B0F               	andlw	15
  8122  002A28  120C               	iorwf	(??_LCD_MakeCMD+3)^0,f,c
  8123  002A2A  0EF0               	movlw	240
  8124  002A2C  160B               	andwf	(??_LCD_MakeCMD+2)^0,f,c
  8125  002A2E  0EF0               	movlw	240
  8126  002A30  160B               	andwf	(??_LCD_MakeCMD+2)^0,f,c
  8127  002A32  0E00               	movlw	0
  8128  002A34  160C               	andwf	(??_LCD_MakeCMD+3)^0,f,c
  8129  002A36  0E08               	movlw	8
  8130  002A38  120B               	iorwf	(??_LCD_MakeCMD+2)^0,f,c
  8131  002A3A  0E00               	movlw	0
  8132  002A3C  120C               	iorwf	(??_LCD_MakeCMD+3)^0,f,c
  8133  002A3E  5009               	movf	??_LCD_MakeCMD^0,w,c
  8134  002A40  160B               	andwf	(??_LCD_MakeCMD+2)^0,f,c
  8135  002A42  500A               	movf	(??_LCD_MakeCMD+1)^0,w,c
  8136  002A44  160C               	andwf	(??_LCD_MakeCMD+3)^0,f,c
  8137  002A46  EE20 F006          	lfsr	2,6
  8138  002A4A  5005               	movf	LCD_MakeCMD@buffer^0,w,c
  8139  002A4C  26D9               	addwf	fsr2l,f,c
  8140  002A4E  5006               	movf	(LCD_MakeCMD@buffer+1)^0,w,c
  8141  002A50  22DA               	addwfc	fsr2h,f,c
  8142  002A52  C00B  FFDE         	movff	??_LCD_MakeCMD+2,postinc2
  8143  002A56  C00C  FFDD         	movff	??_LCD_MakeCMD+3,postdec2
  8144  002A5A  0012               	return		;funcret
  8145  002A5C                     __end_of_LCD_MakeCMD:
  8146                           	callstack 0
  8147                           
  8148 ;; *************** function _ADCC_StartConversion *****************
  8149 ;; Defined at:
  8150 ;;		line 114 in file "mcc_generated_files/adcc.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;  channel         1    wreg     enum E10053
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;  channel         1    4[COMRAM] enum E10053
  8155 ;; Return value:  Size  Location     Type
  8156 ;;                  1    wreg      void 
  8157 ;; Registers used:
  8158 ;;		wreg
  8159 ;; Tracked objects:
  8160 ;;		On entry : 0/0
  8161 ;;		On exit  : 0/0
  8162 ;;		Unchanged: 0/0
  8163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8165 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8167 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8168 ;;Total ram usage:        1 bytes
  8169 ;; Hardware stack levels used: 1
  8170 ;; Hardware stack levels required when called: 4
  8171 ;; This function calls:
  8172 ;;		Nothing
  8173 ;; This function is called by:
  8174 ;;		_main
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178                           	psect	text48
  8179  0038B2                     __ptext48:
  8180                           	callstack 0
  8181  0038B2                     _ADCC_StartConversion:
  8182                           	callstack 26
  8183                           
  8184                           ;incstack = 0
  8185                           ;ADCC_StartConversion@channel stored from wreg
  8186  0038B2  6E05               	movwf	ADCC_StartConversion@channel^0,c
  8187  0038B4                     
  8188                           ;mcc_generated_files/adcc.c: 114: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 115: {;mcc_generated_files/adcc.c: 117:     ADPCH = channel;
  8189  0038B4  C005  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
  8190  0038B8                     
  8191                           ;mcc_generated_files/adcc.c: 120:     ADCON0bits.ADON = 1;
  8192  0038B8  8E60               	bsf	96,7,c	;volatile
  8193  0038BA                     
  8194                           ;mcc_generated_files/adcc.c: 123:     ADCON0bits.ADGO = 1;
  8195  0038BA  8060               	bsf	96,0,c	;volatile
  8196  0038BC  0012               	return		;funcret
  8197  0038BE                     __end_of_ADCC_StartConversion:
  8198                           	callstack 0
  8199                           
  8200 ;; *************** function _ADCC_GetConversionResult *****************
  8201 ;; Defined at:
  8202 ;;		line 132 in file "mcc_generated_files/adcc.c"
  8203 ;; Parameters:    Size  Location     Type
  8204 ;;		None
  8205 ;; Auto vars:     Size  Location     Type
  8206 ;;		None
  8207 ;; Return value:  Size  Location     Type
  8208 ;;                  2    4[COMRAM] unsigned short 
  8209 ;; Registers used:
  8210 ;;		wreg, status,2, status,0
  8211 ;; Tracked objects:
  8212 ;;		On entry : 0/0
  8213 ;;		On exit  : 0/0
  8214 ;;		Unchanged: 0/0
  8215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8218 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8219 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8220 ;;Total ram usage:        4 bytes
  8221 ;; Hardware stack levels used: 1
  8222 ;; Hardware stack levels required when called: 4
  8223 ;; This function calls:
  8224 ;;		Nothing
  8225 ;; This function is called by:
  8226 ;;		_main
  8227 ;; This function uses a non-reentrant model
  8228 ;;
  8229                           
  8230                           	psect	text49
  8231  003820                     __ptext49:
  8232                           	callstack 0
  8233  003820                     _ADCC_GetConversionResult:
  8234                           	callstack 26
  8235  003820                     
  8236                           ;mcc_generated_files/adcc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8237  003820  5064               	movf	100,w,c	;volatile
  8238  003822  6E08               	movwf	(??_ADCC_GetConversionResult+1)^0,c
  8239  003824  6A07               	clrf	??_ADCC_GetConversionResult^0,c
  8240  003826  5063               	movf	99,w,c	;volatile
  8241  003828  2407               	addwf	??_ADCC_GetConversionResult^0,w,c
  8242  00382A  6E05               	movwf	?_ADCC_GetConversionResult^0,c
  8243  00382C  0E00               	movlw	0
  8244  00382E  2008               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
  8245  003830  6E06               	movwf	(?_ADCC_GetConversionResult+1)^0,c
  8246  003832  0012               	return		;funcret
  8247  003834                     __end_of_ADCC_GetConversionResult:
  8248                           	callstack 0
  8249                           
  8250 ;; *************** function _INTERRUPT_InterruptManager *****************
  8251 ;; Defined at:
  8252 ;;		line 64 in file "mcc_generated_files/interrupt_manager.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;		None
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;		None
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  1    wreg      void 
  8259 ;; Registers used:
  8260 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8268 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8270 ;;Total ram usage:        2 bytes
  8271 ;; Hardware stack levels used: 1
  8272 ;; Hardware stack levels required when called: 3
  8273 ;; This function calls:
  8274 ;;		_ADCC_ISR
  8275 ;;		_PIN_MANAGER_IOC
  8276 ;;		_TMR0_ISR
  8277 ;;		_TMR1_ISR
  8278 ;;		_TMR2_ISR
  8279 ;; This function is called by:
  8280 ;;		Interrupt level 2
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           	psect	intcode
  8285  000008                     __pintcode:
  8286                           	callstack 0
  8287  000008                     _INTERRUPT_InterruptManager:
  8288                           	callstack 19
  8289                           
  8290                           ;incstack = 0
  8291  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8292  00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
  8293  00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  8294  000012                     
  8295                           ;mcc_generated_files/interrupt_manager.c: 67:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  8296  000012  010E               	movlb	14	; () banked
  8297  000014  ABC2               	btfss	194,5,b	;volatile
  8298  000016  EF0F  F000         	goto	i2u385_41
  8299  00001A  EF11  F000         	goto	i2u385_40
  8300  00001E                     i2u385_41:
  8301  00001E  EF1F  F000         	goto	i2l376
  8302  000022                     i2u385_40:
  8303  000022                     
  8304                           ; BSR set to: 14
  8305  000022  ABCA               	btfss	202,5,b	;volatile
  8306  000024  EF16  F000         	goto	i2u386_41
  8307  000028  EF18  F000         	goto	i2u386_40
  8308  00002C                     i2u386_41:
  8309  00002C  EF1F  F000         	goto	i2l376
  8310  000030                     i2u386_40:
  8311  000030                     
  8312                           ; BSR set to: 14
  8313                           ;mcc_generated_files/interrupt_manager.c: 68:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 69:         TMR0_ISR();
  8314  000030  EC4F  F01A         	call	_TMR0_ISR
  8315  000034                     
  8316                           ;mcc_generated_files/interrupt_manager.c: 70:         Tim0Flag = 1;
  8317  000034  0E01               	movlw	1
  8318  000036  0100               	movlb	0	; () banked
  8319  000038  6FB3               	movwf	_Tim0Flag& (0+255),b
  8320                           
  8321                           ;mcc_generated_files/interrupt_manager.c: 71:     }
  8322  00003A  EF7A  F000         	goto	i2l388
  8323  00003E                     i2l376:
  8324                           
  8325                           ; BSR set to: 14
  8326  00003E  A9C2               	btfss	194,4,b	;volatile
  8327  000040  EF24  F000         	goto	i2u387_41
  8328  000044  EF26  F000         	goto	i2u387_40
  8329  000048                     i2u387_41:
  8330  000048  EF34  F000         	goto	i2l378
  8331  00004C                     i2u387_40:
  8332  00004C                     
  8333                           ; BSR set to: 14
  8334  00004C  A9CA               	btfss	202,4,b	;volatile
  8335  00004E  EF2B  F000         	goto	i2u388_41
  8336  000052  EF2D  F000         	goto	i2u388_40
  8337  000056                     i2u388_41:
  8338  000056  EF34  F000         	goto	i2l378
  8339  00005A                     i2u388_40:
  8340  00005A                     
  8341                           ; BSR set to: 14
  8342                           ;mcc_generated_files/interrupt_manager.c: 73:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 74:         PIN_MANAGER_IOC();
  8343  00005A  EC7A  F019         	call	_PIN_MANAGER_IOC	;wreg free
  8344  00005E                     
  8345                           ;mcc_generated_files/interrupt_manager.c: 75:         PBFlag = 1;
  8346  00005E  0E01               	movlw	1
  8347  000060  0100               	movlb	0	; () banked
  8348  000062  6FB2               	movwf	_PBFlag& (0+255),b
  8349                           
  8350                           ;mcc_generated_files/interrupt_manager.c: 76:     }
  8351  000064  EF7A  F000         	goto	i2l388
  8352  000068                     i2l378:
  8353                           
  8354                           ; BSR set to: 14
  8355  000068  ACF2               	btfss	242,6,c	;volatile
  8356  00006A  EF39  F000         	goto	i2u389_41
  8357  00006E  EF3B  F000         	goto	i2u389_40
  8358  000072                     i2u389_41:
  8359  000072  EF7A  F000         	goto	i2l382
  8360  000076                     i2u389_40:
  8361  000076                     
  8362                           ; BSR set to: 14
  8363                           ;mcc_generated_files/interrupt_manager.c: 78:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 79:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  8364  000076  A1C3               	btfss	195,0,b	;volatile
  8365  000078  EF40  F000         	goto	i2u390_41
  8366  00007C  EF42  F000         	goto	i2u390_40
  8367  000080                     i2u390_41:
  8368  000080  EF50  F000         	goto	i2l381
  8369  000084                     i2u390_40:
  8370  000084                     
  8371                           ; BSR set to: 14
  8372  000084  A1CB               	btfss	203,0,b	;volatile
  8373  000086  EF47  F000         	goto	i2u391_41
  8374  00008A  EF49  F000         	goto	i2u391_40
  8375  00008E                     i2u391_41:
  8376  00008E  EF50  F000         	goto	i2l381
  8377  000092                     i2u391_40:
  8378  000092                     
  8379                           ; BSR set to: 14
  8380                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             ADCC_ISR();
  8381  000092  EC66  F01B         	call	_ADCC_ISR	;wreg free
  8382  000096                     
  8383                           ;mcc_generated_files/interrupt_manager.c: 82:             ADCFlag = 1;
  8384  000096  0E01               	movlw	1
  8385  000098  0100               	movlb	0	; () banked
  8386  00009A  6FB1               	movwf	_ADCFlag& (0+255),b
  8387                           
  8388                           ;mcc_generated_files/interrupt_manager.c: 83:         }
  8389  00009C  EF7A  F000         	goto	i2l388
  8390  0000A0                     i2l381:
  8391                           
  8392                           ; BSR set to: 14
  8393  0000A0  A3C6               	btfss	198,1,b	;volatile
  8394  0000A2  EF55  F000         	goto	i2u392_41
  8395  0000A6  EF57  F000         	goto	i2u392_40
  8396  0000AA                     i2u392_41:
  8397  0000AA  EF65  F000         	goto	i2l383
  8398  0000AE                     i2u392_40:
  8399  0000AE                     
  8400                           ; BSR set to: 14
  8401  0000AE  A3CE               	btfss	206,1,b	;volatile
  8402  0000B0  EF5C  F000         	goto	i2u393_41
  8403  0000B4  EF5E  F000         	goto	i2u393_40
  8404  0000B8                     i2u393_41:
  8405  0000B8  EF65  F000         	goto	i2l383
  8406  0000BC                     i2u393_40:
  8407  0000BC                     
  8408                           ; BSR set to: 14
  8409                           ;mcc_generated_files/interrupt_manager.c: 85:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 86:             TMR2_ISR();
  8410  0000BC  ECDF  F01A         	call	_TMR2_ISR	;wreg free
  8411  0000C0                     
  8412                           ;mcc_generated_files/interrupt_manager.c: 87:             Tim2Flag = 1;
  8413  0000C0  0E01               	movlw	1
  8414  0000C2  0100               	movlb	0	; () banked
  8415  0000C4  6FB0               	movwf	_Tim2Flag& (0+255),b
  8416                           
  8417                           ;mcc_generated_files/interrupt_manager.c: 88:         }
  8418  0000C6  EF7A  F000         	goto	i2l388
  8419  0000CA                     i2l383:
  8420                           
  8421                           ; BSR set to: 14
  8422  0000CA  A1C6               	btfss	198,0,b	;volatile
  8423  0000CC  EF6A  F000         	goto	i2u394_41
  8424  0000D0  EF6C  F000         	goto	i2u394_40
  8425  0000D4                     i2u394_41:
  8426  0000D4  EF7A  F000         	goto	i2l382
  8427  0000D8                     i2u394_40:
  8428  0000D8                     
  8429                           ; BSR set to: 14
  8430  0000D8  A1CE               	btfss	206,0,b	;volatile
  8431  0000DA  EF71  F000         	goto	i2u395_41
  8432  0000DE  EF73  F000         	goto	i2u395_40
  8433  0000E2                     i2u395_41:
  8434  0000E2  EF7A  F000         	goto	i2l382
  8435  0000E6                     i2u395_40:
  8436  0000E6                     
  8437                           ; BSR set to: 14
  8438                           ;mcc_generated_files/interrupt_manager.c: 90:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 91:             TMR1_ISR();
  8439  0000E6  EC0E  F01A         	call	_TMR1_ISR	;wreg free
  8440  0000EA                     
  8441                           ;mcc_generated_files/interrupt_manager.c: 92:             Tim1Flag = 1;
  8442  0000EA  0E01               	movlw	1
  8443  0000EC  0100               	movlb	0	; () banked
  8444  0000EE  6FAF               	movwf	_Tim1Flag& (0+255),b
  8445                           
  8446                           ;mcc_generated_files/interrupt_manager.c: 93:         }
  8447  0000F0  EF7A  F000         	goto	i2l388
  8448  0000F4                     i2l382:
  8449  0000F4                     i2l388:
  8450  0000F4  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  8451  0000F8  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  8452  0000FC  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8453  0000FE  0011               	retfie		f
  8454  000100                     __end_of_INTERRUPT_InterruptManager:
  8455                           	callstack 0
  8456                           
  8457 ;; *************** function _TMR2_ISR *****************
  8458 ;; Defined at:
  8459 ;;		line 165 in file "mcc_generated_files/tmr2.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;		None
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;		None
  8464 ;; Return value:  Size  Location     Type
  8465 ;;                  1    wreg      void 
  8466 ;; Registers used:
  8467 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8468 ;; Tracked objects:
  8469 ;;		On entry : 0/0
  8470 ;;		On exit  : 0/0
  8471 ;;		Unchanged: 0/0
  8472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8477 ;;Total ram usage:        0 bytes
  8478 ;; Hardware stack levels used: 1
  8479 ;; Hardware stack levels required when called: 1
  8480 ;; This function calls:
  8481 ;;		Absolute function
  8482 ;;		_TMR2_DefaultInterruptHandler
  8483 ;; This function is called by:
  8484 ;;		_INTERRUPT_InterruptManager
  8485 ;; This function uses a non-reentrant model
  8486 ;;
  8487                           
  8488                           	psect	text51
  8489  0035BE                     __ptext51:
  8490                           	callstack 0
  8491  0035BE                     _TMR2_ISR:
  8492                           	callstack 20
  8493  0035BE                     
  8494                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
  8495  0035BE  010E               	movlb	14	; () banked
  8496  0035C0  93CE               	bcf	206,1,b	;volatile
  8497  0035C2                     
  8498                           ; BSR set to: 14
  8499                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
  8500  0035C2  0100               	movlb	0	; () banked
  8501  0035C4  51D0               	movf	_TMR2_InterruptHandler& (0+255),w,b
  8502  0035C6  11D1               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  8503  0035C8  11D2               	iorwf	(_TMR2_InterruptHandler+2)& (0+255),w,b
  8504  0035CA  B4D8               	btfsc	status,2,c
  8505  0035CC  EFEA  F01A         	goto	i2u298_41
  8506  0035D0  EFEC  F01A         	goto	i2u298_40
  8507  0035D4                     i2u298_41:
  8508  0035D4  EFF9  F01A         	goto	i2l701
  8509  0035D8                     i2u298_40:
  8510  0035D8                     
  8511                           ; BSR set to: 0
  8512                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
  8513  0035D8  D802               	call	i2u299_48
  8514  0035DA  EFF9  F01A         	goto	i2u299_49
  8515  0035DE                     i2u299_48:
  8516  0035DE  0005               	push	
  8517  0035E0  6EFA               	movwf	pclath,c
  8518  0035E2  51D0               	movf	_TMR2_InterruptHandler& (0+255),w,b
  8519  0035E4  6EFD               	movwf	tosl,c
  8520  0035E6  51D1               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  8521  0035E8  6EFE               	movwf	tosh,c
  8522  0035EA  51D2               	movf	(_TMR2_InterruptHandler+2)& (0+255),w,b
  8523  0035EC  6EFF               	movwf	tosu,c
  8524  0035EE  50FA               	movf	pclath,w,c
  8525  0035F0  0012               	return		;indir
  8526  0035F2                     i2u299_49:
  8527  0035F2                     i2l701:
  8528  0035F2  0012               	return		;funcret
  8529  0035F4                     __end_of_TMR2_ISR:
  8530                           	callstack 0
  8531                           
  8532 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  8533 ;; Defined at:
  8534 ;;		line 182 in file "mcc_generated_files/tmr2.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;		None
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;		None
  8539 ;; Return value:  Size  Location     Type
  8540 ;;                  1    wreg      void 
  8541 ;; Registers used:
  8542 ;;		None
  8543 ;; Tracked objects:
  8544 ;;		On entry : 0/0
  8545 ;;		On exit  : 0/0
  8546 ;;		Unchanged: 0/0
  8547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8552 ;;Total ram usage:        0 bytes
  8553 ;; Hardware stack levels used: 1
  8554 ;; This function calls:
  8555 ;;		Nothing
  8556 ;; This function is called by:
  8557 ;;		_TMR2_Initialize
  8558 ;;		_TMR2_ISR
  8559 ;; This function uses a non-reentrant model
  8560 ;;
  8561                           
  8562                           	psect	text52
  8563  0038C4                     __ptext52:
  8564                           	callstack 0
  8565  0038C4                     _TMR2_DefaultInterruptHandler:
  8566                           	callstack 20
  8567  0038C4  0012               	return		;funcret
  8568  0038C6                     __end_of_TMR2_DefaultInterruptHandler:
  8569                           	callstack 0
  8570                           
  8571 ;; *************** function _TMR1_ISR *****************
  8572 ;; Defined at:
  8573 ;;		line 164 in file "mcc_generated_files/tmr1.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;		None
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;		None
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  1    wreg      void 
  8580 ;; Registers used:
  8581 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8591 ;;Total ram usage:        0 bytes
  8592 ;; Hardware stack levels used: 1
  8593 ;; Hardware stack levels required when called: 1
  8594 ;; This function calls:
  8595 ;;		Absolute function
  8596 ;;		_TMR1_DefaultInterruptHandler
  8597 ;;		_TMR1_WriteTimer
  8598 ;; This function is called by:
  8599 ;;		_INTERRUPT_InterruptManager
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           	psect	text53
  8604  00341C                     __ptext53:
  8605                           	callstack 0
  8606  00341C                     _TMR1_ISR:
  8607                           	callstack 20
  8608  00341C                     
  8609                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
  8610  00341C  010E               	movlb	14	; () banked
  8611  00341E  91CE               	bcf	206,0,b	;volatile
  8612  003420                     
  8613                           ; BSR set to: 14
  8614                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
  8615  003420  C0E8  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  8616  003424  C0E9  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  8617  003428  EC99  F01B         	call	_TMR1_WriteTimer	;wreg free
  8618  00342C                     
  8619                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
  8620  00342C  0100               	movlb	0	; () banked
  8621  00342E  51D3               	movf	_TMR1_InterruptHandler& (0+255),w,b
  8622  003430  11D4               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  8623  003432  11D5               	iorwf	(_TMR1_InterruptHandler+2)& (0+255),w,b
  8624  003434  B4D8               	btfsc	status,2,c
  8625  003436  EF1F  F01A         	goto	i2u300_41
  8626  00343A  EF21  F01A         	goto	i2u300_40
  8627  00343E                     i2u300_41:
  8628  00343E  EF2E  F01A         	goto	i2l620
  8629  003442                     i2u300_40:
  8630  003442                     
  8631                           ; BSR set to: 0
  8632                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
  8633  003442  D802               	call	i2u301_48
  8634  003444  EF2E  F01A         	goto	i2u301_49
  8635  003448                     i2u301_48:
  8636  003448  0005               	push	
  8637  00344A  6EFA               	movwf	pclath,c
  8638  00344C  51D3               	movf	_TMR1_InterruptHandler& (0+255),w,b
  8639  00344E  6EFD               	movwf	tosl,c
  8640  003450  51D4               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  8641  003452  6EFE               	movwf	tosh,c
  8642  003454  51D5               	movf	(_TMR1_InterruptHandler+2)& (0+255),w,b
  8643  003456  6EFF               	movwf	tosu,c
  8644  003458  50FA               	movf	pclath,w,c
  8645  00345A  0012               	return		;indir
  8646  00345C                     i2u301_49:
  8647  00345C                     i2l620:
  8648  00345C  0012               	return		;funcret
  8649  00345E                     __end_of_TMR1_ISR:
  8650                           	callstack 0
  8651                           
  8652 ;; *************** function _TMR1_WriteTimer *****************
  8653 ;; Defined at:
  8654 ;;		line 127 in file "mcc_generated_files/tmr1.c"
  8655 ;; Parameters:    Size  Location     Type
  8656 ;;  timerVal        2    0[COMRAM] unsigned short 
  8657 ;; Auto vars:     Size  Location     Type
  8658 ;;		None
  8659 ;; Return value:  Size  Location     Type
  8660 ;;                  1    wreg      void 
  8661 ;; Registers used:
  8662 ;;		wreg, status,2
  8663 ;; Tracked objects:
  8664 ;;		On entry : 0/0
  8665 ;;		On exit  : 0/0
  8666 ;;		Unchanged: 0/0
  8667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8672 ;;Total ram usage:        2 bytes
  8673 ;; Hardware stack levels used: 1
  8674 ;; This function calls:
  8675 ;;		Nothing
  8676 ;; This function is called by:
  8677 ;;		_TMR1_ISR
  8678 ;;		_TMR1_Reload
  8679 ;; This function uses a non-reentrant model
  8680 ;;
  8681                           
  8682                           	psect	text54
  8683  003732                     __ptext54:
  8684                           	callstack 0
  8685  003732                     _TMR1_WriteTimer:
  8686                           	callstack 20
  8687  003732                     
  8688                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
  8689  003732  A4CF               	btfss	207,2,c	;volatile
  8690  003734  EF9E  F01B         	goto	i2u287_41
  8691  003738  EFA0  F01B         	goto	i2u287_40
  8692  00373C                     i2u287_41:
  8693  00373C  EFA8  F01B         	goto	i2l3680
  8694  003740                     i2u287_40:
  8695  003740                     
  8696                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
  8697  003740  90CF               	bcf	207,0,c	;volatile
  8698  003742                     
  8699                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
  8700  003742  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  8701  003744  6ECE               	movwf	206,c	;volatile
  8702  003746                     
  8703                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
  8704  003746  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
  8705  00374A                     
  8706                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
  8707  00374A  80CF               	bsf	207,0,c	;volatile
  8708                           
  8709                           ;mcc_generated_files/tmr1.c: 140:     }
  8710  00374C  EFAC  F01B         	goto	i2l607
  8711  003750                     i2l3680:
  8712                           
  8713                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  8714  003750  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  8715  003752  6ECE               	movwf	206,c	;volatile
  8716  003754                     
  8717                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
  8718  003754  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
  8719  003758                     i2l607:
  8720  003758  0012               	return		;funcret
  8721  00375A                     __end_of_TMR1_WriteTimer:
  8722                           	callstack 0
  8723                           
  8724 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  8725 ;; Defined at:
  8726 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;		None
  8729 ;; Auto vars:     Size  Location     Type
  8730 ;;		None
  8731 ;; Return value:  Size  Location     Type
  8732 ;;                  1    wreg      void 
  8733 ;; Registers used:
  8734 ;;		None
  8735 ;; Tracked objects:
  8736 ;;		On entry : 0/0
  8737 ;;		On exit  : 0/0
  8738 ;;		Unchanged: 0/0
  8739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8744 ;;Total ram usage:        0 bytes
  8745 ;; Hardware stack levels used: 1
  8746 ;; This function calls:
  8747 ;;		Nothing
  8748 ;; This function is called by:
  8749 ;;		_TMR1_Initialize
  8750 ;;		_TMR1_ISR
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754                           	psect	text55
  8755  0038C6                     __ptext55:
  8756                           	callstack 0
  8757  0038C6                     _TMR1_DefaultInterruptHandler:
  8758                           	callstack 20
  8759  0038C6  0012               	return		;funcret
  8760  0038C8                     __end_of_TMR1_DefaultInterruptHandler:
  8761                           	callstack 0
  8762                           
  8763 ;; *************** function _TMR0_ISR *****************
  8764 ;; Defined at:
  8765 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;		None
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;		None
  8770 ;; Return value:  Size  Location     Type
  8771 ;;                  1    wreg      void 
  8772 ;; Registers used:
  8773 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8774 ;; Tracked objects:
  8775 ;;		On entry : 0/0
  8776 ;;		On exit  : 0/0
  8777 ;;		Unchanged: 0/0
  8778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8783 ;;Total ram usage:        0 bytes
  8784 ;; Hardware stack levels used: 1
  8785 ;; Hardware stack levels required when called: 1
  8786 ;; This function calls:
  8787 ;;		Absolute function
  8788 ;;		_TMR0_DefaultInterruptHandler
  8789 ;; This function is called by:
  8790 ;;		_INTERRUPT_InterruptManager
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           	psect	text56
  8795  00349E                     __ptext56:
  8796                           	callstack 0
  8797  00349E                     _TMR0_ISR:
  8798                           	callstack 20
  8799  00349E                     
  8800                           ;mcc_generated_files/tmr0.c: 137:     PIR0bits.TMR0IF = 0;
  8801  00349E  010E               	movlb	14	; () banked
  8802  0034A0  9BCA               	bcf	202,5,b	;volatile
  8803  0034A2                     
  8804                           ; BSR set to: 14
  8805                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
  8806  0034A2  5055               	movf	(_timer0ReloadVal16bit+1)^0,w,c	;volatile
  8807  0034A4  6ED4               	movwf	212,c	;volatile
  8808  0034A6                     
  8809                           ; BSR set to: 14
  8810                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
  8811  0034A6  C054  FFD3         	movff	_timer0ReloadVal16bit,4051	;volatile
  8812  0034AA                     
  8813                           ; BSR set to: 14
  8814                           ;mcc_generated_files/tmr0.c: 142:     if(TMR0_InterruptHandler)
  8815  0034AA  0100               	movlb	0	; () banked
  8816  0034AC  51D9               	movf	_TMR0_InterruptHandler& (0+255),w,b
  8817  0034AE  11DA               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  8818  0034B0  11DB               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
  8819  0034B2  B4D8               	btfsc	status,2,c
  8820  0034B4  EF5E  F01A         	goto	i2u294_41
  8821  0034B8  EF60  F01A         	goto	i2u294_40
  8822  0034BC                     i2u294_41:
  8823  0034BC  EF6D  F01A         	goto	i2l212
  8824  0034C0                     i2u294_40:
  8825  0034C0                     
  8826                           ; BSR set to: 0
  8827                           ;mcc_generated_files/tmr0.c: 143:     {;mcc_generated_files/tmr0.c: 144:         TMR0_In
      +                          terruptHandler();
  8828  0034C0  D802               	call	i2u295_48
  8829  0034C2  EF6D  F01A         	goto	i2u295_49
  8830  0034C6                     i2u295_48:
  8831  0034C6  0005               	push	
  8832  0034C8  6EFA               	movwf	pclath,c
  8833  0034CA  51D9               	movf	_TMR0_InterruptHandler& (0+255),w,b
  8834  0034CC  6EFD               	movwf	tosl,c
  8835  0034CE  51DA               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  8836  0034D0  6EFE               	movwf	tosh,c
  8837  0034D2  51DB               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
  8838  0034D4  6EFF               	movwf	tosu,c
  8839  0034D6  50FA               	movf	pclath,w,c
  8840  0034D8  0012               	return		;indir
  8841  0034DA                     i2u295_49:
  8842  0034DA                     i2l212:
  8843  0034DA  0012               	return		;funcret
  8844  0034DC                     __end_of_TMR0_ISR:
  8845                           	callstack 0
  8846                           
  8847 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8848 ;; Defined at:
  8849 ;;		line 155 in file "mcc_generated_files/tmr0.c"
  8850 ;; Parameters:    Size  Location     Type
  8851 ;;		None
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;		None
  8854 ;; Return value:  Size  Location     Type
  8855 ;;                  1    wreg      void 
  8856 ;; Registers used:
  8857 ;;		None
  8858 ;; Tracked objects:
  8859 ;;		On entry : 0/0
  8860 ;;		On exit  : 0/0
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8867 ;;Total ram usage:        0 bytes
  8868 ;; Hardware stack levels used: 1
  8869 ;; This function calls:
  8870 ;;		Nothing
  8871 ;; This function is called by:
  8872 ;;		_TMR0_Initialize
  8873 ;;		_TMR0_ISR
  8874 ;; This function uses a non-reentrant model
  8875 ;;
  8876                           
  8877                           	psect	text57
  8878  0038C8                     __ptext57:
  8879                           	callstack 0
  8880  0038C8                     _TMR0_DefaultInterruptHandler:
  8881                           	callstack 20
  8882  0038C8  0012               	return		;funcret
  8883  0038CA                     __end_of_TMR0_DefaultInterruptHandler:
  8884                           	callstack 0
  8885                           
  8886 ;; *************** function _PIN_MANAGER_IOC *****************
  8887 ;; Defined at:
  8888 ;;		line 172 in file "mcc_generated_files/pin_manager.c"
  8889 ;; Parameters:    Size  Location     Type
  8890 ;;		None
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;		None
  8893 ;; Return value:  Size  Location     Type
  8894 ;;                  1    wreg      void 
  8895 ;; Registers used:
  8896 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8897 ;; Tracked objects:
  8898 ;;		On entry : 0/0
  8899 ;;		On exit  : 0/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8906 ;;Total ram usage:        0 bytes
  8907 ;; Hardware stack levels used: 1
  8908 ;; Hardware stack levels required when called: 2
  8909 ;; This function calls:
  8910 ;;		_IOCCF0_ISR
  8911 ;;		_IOCCF1_ISR
  8912 ;;		_IOCCF2_ISR
  8913 ;;		_IOCCF3_ISR
  8914 ;; This function is called by:
  8915 ;;		_INTERRUPT_InterruptManager
  8916 ;; This function uses a non-reentrant model
  8917 ;;
  8918                           
  8919                           	psect	text58
  8920  0032F4                     __ptext58:
  8921                           	callstack 0
  8922  0032F4                     _PIN_MANAGER_IOC:
  8923                           	callstack 19
  8924  0032F4                     
  8925                           ;mcc_generated_files/pin_manager.c: 175:     if(IOCCFbits.IOCCF0 == 1)
  8926  0032F4  010F               	movlb	15	; () banked
  8927  0032F6  A11A               	btfss	26,0,b	;volatile
  8928  0032F8  EF80  F019         	goto	i2u290_41
  8929  0032FC  EF82  F019         	goto	i2u290_40
  8930  003300                     i2u290_41:
  8931  003300  EF84  F019         	goto	i2l3702
  8932  003304                     i2u290_40:
  8933  003304                     
  8934                           ; BSR set to: 15
  8935                           ;mcc_generated_files/pin_manager.c: 176:     {;mcc_generated_files/pin_manager.c: 177:  
      +                                 IOCCF0_ISR();
  8936  003304  EC4B  F01B         	call	_IOCCF0_ISR	;wreg free
  8937  003308                     i2l3702:
  8938                           
  8939                           ;mcc_generated_files/pin_manager.c: 180:     if(IOCCFbits.IOCCF1 == 1)
  8940  003308  010F               	movlb	15	; () banked
  8941  00330A  A31A               	btfss	26,1,b	;volatile
  8942  00330C  EF8A  F019         	goto	i2u291_41
  8943  003310  EF8C  F019         	goto	i2u291_40
  8944  003314                     i2u291_41:
  8945  003314  EF8E  F019         	goto	i2l3706
  8946  003318                     i2u291_40:
  8947  003318                     
  8948                           ; BSR set to: 15
  8949                           ;mcc_generated_files/pin_manager.c: 181:     {;mcc_generated_files/pin_manager.c: 182:  
      +                                 IOCCF1_ISR();
  8950  003318  EC30  F01B         	call	_IOCCF1_ISR	;wreg free
  8951  00331C                     i2l3706:
  8952                           
  8953                           ;mcc_generated_files/pin_manager.c: 185:     if(IOCCFbits.IOCCF2 == 1)
  8954  00331C  010F               	movlb	15	; () banked
  8955  00331E  A51A               	btfss	26,2,b	;volatile
  8956  003320  EF94  F019         	goto	i2u292_41
  8957  003324  EF96  F019         	goto	i2u292_40
  8958  003328                     i2u292_41:
  8959  003328  EF98  F019         	goto	i2l3710
  8960  00332C                     i2u292_40:
  8961  00332C                     
  8962                           ; BSR set to: 15
  8963                           ;mcc_generated_files/pin_manager.c: 186:     {;mcc_generated_files/pin_manager.c: 187:  
      +                                 IOCCF2_ISR();
  8964  00332C  EC15  F01B         	call	_IOCCF2_ISR	;wreg free
  8965  003330                     i2l3710:
  8966                           
  8967                           ;mcc_generated_files/pin_manager.c: 190:     if(IOCCFbits.IOCCF3 == 1)
  8968  003330  010F               	movlb	15	; () banked
  8969  003332  A71A               	btfss	26,3,b	;volatile
  8970  003334  EF9E  F019         	goto	i2u293_41
  8971  003338  EFA0  F019         	goto	i2u293_40
  8972  00333C                     i2u293_41:
  8973  00333C  EFA2  F019         	goto	i2l128
  8974  003340                     i2u293_40:
  8975  003340                     
  8976                           ; BSR set to: 15
  8977                           ;mcc_generated_files/pin_manager.c: 191:     {;mcc_generated_files/pin_manager.c: 192:  
      +                                 IOCCF3_ISR();
  8978  003340  ECFA  F01A         	call	_IOCCF3_ISR	;wreg free
  8979  003344                     i2l128:
  8980  003344  0012               	return		;funcret
  8981  003346                     __end_of_PIN_MANAGER_IOC:
  8982                           	callstack 0
  8983                           
  8984 ;; *************** function _IOCCF3_ISR *****************
  8985 ;; Defined at:
  8986 ;;		line 289 in file "mcc_generated_files/pin_manager.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;		None
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;		None
  8991 ;; Return value:  Size  Location     Type
  8992 ;;                  1    wreg      void 
  8993 ;; Registers used:
  8994 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8995 ;; Tracked objects:
  8996 ;;		On entry : 0/0
  8997 ;;		On exit  : 0/0
  8998 ;;		Unchanged: 0/0
  8999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9004 ;;Total ram usage:        0 bytes
  9005 ;; Hardware stack levels used: 1
  9006 ;; Hardware stack levels required when called: 1
  9007 ;; This function calls:
  9008 ;;		Absolute function
  9009 ;;		_IOCCF3_DefaultInterruptHandler
  9010 ;; This function is called by:
  9011 ;;		_PIN_MANAGER_IOC
  9012 ;; This function uses a non-reentrant model
  9013 ;;
  9014                           
  9015                           	psect	text59
  9016  0035F4                     __ptext59:
  9017                           	callstack 0
  9018  0035F4                     _IOCCF3_ISR:
  9019                           	callstack 19
  9020  0035F4                     
  9021                           ;mcc_generated_files/pin_manager.c: 294:     if(IOCCF3_InterruptHandler)
  9022  0035F4  0100               	movlb	0	; () banked
  9023  0035F6  51DC               	movf	_IOCCF3_InterruptHandler& (0+255),w,b
  9024  0035F8  11DD               	iorwf	(_IOCCF3_InterruptHandler+1)& (0+255),w,b
  9025  0035FA  11DE               	iorwf	(_IOCCF3_InterruptHandler+2)& (0+255),w,b
  9026  0035FC  B4D8               	btfsc	status,2,c
  9027  0035FE  EF03  F01B         	goto	i2u285_41
  9028  003602  EF05  F01B         	goto	i2u285_40
  9029  003606                     i2u285_41:
  9030  003606  EF12  F01B         	goto	i2l3612
  9031  00360A                     i2u285_40:
  9032  00360A                     
  9033                           ; BSR set to: 0
  9034                           ;mcc_generated_files/pin_manager.c: 295:     {;mcc_generated_files/pin_manager.c: 296:  
      +                                 IOCCF3_InterruptHandler();
  9035  00360A  D802               	call	i2u286_48
  9036  00360C  EF12  F01B         	goto	i2u286_49
  9037  003610                     i2u286_48:
  9038  003610  0005               	push	
  9039  003612  6EFA               	movwf	pclath,c
  9040  003614  51DC               	movf	_IOCCF3_InterruptHandler& (0+255),w,b
  9041  003616  6EFD               	movwf	tosl,c
  9042  003618  51DD               	movf	(_IOCCF3_InterruptHandler+1)& (0+255),w,b
  9043  00361A  6EFE               	movwf	tosh,c
  9044  00361C  51DE               	movf	(_IOCCF3_InterruptHandler+2)& (0+255),w,b
  9045  00361E  6EFF               	movwf	tosu,c
  9046  003620  50FA               	movf	pclath,w,c
  9047  003622  0012               	return		;indir
  9048  003624                     i2u286_49:
  9049  003624                     i2l3612:
  9050                           
  9051                           ;mcc_generated_files/pin_manager.c: 298:     IOCCFbits.IOCCF3 = 0;
  9052  003624  010F               	movlb	15	; () banked
  9053  003626  971A               	bcf	26,3,b	;volatile
  9054  003628                     
  9055                           ; BSR set to: 15
  9056  003628  0012               	return		;funcret
  9057  00362A                     __end_of_IOCCF3_ISR:
  9058                           	callstack 0
  9059                           
  9060 ;; *************** function _IOCCF3_DefaultInterruptHandler *****************
  9061 ;; Defined at:
  9062 ;;		line 311 in file "mcc_generated_files/pin_manager.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;		None
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;		None
  9067 ;; Return value:  Size  Location     Type
  9068 ;;                  1    wreg      void 
  9069 ;; Registers used:
  9070 ;;		None
  9071 ;; Tracked objects:
  9072 ;;		On entry : 0/0
  9073 ;;		On exit  : 0/0
  9074 ;;		Unchanged: 0/0
  9075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9080 ;;Total ram usage:        0 bytes
  9081 ;; Hardware stack levels used: 1
  9082 ;; This function calls:
  9083 ;;		Nothing
  9084 ;; This function is called by:
  9085 ;;		_PIN_MANAGER_Initialize
  9086 ;;		_IOCCF3_ISR
  9087 ;; This function uses a non-reentrant model
  9088 ;;
  9089                           
  9090                           	psect	text60
  9091  0038CA                     __ptext60:
  9092                           	callstack 0
  9093  0038CA                     _IOCCF3_DefaultInterruptHandler:
  9094                           	callstack 19
  9095  0038CA  0012               	return		;funcret
  9096  0038CC                     __end_of_IOCCF3_DefaultInterruptHandler:
  9097                           	callstack 0
  9098                           
  9099 ;; *************** function _IOCCF2_ISR *****************
  9100 ;; Defined at:
  9101 ;;		line 259 in file "mcc_generated_files/pin_manager.c"
  9102 ;; Parameters:    Size  Location     Type
  9103 ;;		None
  9104 ;; Auto vars:     Size  Location     Type
  9105 ;;		None
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  1    wreg      void 
  9108 ;; Registers used:
  9109 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9119 ;;Total ram usage:        0 bytes
  9120 ;; Hardware stack levels used: 1
  9121 ;; Hardware stack levels required when called: 1
  9122 ;; This function calls:
  9123 ;;		Absolute function
  9124 ;;		_IOCCF2_DefaultInterruptHandler
  9125 ;; This function is called by:
  9126 ;;		_PIN_MANAGER_IOC
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           	psect	text61
  9131  00362A                     __ptext61:
  9132                           	callstack 0
  9133  00362A                     _IOCCF2_ISR:
  9134                           	callstack 19
  9135  00362A                     
  9136                           ;mcc_generated_files/pin_manager.c: 264:     if(IOCCF2_InterruptHandler)
  9137  00362A  0100               	movlb	0	; () banked
  9138  00362C  51DF               	movf	_IOCCF2_InterruptHandler& (0+255),w,b
  9139  00362E  11E0               	iorwf	(_IOCCF2_InterruptHandler+1)& (0+255),w,b
  9140  003630  11E1               	iorwf	(_IOCCF2_InterruptHandler+2)& (0+255),w,b
  9141  003632  B4D8               	btfsc	status,2,c
  9142  003634  EF1E  F01B         	goto	i2u283_41
  9143  003638  EF20  F01B         	goto	i2u283_40
  9144  00363C                     i2u283_41:
  9145  00363C  EF2D  F01B         	goto	i2l3606
  9146  003640                     i2u283_40:
  9147  003640                     
  9148                           ; BSR set to: 0
  9149                           ;mcc_generated_files/pin_manager.c: 265:     {;mcc_generated_files/pin_manager.c: 266:  
      +                                 IOCCF2_InterruptHandler();
  9150  003640  D802               	call	i2u284_48
  9151  003642  EF2D  F01B         	goto	i2u284_49
  9152  003646                     i2u284_48:
  9153  003646  0005               	push	
  9154  003648  6EFA               	movwf	pclath,c
  9155  00364A  51DF               	movf	_IOCCF2_InterruptHandler& (0+255),w,b
  9156  00364C  6EFD               	movwf	tosl,c
  9157  00364E  51E0               	movf	(_IOCCF2_InterruptHandler+1)& (0+255),w,b
  9158  003650  6EFE               	movwf	tosh,c
  9159  003652  51E1               	movf	(_IOCCF2_InterruptHandler+2)& (0+255),w,b
  9160  003654  6EFF               	movwf	tosu,c
  9161  003656  50FA               	movf	pclath,w,c
  9162  003658  0012               	return		;indir
  9163  00365A                     i2u284_49:
  9164  00365A                     i2l3606:
  9165                           
  9166                           ;mcc_generated_files/pin_manager.c: 268:     IOCCFbits.IOCCF2 = 0;
  9167  00365A  010F               	movlb	15	; () banked
  9168  00365C  951A               	bcf	26,2,b	;volatile
  9169  00365E                     
  9170                           ; BSR set to: 15
  9171  00365E  0012               	return		;funcret
  9172  003660                     __end_of_IOCCF2_ISR:
  9173                           	callstack 0
  9174                           
  9175 ;; *************** function _IOCCF2_DefaultInterruptHandler *****************
  9176 ;; Defined at:
  9177 ;;		line 281 in file "mcc_generated_files/pin_manager.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;		None
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;		None
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  1    wreg      void 
  9184 ;; Registers used:
  9185 ;;		None
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9195 ;;Total ram usage:        0 bytes
  9196 ;; Hardware stack levels used: 1
  9197 ;; This function calls:
  9198 ;;		Nothing
  9199 ;; This function is called by:
  9200 ;;		_PIN_MANAGER_Initialize
  9201 ;;		_IOCCF2_ISR
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205                           	psect	text62
  9206  0038CC                     __ptext62:
  9207                           	callstack 0
  9208  0038CC                     _IOCCF2_DefaultInterruptHandler:
  9209                           	callstack 19
  9210  0038CC  0012               	return		;funcret
  9211  0038CE                     __end_of_IOCCF2_DefaultInterruptHandler:
  9212                           	callstack 0
  9213                           
  9214 ;; *************** function _IOCCF1_ISR *****************
  9215 ;; Defined at:
  9216 ;;		line 229 in file "mcc_generated_files/pin_manager.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;		None
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;		None
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  1    wreg      void 
  9223 ;; Registers used:
  9224 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9234 ;;Total ram usage:        0 bytes
  9235 ;; Hardware stack levels used: 1
  9236 ;; Hardware stack levels required when called: 1
  9237 ;; This function calls:
  9238 ;;		Absolute function
  9239 ;;		_IOCCF1_DefaultInterruptHandler
  9240 ;; This function is called by:
  9241 ;;		_PIN_MANAGER_IOC
  9242 ;; This function uses a non-reentrant model
  9243 ;;
  9244                           
  9245                           	psect	text63
  9246  003660                     __ptext63:
  9247                           	callstack 0
  9248  003660                     _IOCCF1_ISR:
  9249                           	callstack 19
  9250  003660                     
  9251                           ;mcc_generated_files/pin_manager.c: 234:     if(IOCCF1_InterruptHandler)
  9252  003660  0100               	movlb	0	; () banked
  9253  003662  51E2               	movf	_IOCCF1_InterruptHandler& (0+255),w,b
  9254  003664  11E3               	iorwf	(_IOCCF1_InterruptHandler+1)& (0+255),w,b
  9255  003666  11E4               	iorwf	(_IOCCF1_InterruptHandler+2)& (0+255),w,b
  9256  003668  B4D8               	btfsc	status,2,c
  9257  00366A  EF39  F01B         	goto	i2u281_41
  9258  00366E  EF3B  F01B         	goto	i2u281_40
  9259  003672                     i2u281_41:
  9260  003672  EF48  F01B         	goto	i2l3600
  9261  003676                     i2u281_40:
  9262  003676                     
  9263                           ; BSR set to: 0
  9264                           ;mcc_generated_files/pin_manager.c: 235:     {;mcc_generated_files/pin_manager.c: 236:  
      +                                 IOCCF1_InterruptHandler();
  9265  003676  D802               	call	i2u282_48
  9266  003678  EF48  F01B         	goto	i2u282_49
  9267  00367C                     i2u282_48:
  9268  00367C  0005               	push	
  9269  00367E  6EFA               	movwf	pclath,c
  9270  003680  51E2               	movf	_IOCCF1_InterruptHandler& (0+255),w,b
  9271  003682  6EFD               	movwf	tosl,c
  9272  003684  51E3               	movf	(_IOCCF1_InterruptHandler+1)& (0+255),w,b
  9273  003686  6EFE               	movwf	tosh,c
  9274  003688  51E4               	movf	(_IOCCF1_InterruptHandler+2)& (0+255),w,b
  9275  00368A  6EFF               	movwf	tosu,c
  9276  00368C  50FA               	movf	pclath,w,c
  9277  00368E  0012               	return		;indir
  9278  003690                     i2u282_49:
  9279  003690                     i2l3600:
  9280                           
  9281                           ;mcc_generated_files/pin_manager.c: 238:     IOCCFbits.IOCCF1 = 0;
  9282  003690  010F               	movlb	15	; () banked
  9283  003692  931A               	bcf	26,1,b	;volatile
  9284  003694                     
  9285                           ; BSR set to: 15
  9286  003694  0012               	return		;funcret
  9287  003696                     __end_of_IOCCF1_ISR:
  9288                           	callstack 0
  9289                           
  9290 ;; *************** function _IOCCF1_DefaultInterruptHandler *****************
  9291 ;; Defined at:
  9292 ;;		line 251 in file "mcc_generated_files/pin_manager.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;		None
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;		None
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  1    wreg      void 
  9299 ;; Registers used:
  9300 ;;		None
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9310 ;;Total ram usage:        0 bytes
  9311 ;; Hardware stack levels used: 1
  9312 ;; This function calls:
  9313 ;;		Nothing
  9314 ;; This function is called by:
  9315 ;;		_PIN_MANAGER_Initialize
  9316 ;;		_IOCCF1_ISR
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           	psect	text64
  9321  0038CE                     __ptext64:
  9322                           	callstack 0
  9323  0038CE                     _IOCCF1_DefaultInterruptHandler:
  9324                           	callstack 19
  9325  0038CE  0012               	return		;funcret
  9326  0038D0                     __end_of_IOCCF1_DefaultInterruptHandler:
  9327                           	callstack 0
  9328                           
  9329 ;; *************** function _IOCCF0_ISR *****************
  9330 ;; Defined at:
  9331 ;;		line 199 in file "mcc_generated_files/pin_manager.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;		None
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;		None
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  1    wreg      void 
  9338 ;; Registers used:
  9339 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9349 ;;Total ram usage:        0 bytes
  9350 ;; Hardware stack levels used: 1
  9351 ;; Hardware stack levels required when called: 1
  9352 ;; This function calls:
  9353 ;;		Absolute function
  9354 ;;		_IOCCF0_DefaultInterruptHandler
  9355 ;; This function is called by:
  9356 ;;		_PIN_MANAGER_IOC
  9357 ;; This function uses a non-reentrant model
  9358 ;;
  9359                           
  9360                           	psect	text65
  9361  003696                     __ptext65:
  9362                           	callstack 0
  9363  003696                     _IOCCF0_ISR:
  9364                           	callstack 19
  9365  003696                     
  9366                           ;mcc_generated_files/pin_manager.c: 204:     if(IOCCF0_InterruptHandler)
  9367  003696  0100               	movlb	0	; () banked
  9368  003698  51E5               	movf	_IOCCF0_InterruptHandler& (0+255),w,b
  9369  00369A  11E6               	iorwf	(_IOCCF0_InterruptHandler+1)& (0+255),w,b
  9370  00369C  11E7               	iorwf	(_IOCCF0_InterruptHandler+2)& (0+255),w,b
  9371  00369E  B4D8               	btfsc	status,2,c
  9372  0036A0  EF54  F01B         	goto	i2u279_41
  9373  0036A4  EF56  F01B         	goto	i2u279_40
  9374  0036A8                     i2u279_41:
  9375  0036A8  EF63  F01B         	goto	i2l3594
  9376  0036AC                     i2u279_40:
  9377  0036AC                     
  9378                           ; BSR set to: 0
  9379                           ;mcc_generated_files/pin_manager.c: 205:     {;mcc_generated_files/pin_manager.c: 206:  
      +                                 IOCCF0_InterruptHandler();
  9380  0036AC  D802               	call	i2u280_48
  9381  0036AE  EF63  F01B         	goto	i2u280_49
  9382  0036B2                     i2u280_48:
  9383  0036B2  0005               	push	
  9384  0036B4  6EFA               	movwf	pclath,c
  9385  0036B6  51E5               	movf	_IOCCF0_InterruptHandler& (0+255),w,b
  9386  0036B8  6EFD               	movwf	tosl,c
  9387  0036BA  51E6               	movf	(_IOCCF0_InterruptHandler+1)& (0+255),w,b
  9388  0036BC  6EFE               	movwf	tosh,c
  9389  0036BE  51E7               	movf	(_IOCCF0_InterruptHandler+2)& (0+255),w,b
  9390  0036C0  6EFF               	movwf	tosu,c
  9391  0036C2  50FA               	movf	pclath,w,c
  9392  0036C4  0012               	return		;indir
  9393  0036C6                     i2u280_49:
  9394  0036C6                     i2l3594:
  9395                           
  9396                           ;mcc_generated_files/pin_manager.c: 208:     IOCCFbits.IOCCF0 = 0;
  9397  0036C6  010F               	movlb	15	; () banked
  9398  0036C8  911A               	bcf	26,0,b	;volatile
  9399  0036CA                     
  9400                           ; BSR set to: 15
  9401  0036CA  0012               	return		;funcret
  9402  0036CC                     __end_of_IOCCF0_ISR:
  9403                           	callstack 0
  9404                           
  9405 ;; *************** function _IOCCF0_DefaultInterruptHandler *****************
  9406 ;; Defined at:
  9407 ;;		line 221 in file "mcc_generated_files/pin_manager.c"
  9408 ;; Parameters:    Size  Location     Type
  9409 ;;		None
  9410 ;; Auto vars:     Size  Location     Type
  9411 ;;		None
  9412 ;; Return value:  Size  Location     Type
  9413 ;;                  1    wreg      void 
  9414 ;; Registers used:
  9415 ;;		None
  9416 ;; Tracked objects:
  9417 ;;		On entry : 0/0
  9418 ;;		On exit  : 0/0
  9419 ;;		Unchanged: 0/0
  9420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9425 ;;Total ram usage:        0 bytes
  9426 ;; Hardware stack levels used: 1
  9427 ;; This function calls:
  9428 ;;		Nothing
  9429 ;; This function is called by:
  9430 ;;		_PIN_MANAGER_Initialize
  9431 ;;		_IOCCF0_ISR
  9432 ;; This function uses a non-reentrant model
  9433 ;;
  9434                           
  9435                           	psect	text66
  9436  0038D0                     __ptext66:
  9437                           	callstack 0
  9438  0038D0                     _IOCCF0_DefaultInterruptHandler:
  9439                           	callstack 19
  9440  0038D0  0012               	return		;funcret
  9441  0038D2                     __end_of_IOCCF0_DefaultInterruptHandler:
  9442                           	callstack 0
  9443                           
  9444 ;; *************** function _ADCC_ISR *****************
  9445 ;; Defined at:
  9446 ;;		line 298 in file "mcc_generated_files/adcc.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;		None
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;		None
  9451 ;; Return value:  Size  Location     Type
  9452 ;;                  1    wreg      void 
  9453 ;; Registers used:
  9454 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9455 ;; Tracked objects:
  9456 ;;		On entry : 0/0
  9457 ;;		On exit  : 0/0
  9458 ;;		Unchanged: 0/0
  9459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9464 ;;Total ram usage:        0 bytes
  9465 ;; Hardware stack levels used: 1
  9466 ;; Hardware stack levels required when called: 1
  9467 ;; This function calls:
  9468 ;;		Absolute function
  9469 ;;		_ADCC_DefaultInterruptHandler
  9470 ;; This function is called by:
  9471 ;;		_INTERRUPT_InterruptManager
  9472 ;; This function uses a non-reentrant model
  9473 ;;
  9474                           
  9475                           	psect	text67
  9476  0036CC                     __ptext67:
  9477                           	callstack 0
  9478  0036CC                     _ADCC_ISR:
  9479                           	callstack 20
  9480  0036CC                     
  9481                           ;mcc_generated_files/adcc.c: 301:     PIR1bits.ADIF = 0;
  9482  0036CC  010E               	movlb	14	; () banked
  9483  0036CE  91CB               	bcf	203,0,b	;volatile
  9484  0036D0                     
  9485                           ; BSR set to: 14
  9486                           ;mcc_generated_files/adcc.c: 303:     if (ADCC_ADI_InterruptHandler)
  9487  0036D0  0100               	movlb	0	; () banked
  9488  0036D2  51D6               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
  9489  0036D4  11D7               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
  9490  0036D6  11D8               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
  9491  0036D8  B4D8               	btfsc	status,2,c
  9492  0036DA  EF71  F01B         	goto	i2u296_41
  9493  0036DE  EF73  F01B         	goto	i2u296_40
  9494  0036E2                     i2u296_41:
  9495  0036E2  EF80  F01B         	goto	i2l556
  9496  0036E6                     i2u296_40:
  9497  0036E6                     
  9498                           ; BSR set to: 0
  9499                           ;mcc_generated_files/adcc.c: 304:             ADCC_ADI_InterruptHandler();
  9500  0036E6  D802               	call	i2u297_48
  9501  0036E8  EF80  F01B         	goto	i2u297_49
  9502  0036EC                     i2u297_48:
  9503  0036EC  0005               	push	
  9504  0036EE  6EFA               	movwf	pclath,c
  9505  0036F0  51D6               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
  9506  0036F2  6EFD               	movwf	tosl,c
  9507  0036F4  51D7               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
  9508  0036F6  6EFE               	movwf	tosh,c
  9509  0036F8  51D8               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
  9510  0036FA  6EFF               	movwf	tosu,c
  9511  0036FC  50FA               	movf	pclath,w,c
  9512  0036FE  0012               	return		;indir
  9513  003700                     i2u297_49:
  9514  003700                     i2l556:
  9515  003700  0012               	return		;funcret
  9516  003702                     __end_of_ADCC_ISR:
  9517                           	callstack 0
  9518                           
  9519 ;; *************** function _ADCC_DefaultInterruptHandler *****************
  9520 ;; Defined at:
  9521 ;;		line 311 in file "mcc_generated_files/adcc.c"
  9522 ;; Parameters:    Size  Location     Type
  9523 ;;		None
  9524 ;; Auto vars:     Size  Location     Type
  9525 ;;		None
  9526 ;; Return value:  Size  Location     Type
  9527 ;;                  1    wreg      void 
  9528 ;; Registers used:
  9529 ;;		None
  9530 ;; Tracked objects:
  9531 ;;		On entry : 0/0
  9532 ;;		On exit  : 0/0
  9533 ;;		Unchanged: 0/0
  9534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9539 ;;Total ram usage:        0 bytes
  9540 ;; Hardware stack levels used: 1
  9541 ;; This function calls:
  9542 ;;		Nothing
  9543 ;; This function is called by:
  9544 ;;		_ADCC_Initialize
  9545 ;;		_ADCC_ISR
  9546 ;; This function uses a non-reentrant model
  9547 ;;
  9548                           
  9549                           	psect	text68
  9550  0038D2                     __ptext68:
  9551                           	callstack 0
  9552  0038D2                     _ADCC_DefaultInterruptHandler:
  9553                           	callstack 20
  9554  0038D2  0012               	return		;funcret
  9555  0038D4                     __end_of_ADCC_DefaultInterruptHandler:
  9556                           	callstack 0
  9557                           
  9558                           	psect	text69
  9559  000000                     __ptext69:
  9560                           	callstack 0
  9561  000000                     
  9562                           	psect	rparam
  9563  0000                     
  9564                           	psect	temp
  9565  000056                     btemp:
  9566                           	callstack 0
  9567  000056                     	ds	1
  9568  0000                     int$flags	set	btemp
  9569  0000                     wtemp8	set	btemp+1
  9570  0000                     ttemp5	set	btemp+1
  9571  0000                     ttemp6	set	btemp+4
  9572  0000                     ttemp7	set	btemp+8
  9573                           
  9574                           	psect	idloc
  9575                           
  9576                           ;Config register IDLOC0 @ 0x200000
  9577                           ;	unspecified, using default values
  9578  200000                     	org	2097152
  9579  200000  0FFF               	dw	4095
  9580                           
  9581                           ;Config register IDLOC1 @ 0x200002
  9582                           ;	unspecified, using default values
  9583  200002                     	org	2097154
  9584  200002  0FFF               	dw	4095
  9585                           
  9586                           ;Config register IDLOC2 @ 0x200004
  9587                           ;	unspecified, using default values
  9588  200004                     	org	2097156
  9589  200004  0FFF               	dw	4095
  9590                           
  9591                           ;Config register IDLOC3 @ 0x200006
  9592                           ;	unspecified, using default values
  9593  200006                     	org	2097158
  9594  200006  0FFF               	dw	4095
  9595                           
  9596                           ;Config register IDLOC4 @ 0x200008
  9597                           ;	unspecified, using default values
  9598  200008                     	org	2097160
  9599  200008  0FFF               	dw	4095
  9600                           
  9601                           ;Config register IDLOC5 @ 0x20000A
  9602                           ;	unspecified, using default values
  9603  20000A                     	org	2097162
  9604  20000A  0FFF               	dw	4095
  9605                           
  9606                           ;Config register IDLOC6 @ 0x20000C
  9607                           ;	unspecified, using default values
  9608  20000C                     	org	2097164
  9609  20000C  0FFF               	dw	4095
  9610                           
  9611                           ;Config register IDLOC7 @ 0x20000E
  9612                           ;	unspecified, using default values
  9613  20000E                     	org	2097166
  9614  20000E  0FFF               	dw	4095
  9615                           
  9616                           	psect	config
  9617                           
  9618                           ;Config register CONFIG1L @ 0x300000
  9619                           ;	External Oscillator mode Selection bits
  9620                           ;	FEXTOSC = OFF, Oscillator not enabled
  9621                           ;	Power-up default value for COSC bits
  9622                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  9623  300000                     	org	3145728
  9624  300000  EC                 	db	236
  9625                           
  9626                           ;Config register CONFIG1H @ 0x300001
  9627                           ;	Clock Out Enable bit
  9628                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  9629                           ;	Clock Switch Enable bit
  9630                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  9631                           ;	Fail-Safe Clock Monitor Enable bit
  9632                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  9633  300001                     	org	3145729
  9634  300001  FF                 	db	255
  9635                           
  9636                           ;Config register CONFIG2L @ 0x300002
  9637                           ;	Master Clear Enable bit
  9638                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  9639                           ;	Power-up Timer Enable bit
  9640                           ;	PWRTE = OFF, Power up timer disabled
  9641                           ;	Low-power BOR enable bit
  9642                           ;	LPBOREN = OFF, ULPBOR disabled
  9643                           ;	Brown-out Reset Enable bits
  9644                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  9645  300002                     	org	3145730
  9646  300002  FF                 	db	255
  9647                           
  9648                           ;Config register CONFIG2H @ 0x300003
  9649                           ;	Brown Out Reset Voltage selection bits
  9650                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  9651                           ;	ZCD Disable bit
  9652                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  9653                           ;	PPSLOCK bit One-Way Set Enable bit
  9654                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  9655                           ;	Stack Full/Underflow Reset Enable bit
  9656                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9657                           ;	Debugger Enable bit
  9658                           ;	DEBUG = OFF, Background debugger disabled
  9659                           ;	Extended Instruction Set Enable bit
  9660                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  9661  300003                     	org	3145731
  9662  300003  FF                 	db	255
  9663                           
  9664                           ;Config register CONFIG3L @ 0x300004
  9665                           ;	WDT Period Select bits
  9666                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9667                           ;	WDT operating mode
  9668                           ;	WDTE = OFF, WDT Disabled
  9669  300004                     	org	3145732
  9670  300004  9F                 	db	159
  9671                           
  9672                           ;Config register CONFIG3H @ 0x300005
  9673                           ;	WDT Window Select bits
  9674                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  9675                           ;	WDT input clock selector
  9676                           ;	WDTCCS = SC, Software Control
  9677  300005                     	org	3145733
  9678  300005  FF                 	db	255
  9679                           
  9680                           ;Config register CONFIG4L @ 0x300006
  9681                           ;	Write Protection Block 0
  9682                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  9683                           ;	Write Protection Block 1
  9684                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  9685                           ;	Write Protection Block 2
  9686                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  9687                           ;	Write Protection Block 3
  9688                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  9689                           ;	Write Protection Block 3
  9690                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  9691                           ;	Write Protection Block 3
  9692                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  9693                           ;	Write Protection Block 3
  9694                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
  9695                           ;	Write Protection Block 3
  9696                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  9697  300006                     	org	3145734
  9698  300006  FF                 	db	255
  9699                           
  9700                           ;Config register CONFIG4H @ 0x300007
  9701                           ;	Configuration Register Write Protection bit
  9702                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  9703                           ;	Boot Block Write Protection bit
  9704                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  9705                           ;	Data EEPROM Write Protection bit
  9706                           ;	WRTD = OFF, Data EEPROM not write-protected
  9707                           ;	Scanner Enable bit
  9708                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  9709                           ;	Low Voltage Programming Enable bit
  9710                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  9711  300007                     	org	3145735
  9712  300007  FF                 	db	255
  9713                           
  9714                           ;Config register CONFIG5L @ 0x300008
  9715                           ;	UserNVM Program Memory Code Protection bit
  9716                           ;	CP = OFF, UserNVM code protection disabled
  9717                           ;	DataNVM Memory Code Protection bit
  9718                           ;	CPD = OFF, DataNVM code protection disabled
  9719  300008                     	org	3145736
  9720  300008  FF                 	db	255
  9721                           
  9722                           ;Config register CONFIG5H @ 0x300009
  9723                           ;	unspecified, using default values
  9724  300009                     	org	3145737
  9725  300009  FF                 	db	255
  9726                           
  9727                           ;Config register CONFIG6L @ 0x30000A
  9728                           ;	Table Read Protection Block 0
  9729                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  9730                           ;	Table Read Protection Block 1
  9731                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  9732                           ;	Table Read Protection Block 2
  9733                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  9734                           ;	Table Read Protection Block 3
  9735                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  9736                           ;	Table Read Protection Block 4
  9737                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  9738                           ;	Table Read Protection Block 5
  9739                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  9740                           ;	Table Read Protection Block 6
  9741                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  9742                           ;	Table Read Protection Block 7
  9743                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  9744  30000A                     	org	3145738
  9745  30000A  FF                 	db	255
  9746                           
  9747                           ;Config register CONFIG6H @ 0x30000B
  9748                           ;	Boot Block Table Read Protection bit
  9749                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  9750  30000B                     	org	3145739
  9751  30000B  FF                 	db	255
  9752                           tosu	equ	0xFFF
  9753                           tosh	equ	0xFFE
  9754                           tosl	equ	0xFFD
  9755                           stkptr	equ	0xFFC
  9756                           pclatu	equ	0xFFB
  9757                           pclath	equ	0xFFA
  9758                           pcl	equ	0xFF9
  9759                           tblptru	equ	0xFF8
  9760                           tblptrh	equ	0xFF7
  9761                           tblptrl	equ	0xFF6
  9762                           tablat	equ	0xFF5
  9763                           prodh	equ	0xFF4
  9764                           prodl	equ	0xFF3
  9765                           indf0	equ	0xFEF
  9766                           postinc0	equ	0xFEE
  9767                           postdec0	equ	0xFED
  9768                           preinc0	equ	0xFEC
  9769                           plusw0	equ	0xFEB
  9770                           fsr0h	equ	0xFEA
  9771                           fsr0l	equ	0xFE9
  9772                           wreg	equ	0xFE8
  9773                           indf1	equ	0xFE7
  9774                           postinc1	equ	0xFE6
  9775                           postdec1	equ	0xFE5
  9776                           preinc1	equ	0xFE4
  9777                           plusw1	equ	0xFE3
  9778                           fsr1h	equ	0xFE2
  9779                           fsr1l	equ	0xFE1
  9780                           bsr	equ	0xFE0
  9781                           indf2	equ	0xFDF
  9782                           postinc2	equ	0xFDE
  9783                           postdec2	equ	0xFDD
  9784                           preinc2	equ	0xFDC
  9785                           plusw2	equ	0xFDB
  9786                           fsr2h	equ	0xFDA
  9787                           fsr2l	equ	0xFD9
  9788                           status	equ	0xFD8

Data Sizes:
    Strings     61
    Constant    4
    Data        213
    BSS         122
    Persistent  28
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     79      85
    BANK0           160     58     151
    BANK1           256      0      64
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 61
		 -> STR_1(CODE[61]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 61
		 -> STR_1(CODE[61]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 61
		 -> STR_1(CODE[61]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 61
		 -> STR_1(CODE[61]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 32
		 -> LCDout(BANK1[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2234$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2234$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_SendBytes@buffer	PTR unsigned short  size(2) Largest target is 8
		 -> LCD_WriteData@buffer(BANK0[8]), LCD_WriteString@buffer(BANK0[8]), LCD_WriteCMD@buffer(BANK0[8]), 

    lcd.delay_us	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> delayUS(), 

    lcd.lcd_write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> writeLCD(), 

    LCD_MakeData@buffer	PTR unsigned short  size(2) Largest target is 8
		 -> LCD_WriteData@buffer(BANK0[8]), LCD_WriteString@buffer(BANK0[8]), 

    LCD_MakeCMD@buffer	PTR unsigned short  size(2) Largest target is 8
		 -> LCD_WriteCMD@buffer(BANK0[8]), 

    lcd.delay_us	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> delayUS(), 

    lcd.lcd_write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> writeLCD(), 

    lcd.delay_us	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> delayUS(), 

    lcd.lcd_write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> writeLCD(), 

    lcd.delay_us	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> delayUS(), 

    lcd.lcd_write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> writeLCD(), 

    LCD_WriteString@str	PTR unsigned char  size(2) Largest target is 32
		 -> LCDout(BANK1[32]), 

    lcd.delay_us	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> delayUS(), 

    lcd.lcd_write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> writeLCD(), 

    lcd.delay_us	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> delayUS(), 

    lcd.lcd_write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> writeLCD(), 

    S1546any_lcd$delay_us	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> delayUS(), 

    lcd.delay_us	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> delayUS(), 

    S1546any_lcd$lcd_write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> writeLCD(), 

    lcd.lcd_write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> writeLCD(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> IOCCF3_DefaultInterruptHandler(), 

    IOCCF3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), IOCCF3_DefaultInterruptHandler(), 

    IOCCF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> IOCCF2_DefaultInterruptHandler(), 

    IOCCF2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), IOCCF2_DefaultInterruptHandler(), 

    IOCCF1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> IOCCF1_DefaultInterruptHandler(), 

    IOCCF1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), IOCCF1_DefaultInterruptHandler(), 

    IOCCF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> IOCCF0_DefaultInterruptHandler(), 

    IOCCF0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), IOCCF0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->_isspace
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF3_SetInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler
    _LCD_WriteString->_LCD_SendBytes
    _LCD_Init->_LCD_WriteCMD
    _LCD_WriteCMD->_LCD_SendBytes
    _LCD_SendBytes->_delayUS

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   29668
                                             48 BANK0     10    10      0
           _ADCC_GetConversionResult
               _ADCC_StartConversion
                           _LCD_Init
                       _LCD_WriteCMD
                    _LCD_WriteString
                  _SYSTEM_Initialize
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   14343
                                             15 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   13845
                                             77 COMRAM     2     2      0
                                              9 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   13339
                                             67 COMRAM    10     4      6
                                              0 BANK0      9     9      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6763
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4497
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2051
                                             13 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1577
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    1554
                                             11 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     562
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     381
                                             59 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2200
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    2540
                                             43 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     784
                    _ADCC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             3     0      3      98
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                              7 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             3     0      3      98
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              7 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3      98
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     392
         _IOCCF0_SetInterruptHandler
         _IOCCF1_SetInterruptHandler
         _IOCCF2_SetInterruptHandler
         _IOCCF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF3_SetInterruptHandler                           3     0      3      98
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _IOCCF2_SetInterruptHandler                           3     0      3      98
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _IOCCF1_SetInterruptHandler                           3     0      3      98
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _IOCCF0_SetInterruptHandler                           3     0      3      98
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      98
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      98
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      9     1      8    1972
                                             24 COMRAM     9     1      8
                       _LCD_MakeData
                      _LCD_SendBytes
 ---------------------------------------------------------------------------------
 (2) _LCD_MakeData                                         8     4      4     480
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             6     0      6    3480
                                             32 COMRAM     6     0      6
                       _LCD_WriteCMD
                            _delayUS *
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteCMD                                         8     0      8    2861
                                             24 COMRAM     8     0      8
                        _LCD_MakeCMD
                      _LCD_SendBytes
 ---------------------------------------------------------------------------------
 (2) _LCD_SendBytes                                       12     3      9    1273
                                             12 COMRAM    12     3      9
                            _delayUS *
                           _writeLCD *
 ---------------------------------------------------------------------------------
 (3) _writeLCD                                             3     3      0      44
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _delayUS                                              8     4      4     410
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_MakeCMD                                          8     4      4     328
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ADCC_StartConversion                                 1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetConversionResult                             4     2      2       0
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           2     2      0     240
                                              2 COMRAM     2     2      0
                           _ADCC_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR2_ISR                                            0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR1_ISR                                            0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCCF0_ISR
                         _IOCCF1_ISR
                         _IOCCF2_ISR
                         _IOCCF3_ISR
 ---------------------------------------------------------------------------------
 (11) _IOCCF3_ISR                                          0     0      0       0
                   Absolute function *
     _IOCCF3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _IOCCF3_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _IOCCF2_ISR                                          0     0      0       0
                   Absolute function *
     _IOCCF2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _IOCCF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _IOCCF1_ISR                                          0     0      0       0
                   Absolute function *
     _IOCCF1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _IOCCF1_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _IOCCF0_ISR                                          0     0      0       0
                   Absolute function *
     _IOCCF0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _IOCCF0_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetConversionResult
   _ADCC_StartConversion
   _LCD_Init
     _LCD_WriteCMD
       _LCD_MakeCMD
       _LCD_SendBytes
         _delayUS *
         _writeLCD *
     _delayUS *
   _LCD_WriteCMD
   _LCD_WriteString
     _LCD_MakeData
     _LCD_SendBytes
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF0_SetInterruptHandler
       _IOCCF1_SetInterruptHandler
       _IOCCF2_SetInterruptHandler
       _IOCCF3_SetInterruptHandler
     _PMD_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   ___fladd
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___fltol
     ___fladd (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _delayUS
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
         _fputc
         _isdigit

 _INTERRUPT_InterruptManager (ROOT)
   _ADCC_ISR
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCCF0_ISR
       Absolute function(Fake) *
       _IOCCF0_DefaultInterruptHandler *
     _IOCCF1_ISR
       Absolute function(Fake) *
       _IOCCF1_DefaultInterruptHandler *
     _IOCCF2_ISR
       Absolute function(Fake) *
       _IOCCF2_DefaultInterruptHandler *
     _IOCCF3_ISR
       Absolute function(Fake) *
       _IOCCF3_DefaultInterruptHandler *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      40       7       25.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3A      97       5       94.4%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4F      55       1       90.4%
BITBIGSFRllhhll     27      0       0      42        0.0%
BITBIGSFRhhllhl     23      0       0      37        0.0%
BITBIGSFRhhhl       1B      0       0      35        0.0%
BITBIGSFRllllll     18      0       0      45        0.0%
BITBIGSFRllllll     17      0       0      56        0.0%
BITBIGSFRllllll     12      0       0      55        0.0%
BITBIGSFRllhhhh      F      0       0      41        0.0%
BITBIGSFRhhhh        D      0       0      34        0.0%
BITBIGSFRllllll      D      0       0      46        0.0%
BITBIGSFRhhllhl      C      0       0      36        0.0%
BITBIGSFRllllll      9      0       0      50        0.0%
BITBIGSFRllllll      9      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRlllllh      3      0       0      44        0.0%
BITBIGSFRllhl        3      0       0      43        0.0%
BITBIGSFRhhllll      2      0       0      39        0.0%
BITBIGSFRllllll      2      0       0      47        0.0%
BITBIGSFRllllll      2      0       0      53        0.0%
BITBIGSFRhhlllh      1      0       0      38        0.0%
BITBIGSFRllllll      1      0       0      48        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRhhllll      1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F4      57        0.0%
DATA                 0      0     1F4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Apr 13 13:32:05 2022

           __end_of_TMR2_SetInterruptHandler 3842                                 ?_LCD_MakeCMD 0005  
                        ___wmul@multiplicand 0007                                _LCD_SendBytes 3038  
                              ?_LCD_MakeData 0005                                          l121 2C48  
                                        l135 3894                                          l215 385C  
                                        l145 3886                                          l155 3878  
                                        l165 386A                                          l261 37A4  
                                        l264 381E                                          l193 3516  
                                        l371 38C0                                          l267 3806  
                                        l294 37EA                                          l471 31EC  
                                        l623 384E                                          l480 3832  
                                        l704 3840                                          l474 38BC  
                                        l821 37CA                                          l661 3730  
                                        l815 33B8                                          l559 38A2  
                                        l816 33A4                                          l832 3586  
                                        l840 324E                                          l593 338E  
                                        l818 33D6                                          l854 2A5A  
                                        l863 30B6                                          l848 2F74  
                                        l857 2950                                          l866 377E  
                                        l980 2578                                          l993 2846  
                                        _PR2 000FBC                              _timer1ReloadVal 00E8  
                                        _abs 345E                                          _pad 2F76  
                            _TMR2_Initialize 3702                                          tosl 000FFD  
                                        wreg 000FE8                            ??_LCD_WriteString 0021  
          fp__IOCCF2_DefaultInterruptHandler 0000             ??_IOCCF2_DefaultInterruptHandler 0001  
            ?_IOCCF2_DefaultInterruptHandler 0001                                 ___flmul@aexp 0024  
                               ___flmul@bexp 0025                 ?_ADCC_SetADIInterruptHandler 0005  
         __end_of_IOCCF0_SetInterruptHandler 3896                   _IOCCF0_SetInterruptHandler 3888  
                               ___flmul@sign 001F                                 ___flmul@temp 002A  
                               ___flmul@prod 0026           __end_of_IOCCF3_SetInterruptHandler 386C  
                 _IOCCF3_SetInterruptHandler 385E                                  fp__writeLCD 0000  
                               ___fltol@exp1 0045                                         ?_abs 0017  
                                       l1411 124C                                         l1403 1402  
                                       l1163 2B60                                         l1420 131C  
                                       l1421 130A                                         l4000 1404  
                                       l1521 2294                                         l4010 1440  
                                       l4002 1410                                         l1602 1FFE  
                                       l4100 1746                                         l4020 1472  
                                       l4012 1450                                         l4004 141E  
                                       l1524 23F0                                         l1604 2006  
                                       l4110 17A8                                         l4102 1752  
                                       l4030 14B2                                         l4022 1480  
                                       l4014 1456                                         l4006 1420  
                                       l1622 223C                                         l1535 2388  
                                       l1703 2DE6                                         l1711 341A  
                                       l3312 3390                                         l4120 1810  
                                       l4112 17BC                                         l4104 1760  
                                       l4040 14FC                                         l1480 14C8  
                                       l4032 14B8                                         l4024 1482  
                                       l4016 1466                                         l4008 1430  
                                       l4200 236A                                         l1528 232C  
                                       l1720 35BC                                         l1544 32A0  
                                       l3314 33AC                                         l1394 1132  
                                       l4122 1812                                         l4114 17D6  
                                       l4106 178A                                         l1490 1724  
                                       l4050 154C                                         l4042 1508  
                                       l4034 14D8                                         l4026 1492  
                                       l4018 146C                                         l4130 2A5C  
                                       l4210 23C0                                         l4202 2378  
                                       l1714 38C2                                         l1395 1120  
                                       l1635 1F5C                                         l3316 37A8  
                                       l1396 10E6                                         l4116 17F2  
                                       l4124 1818                                         l4108 178E  
                                       l4060 158E                                         l4052 1558  
                                       l4044 1512                                         l1484 182C  
                                       l4036 14E8                                         l4028 14A2  
                                       l4140 2AB2                                         l4132 2A72  
                                       l4212 23D0                                         l4204 2396  
                                       l1652 349C                                         l1580 3036  
                                       l1644 317E                                         l1645 3186  
                                       l4126 181C                                         l4118 1802  
                                       l4070 15F0                                         l4062 159A  
                                       l4054 1564                                         l4046 1528  
                                       l4142 2AC2                                         l4214 23DE  
                                       l4206 2398                                         l1487 16BE  
                                       l1591 2CAE                                         l1575 2FBA  
                                       l3440 3888                                         l4080 1686  
                                       l4072 15FC                                         l4064 15AA  
                                       l4056 1572                                         l4048 1534  
                                       l4152 2AEC                                         l4144 2AC6  
                                       l4136 2A86                                         l4216 23E0  
                                       l4208 239C                                         l1680 354E  
                                       l4400 33E4                                         l1497 17EE  
                                       l1489 1736                                         l1649 3494  
                                       l3450 3896                                         l3442 387A  
                                       l4090 16DC                                         l4082 16A4  
                                       l4074 1618                                         l4066 15C4  
                                       l4058 157E                                         l4170 2B50  
                                       l4162 2B14                                         l4154 2AF6  
                                       l4146 2AD4                                         l4138 2AB0  
                                       l1674 26DA                                         l1594 2CF0  
                                       l4402 33F6                                         l4410 3598  
                                       l1578 2FFC                                         l3460 3040  
                                       l3444 386C                                         l3540 2BC4  
                                       l3620 34FC                                         l3452 3842  
                                       l4092 16E0                                         l4084 16AE  
                                       l4076 1642                                         l4068 15D4  
                                       l4164 2B20                                         l4156 2B00  
                                       l4180 22A4                                         l1596 2D1C  
                                       l4404 33FA                                         l4412 35B0  
                                       l1677 26E2                                         l3462 3074  
                                       l3446 385E                                         l3550 2BD2  
                                       l3542 2BC6                                         l3534 2B62  
                                       l3630 37EC                                         l3622 3500  
                                       l3614 34DC                                         l3454 3834  
                                       l4094 16EE                                         l4086 16BC  
                                       l4078 1678                                         l4166 2B30  
                                       l4190 22E2                                         l4182 22BA  
                                       l4174 2240                                         l4430 2428  
                                       l4422 23F2                                         l4406 3588  
                                       l4510 2FB2                                         l4502 2F76  
                       _ADCC_StartConversion 38B2                                         l3456 2952  
                                       l3464 30A2                                         l3640 3188  
                                       l3560 2BE0                                         l3552 2BD4  
                                       l3544 2BC8                                         l3536 2B86  
                                       l3632 37CC                                         l3448 3850  
                                       l3624 3502                                         l3616 34E0  
                                       l3800 0F50                                         l4096 171C  
                                       l4088 16CE                                         l4168 2B40  
                                       l4192 2314                                         l4176 2250  
                                       l4416 375A                                         l1688 32F2  
                                       l4440 2484                                         l4432 2436  
                                       l4424 23F6                                         l4408 3594  
                                       l4520 301E                                         l4512 2FC6  
                                       l4504 2F84                                         l4600 20CE  
                                       l3466 30A4                                         l3458 3038  
                                       l3642 31D6                                         l3570 2BEA  
                                       l3562 2BE2                                         l3554 2BD6  
                                       l3546 2BCA                                         l3538 2B88  
                                       l3634 37E6                                         l3626 3512  
                                       l3618 34E6                                         l3650 3716  
                                       l3730 378C                                         l3810 0F90  
                                       l3802 0F5E                                         l4194 2316  
                                       l4186 22CE                                         l4178 225E  
                                       l4418 3776                                         l4450 24EE  
                                       l4442 248C                                         l4434 2456  
                                       l4426 2404                                         l4514 2FDA  
                                       l4506 2F98                                         l4610 2176  
                                       l4602 20D4                                         l3644 31DA  
                                       l3628 38BE                                         l3580 2BF4  
                                       l3572 2BEC                                         l3564 2BE4  
                                       l3556 2BDC                                         l3548 2BD0  
                                       l3636 37E8                                         l3660 335A  
                                       l3652 371A                                         l3740 37A0  
                                       l3732 3790                                         l3724 3780  
                                       l3900 1150                                         l3820 0FC2  
                                       l3812 0F92                                         l3804 0F60  
                                       l4196 2322                                         l4188 22D6  
                                       l4540 32EC                                         l4532 32A2  
                                       l4460 2538                                         l4452 250E  
                                       l4444 24A0                                         l4436 245A  
                                       l4428 2424                                         l4524 345E  
                                       l4516 2FDE                                         l4508 2FA6  
                                       l4620 21D8                                         l4612 2190  
                                       l4604 20DA                                         l4700 1E08  
                                       l3646 31DC                                         l3638 3808  
                                       l3582 2C04                                         l3574 2BEE  
                                       l3566 2BE6                                         l3558 2BDE  
                                       l3662 335E                                         l3654 371C  
                                       l3734 3794                                         l3726 3784  
                                       l3910 1190                                         l3830 0FEA  
                                       l3822 0FC4                                         l3806 0F70  
                                       l3814 0F9A                                         l4198 235E  
                                       l4534 32A6                                         l4390 2D4C  
                                       l4550 2C74                                         l4462 2558  
                                       l4454 2510                                         l4446 24AE  
                                       l4438 2466                                         l4470 26F6  
                                       l4526 3478                                         l4518 300A  
                                       l4622 21DE                                         l4630 2214  
                                       l4614 21AA                                         l4606 213E  
                                       l4710 1EDA                                         l4702 1E30  
                                       ?_pad 0015                                         l3584 2C14  
                                       l3576 2BF0                                         l3568 2BE8  
                                       l3664 3376                                         l3656 372C  
                                       l3648 3702                                         l3736 3798  
                                       l3728 3788                                         l3920 11BA  
                                       l3912 119C                                         l3904 1164  
                                       l3840 1024                                         l3832 0FFA  
                                       l3824 0FCA                                         l3816 0FAA  
                                       l3808 0F80                                         l4528 3518  
                                       l4536 32BA                                         l4640 2592  
                                       l4392 2D6A                                         l4384 2D1E  
                                       l4560 2CBA                                         l4552 2C82  
                                       l4544 2C4A                                         l4456 2522  
                                       l4448 24C0                                         l4480 2766  
                                       l4472 2716                                         l4624 21F0  
                                       l4608 2158                                         l4616 21B8  
                                       l4720 1F16                                         l4712 1EE8  
                                       l4704 1E7A                                         l4800 1980  
                                       l3762 38B4                                         l3586 2C24  
                                       l3578 2BF2                                         l3666 337A  
                                       l3658 3346                                         l3738 379C  
                                       l3930 122C                                         l3914 11A0  
                                       l3906 1174                                         l3922 11C0  
                                       l3850 1050                                         l3842 1036  
                                       l3834 100A                                         l3826 0FD8  
                                       l3818 0FB0                                         l4538 32E8  
                                       l4650 2638                                         l4642 25B2  
                                       l4634 257A                                         l4394 2DA0  
                                       l4386 2D30                                         l4562 2CCE  
                                       l4554 2C94                                         l4546 2C5C  
                                       l4458 2528                                         l4490 27DE  
                                       l4482 276E                                         l4474 271A  
                                       l4466 26E4                                         l4626 21FC  
                                       l4618 21CA                                         l4714 1EFC  
                                       l4810 1A2A                                         l4802 1988  
                                       l3764 38B8                                         l3684 3550  
                                       l3772 2EB0                                         l3588 2C34  
                                       l3668 338A                                         l3940 1286  
                                       l3924 11E6                                         l3932 123C  
                                       l3916 11AE                                         l3908 1182  
                                       l3860 1064                                         l3852 1054  
                                       l3844 1044                                         l3836 100C  
                                       l3828 0FDA                                         l4660 26BE  
                                       l4644 25F0                                         l4636 258E  
                                       l4388 2D42                                         l4564 2CD2  
                                       l4548 2C68                                         l4492 27F0  
                                       l4484 2782                                         l4476 2728  
                                       l4468 26E8                                         l4628 2204  
                                       l4580 1FD6                                         l4572 1F5E  
                                       l4708 1EB2                                         l4724 1F22  
                                       l4732 3122                                         l4740 3250  
                                       l4820 1A64                                         l4812 1A2E  
                                       l4804 19DC                                         l3766 38BA  
                                       l3686 3564                                         l3774 2F46  
                                       l3790 31F2                                         l3950 12B6  
                                       l3942 1290                                         l3934 1262  
                                       l3926 121A                                         l3918 11B0  
                                       l3870 1078                                         l3862 1068  
                                       l3854 1058                                         l3846 1048  
                                       l3838 1014                                         l4646 25F8  
                                       l4566 2CFE                                         l4558 2CA6  
                                       l4486 2790                                         l4494 27F6  
                                       l4478 2748                                         l4398 33D8  
                                       l4590 202E                                         l4582 1FD8  
                                       l4574 1F7E                                         l4726 1F4A  
                                       l4718 1F08                                         l4670 1C68  
                                       l4734 312A                                         l4742 3262  
                                       l4830 1A9E                                         l4822 1A66  
                                       l4814 1A3E                                         l4806 19FA  
                                       l3768 3820                                         l3688 2848  
                                       l3792 3210                                         l3960 12DE  
                                       l3952 12BA                                         l3944 129E  
                                       l3936 1272                                         l3928 121C  
                                       l3880 10B2                                         l3872 107C  
                                       l3864 106C                                         l3856 105C  
                                       l3848 104C                                         l4656 2672  
                                       l4648 2600                                         l4568 2D10  
                                       l4496 2806                                         l4488 27BE  
                                       l4592 2034                                         l4584 1FF2  
                                       l4576 1FA6                                         l4680 1CEA  
                                       l4672 1C78                                         l4736 3138  
                                       l4744 326A                                         l4840 1AD2  
                                       l4832 1AA4                                         l4824 1A7A  
                                       l4816 1A52                                         l4808 1A18  
                                       l4760 1844                                         l4752 182E  
                                       l3794 3232                                         l3970 1338  
                                       l3962 12EC                                         l3954 12CA  
                                       l3946 12A0                                         l3890 1104  
                                       l3882 10CE                                         l3874 1080  
                                       l3866 1070                                         l3858 1060  
                                       l4658 26AC                                         l4498 2826  
                                       l4594 203C                                         l4586 200E  
                                       l4578 1FC6                                         l4690 1D68  
                                       l4682 1CF8                                         l4674 1C7E  
                                       l4666 1C32                                         l4738 315E  
                                       l4746 3272                                         l4842 1AD6  
                                       l4834 1AA6                                         l4818 1A5E  
                                       l4826 1A80                                         l4770 1882  
                                       l4762 1850                                         l4754 1832  
                                       l3796 3236                                         l3788 31EE  
                                       l3980 13A2                                         l3972 1346  
                                       l3964 1302                                         l3948 12AE  
                                       l3956 12CC                                         l3892 1112  
                                       l3884 10DE                                         l3868 1074  
                                       l3876 1084                                         l4596 2046  
                                       l4588 2020                                         l4692 1D90  
                                       l4684 1D18                                         l4676 1CA6  
                                       l4668 1C5A                                         l4748 328E  
                                       l4844 1B1C                                         l4836 1ABA  
                                       l4828 1A92                                         l4780 18EE  
                                       l4772 1890                                         l4764 1866  
                                       l4756 1834                                         l3990 13DC  
                                       l3982 13C2                                         l3974 1380  
                                       l3958 12DA                                         l3894 1114  
                                       l3886 10F4                                         l3878 1088  
                                       l3798 0F44                                         l4870 2622  
                                       l4598 204C                                         l4694 1DC4  
                                       l4678 1CDC                                         l4846 1B80  
                                       l4838 1AC0                                         l4790 1930  
                                       l4782 18F6                                         l4774 18B4  
                                       l4766 186C                                         l4758 1836  
                                       l3992 13E2                                         l3984 13C6  
                                       l3968 132C                                         l3976 1382  
                                       l3896 111E                                         l3888 1100  
                                       l4688 1D26                                         l4848 1BC6  
                                       l4792 1954                                         l4784 1904  
                                       l4776 18BC                                         l4768 187E  
                         LCD_WriteString@lcd 001B                                         l3994 13F0  
                                       l3986 13D4                                         l3978 1392  
                                       l3898 1140                                         l4698 1DE0  
                                       l4786 191A                                         l4778 18CA  
                                       l4794 195C                                         l3996 13F2  
                                       l3988 13DA                                         l4796 196C  
                                       l4788 1922                                         l4798 1970  
                                       STR_1 0F05                           LCD_WriteString@str 0019  
                                       u3100 0F5E                                         u3021 2EC2  
                                       u3101 0F5A                                         _LATA 000F83  
                                       u3110 0F70                                         _LATB 000F84  
                                       u3031 2EE0                                         u3111 0F6C  
                                       _LATC 000F85                                         u3200 10CA  
                                       u3120 0F80                                         _LATD 000F86  
                                       u3041 2EFE                                         u3201 10C4  
                                       u3121 0F7C                                         _LATE 000F87  
                                       u3210 10CC                                         u3130 0FC2  
                                       u3051 2F1C                                         u3131 0FBE  
                                       u2420 33D6                                         u3300 11E6  
                                       u3220 10F4                                         u3140 0FD8  
                                       u2421 33D2                                         u3061 2F3A  
                                       u3301 11E2                                         u3221 10F0  
                                       u3141 0FD4                                         u3310 122C  
                                       u3230 1112                                         u3150 0FEA  
                                       u3311 1228                                         u3231 110E  
                                       u3151 0FE6                                         u3400 1318  
                                       u3320 1262                                         u3240 1132  
                                       u3160 0FFA                                         u4200 2D30  
                                       u3081 3222                                         u3401 1314  
                                       u3321 125E                                         u3241 112E  
                                       u3161 0FF6                                         u4201 2D2C  
                                       u3090 324E                                         u3410 132C  
                                       u3330 1272                                         u3250 1140  
                                       u3170 1036                                         u4210 2D42  
                                       _T2PR 000FBC                                         u2435 37BC  
                                       u3091 324A                                         u3411 1328  
                                       u3331 126E                                         u3251 113C  
                                       u3171 1032                                         u4211 2D3E  
                                       u2700 30B6                                         u3420 1346  
                                       u3340 129E                                         u3260 1150  
                                       u3180 1044                                         u3500 1430  
                                       u4220 2D6A                                         u4300 24AE  
                                       u2701 30B2                                         u3421 1342  
                                       u3341 129A                                         u3261 114C  
                                       u3181 1040                                         u3501 142C  
                                       u4221 2D66                                         u4301 24AA  
                                       u3078 2F60                                         u3430 1380  
                                       u3350 12AE                                         u3270 1182  
                                       u3190 10B2                                         u3510 1440  
                                       u4230 2DA0                                         u4310 24EE  
                                       u3079 2F74                                         u3431 137C  
                                       u3351 12AA                                         u3271 117E  
                                       u3191 10AE                                         u3511 143C  
                                       u4231 2D9C                                         u4311 24EA  
                                       u3440 1392                                         u3360 12CA  
                                       u3280 1190                                         u3600 16EE  
                                       u3520 1480                                         u4320 2538  
                                       u4240 341A                                         u4400 2FA6  
                                       u3441 138E                                         u3361 12C6  
                                       u3281 118C                                         u3601 16EA  
                                       u3521 147C                                         u4321 2534  
                                       u4241 3416                                         u4401 2FA2  
                                       u3450 13A2                                         u3370 12DA  
                                       u3290 11AE                                         u3610 171C  
                                       u3530 1492                                         u4330 26F6  
                                       u4250 35B0                                         u4410 2FFC  
                                       u3451 139E                                         u3371 12D6  
                                       u3291 11AA                                         u3611 1718  
                                       u3531 148E                                         u4331 26F2  
                                       u4251 35AC                                         u4411 2FF8  
                                       u3460 13C2                                         u3380 12EC  
                                       u3620 1732                                         u3540 14A2  
                                       u3700 2AD4                                         u4500 2CA2  
                                       u4260 2404                                         u4340 2728  
                                       u4420 300A                                         u3461 13BE  
                                       u3381 12E8                                         u3621 172E  
                                       u3541 149E                                         u3701 2AD0  
                                       u4501 2C9E                                         u4261 2400  
                                       u4341 2724                                         u4421 3006  
                                       u3470 13D4                                         u3390 1302  
                                       u3630 1746                                         u3550 14D8  
                                       u3710 2AE8                                         u4510 2CF0  
                                       u4270 2436                                         u4350 2766  
                                       u4430 3478                                         u3471 13D0  
                                       u3391 12FE                                         u3631 1742  
                                       u3551 14D4                                         u3711 2AE4  
                                       u4511 2CEC                                         u4271 2432  
                                       u4351 2762                                         u4431 3474  
                                       u3480 13F0                                         u3640 1760  
                                       u3560 14E8                                         u3720 2B10  
                                       u3800 2378                                         u4440 3548  
                                       u4520 2CFE                                         u4360 2790  
                                       u4600 2158                                         u3481 13EC  
                                       u3641 175C                                         u3561 14E4  
                                       u3721 2B0C                                         u3801 2374  
                                       u4441 3542                                         u4521 2CFA  
                                       u4281 2460                                         u4361 278C  
                                       u4601 2154                                         u3650 17A8  
                                       u3570 1662                                         u3490 141E  
                                       u3730 2B30                                         u3810 2388  
                                       u4450 354A                                         u4290 2484  
                                       u4370 27BE                                         u4610 2176  
                                       u4530 1F8E                                         u3651 17A4  
                                       u3491 141A                                         u3731 2B2C  
                                       u3811 2384                                         u4291 2480  
                                       u4371 27BA                                         u4611 2172  
                                       u4531 1F88                                         u3660 17D6  
                                       u3580 16BC                                         u3740 2B40  
                                       u3820 2396                                         u4460 32BA  
                                       u4700 26AC                                         u4380 2806  
                                       u4620 2190                                         u4540 1F90  
                                       _PMD0 000EE1                                         u3661 17D2  
                                       u3581 16B8                                         u3741 2B3C  
                                       u3821 2392                                         u4461 32B6  
                                       u4701 26A8                                         u4381 2802  
                                       u4621 218C                                         _PMD1 000EE2  
                                       u3670 1810                                         u3590 16DC  
                                       u3830 23D0                                         u3750 2250  
                                       u4470 32E8                                         u4710 26BE  
                                       u4390 2F84                                         u4630 21AA  
                                       u4550 1FA6                                         _PMD2 000EE3  
                                       u3671 180C                                         u3591 16D8  
                                       u3575 1658                                         u3831 23CC  
                                       u3751 224C                                         u4471 32E4  
                                       u4711 26BA                                         u4391 2F80  
                                       u4631 21A6                                         u4551 1FA2  
                                       _PMD3 000EE4                                         u2688 3046  
                                       u3680 2A72                                         u3840 23DE  
                                       u3760 225E                                         u4480 2C5C  
                                       u4640 21B8                                         u4560 1FD6  
                                       u4720 1C5A                                         u4800 317E  
                                       _PMD4 000EE5                                         u2689 3074  
                                       u2881 3576                                         u3681 2A6E  
                                       u3841 23DA                                         u3761 225A  
                                       u4481 2C58                                         u4641 21B4  
                                       u4561 1FD2                                         u4721 1C56  
                                       u4801 317A                                         _PMD5 000EE6  
                                       u2698 308E                                         u3690 2AA6  
                                       u3770 22BA                                         u4490 2C82  
                                       u4650 21CA                                         u4570 1FF2  
                                       u4730 1CA6                                         u2699 30A2  
                                       u3771 22B6                                         u4491 2C7E  
                                       u4651 21C6                                         u4571 1FEE  
                                       u4731 1CA2                                         u4811 185A  
                                       u3780 2310                                         u4660 21D8  
                                       u4580 2020                                         u4740 1CEA  
                                       u4900 1954                                         u4820 187E  
                                       u3781 230C                                         u4661 21D4  
                                       u4581 201C                                         u4741 1CE6  
                                       u4901 1950                                         u4821 187A  
                                       u3790 235A                                         u4670 21F0  
                                       u4590 202E                                         u4750 1D68  
                                       u4910 196C                                         u4830 1890  
                                       u3695 2A9C                                         u3791 2356  
                                       u4671 21EC                                         u4591 202A  
                                       u4751 1D64                                         u4911 1968  
                                       u4831 188C                                         u4680 25B2  
                                       u4760 1D90                                         u4920 1980  
                                       u4840 18B4                                         u4681 25AE  
                                       u4761 1D8C                                         u4921 197C  
                                       u4841 18B0                                         u4690 25EC  
                                       u4770 1E08                                         u4850 18CA  
                                       u4691 25E8                                         u4771 1E04  
                                       u4931 19EE                                         u4851 18C6  
                                       u4780 1E30                                         u4860 18EE  
                                       u4781 1E2C                                         u4941 1A0C  
                                       u4861 18EA                                         u4790 1EDA  
                                       u4950 1A2A                                         u4870 1904  
                                       u4791 1ED6                                         u4951 1A26  
                                       u4871 1900                                         u4960 1A3E  
                                       u4880 191A                                         u4961 1A3A  
                                       u4881 1916                                         u4970 1A52  
                                       u4890 1930                                         u4971 1A4E  
                                       u4891 192C                                         u4980 1A92  
                                       u4981 1A8E                                         u4990 1AD2  
                                       u4991 1ACE                                         _TMR2 000FBB  
                                       _WPUA 000F10                                         _WPUB 000F18  
                                       _WPUC 000F20                                         _WPUD 000F25  
                                       _WPUE 000F2D                             __end_of_ADCC_ISR 3702  
                                       abs@a 0017                                         _dbuf 0100  
                                       _atoi 257A                                         _ctoa 2C4A  
                                       _main 182E                                         _dtoa 1F5E  
                                       _prec 00A8                                         _sine 0200  
                                       _nout 00A6                                         pad@i 001C  
                                       pad@p 0019                                         fsr1h 000FE2  
                                       fsr2h 000FDA                                         indf2 000FDF  
                                       fsr1l 000FE1                                         pad@w 001E  
                                       fsr2l 000FD9                                         btemp 0056  
                                       prodh 000FF4                                         prodl 000FF3  
                                       start 0100                                ?_LCD_WriteCMD 0019  
                                LCD_Init@lcd 0021                   ??_TMR1_SetInterruptHandler 0008  
                               ___param_bank 000000                                        ??_abs 0019  
                                      ??_pad 001B                      __end_of_TMR0_Initialize 3518  
                           __end_of_LCD_Init 2F76                               ?_LCD_SendBytes 000D  
             ??_TMR0_DefaultInterruptHandler 0001                               ??_LCD_MakeData 0009  
              __end_of_OSCILLATOR_Initialize 3820                                ___fltol@sign1 0044  
                            __end_of___aodiv 257A                                        _ADACQ 000F5C  
                                      _ADCAP 000F5D                                        _ADACT 000F56  
                                      ?_atoi 000C                                        ?_ctoa 000E  
                            __end_of___fladd 1404                                        ?_main 0001  
                                      ?_dtoa 0020                                        _ADCLK 000F57  
                            __end_of___aomod 2848                                        _ADCNT 000F67  
                                      _ADPCH 000F5F                                        _ADREF 000F58  
                                      _ADPRE 000F5E                                        _ADRPT 000F66  
                            __end_of___flmul 182E                              __end_of___fltol 2B62  
                                      _T1CLK 000FD2                                        _T1CON 000FCF  
                                      _T2CON 000FBD                                        _T2HLT 000FBE  
                                      _T2TMR 000FBB                                        _T2RST 000FC0  
                                      i2l132 36CA                                        i2l212 34DA  
                                      i2l142 3694                                        i2l152 365E  
                                      i2l128 3344                                        i2l138 38D0  
                                      i2l162 3628                                        i2l218 38C8  
                                      i2l148 38CE                                        i2l158 38CC  
                                      i2l168 38CA                                        i2l620 345C  
                                      i2l701 35F2                                        i2l381 00A0  
                                      i2l382 00F4                                        i2l607 3758  
                                      i2l383 00CA                                        i2l376 003E  
                                      i2l562 38D2                                        i2l626 38C6  
                                      i2l378 0068                                        i2l707 38C4  
                                      i2l556 3700                                        i2l388 00F4  
                                      _OSCEN 000EDC                                 vfpfcnvrt@fmt 0046  
                                      _TMR0H 000FD4                                        _TMR1H 000FCE  
                                      _TMR0L 000FD3                                        _TMR1L 000FCD  
                                      _PORTB 000F8E                                        _PORTC 000F8F  
                                      _TRISA 000F88                                        _TRISB 000F89  
                                      _TRISC 000F8A                                        _TRISD 000F8B  
                                      _TRISE 000F8C                              __end_of_delayUS 33D8  
                  ?_TMR0_SetInterruptHandler 0005                                        _HumRH 00AA  
                                      _TempC 00AC                             __end_of_TMR0_ISR 34DC  
                           __end_of_TMR1_ISR 345E                             __end_of_TMR2_ISR 35F4  
                    __end_of_PIN_MANAGER_IOC 3346                                        _flags 0052  
                      ?_ADCC_StartConversion 0001                                        _fputc 2D1E  
                                      _fputs 33D8                              __end_of_isdigit 3550  
                                      atoi@n 0014                                        pad@fp 0015  
                                      atoi@s 000C                                        _width 0050  
                                      ctoa@c 0010                                        _putch 38C2  
                                      ctoa@l 0012                                        ctoa@w 0014  
                                      dtoa@d 0022                                        dtoa@i 0042  
                                      dtoa@n 003A                                        dtoa@p 0034  
                                      dtoa@s 0038                                        dtoa@w 0036  
                            __end_of_isspace 32F4                      __end_of_TMR1_Initialize 3390  
                                      pclath 000FFA                                        pclatu 000FFB  
                                      tablat 000FF5                                        plusw0 000FEB  
                                      plusw2 000FDB                                        ttemp5 0057  
                                      ttemp6 005A                                        ttemp7 005E  
                                      status 000FD8                                        wtemp8 0057  
                            __end_of_sprintf 32A2                              _TMR1_WriteTimer 3732  
                             ??_LCD_WriteCMD 0021                              __initialization 30B8  
                               __end_of_atoi 26E4                                 __end_of_ctoa 2D1E  
                               __end_of_main 1C32                                 __end_of_dtoa 223E  
                         LCD_MakeData@buffer 0005                      __end_of_TMR2_Initialize 3732  
                ?_INTERRUPT_InterruptManager 0001                                       ??_atoi 000E  
                                     ??_ctoa 0011                     _TMR2_SetInterruptHandler 3834  
                                     ??_main 0050                                       ??_dtoa 002A  
                              __activetblptr 000003                      _IOCCF2_InterruptHandler 00DF  
                                     _ADACCH 000F71                                       _ADACCL 000F70  
                                     _ADCON0 000F60                                       _ADCON1 000F59  
                                     _ADCON2 000F5A                                       _ADCON3 000F5B  
                                     _ADERRH 000F6F                                       _ADERRL 000F6E  
               ??_IOCCF1_SetInterruptHandler 0008                                       ?_fputc 0005  
                                     _ADLTHH 000F6B                                       _ADLTHL 000F6A  
                                     ?_fputs 000E                                       _ADRESH 000F64  
                                     _ADRESL 000F63                                       _ADSTAT 000F65  
                                     _ADUTHH 000F6D                                       _ADUTHL 000F6C  
                                     _ANSELA 000F11                                       ?_putch 0001  
                                     _ANSELB 000F19                                       _ANSELC 000F21  
                                     _ANSELD 000F26                                       _ANSELE 000F2E  
                                     _T0CON0 000FD5                                       _T0CON1 000FD6  
                                     _T1GATE 000FD1                                       _T1GCON 000FD0  
                                     _RB5PPS 000EF4                      TMR1_WriteTimer@timerVal 0001  
                                     _ODCONA 000F0F                                       _ODCONB 000F17  
                                     _ODCONC 000F1F                                       _ODCOND 000F24  
                                     _ODCONE 000F2C                                       i2l4220 0012  
                                     i2l4230 005A                                       i2l4222 0022  
                                     i2l3600 3690                                       i2l4240 0096  
                                     i2l4232 005E                                       i2l4224 0030  
                                     i2l3602 362A                                       i2l3610 360A  
                                     i2l4250 00E6                                       i2l4242 00AE  
                                     i2l4234 0076                                       i2l4226 0034  
                                     i2l3604 3640                                       i2l3612 3624  
                                     i2l3700 3304                                       i2l4252 00EA  
                                     i2l4244 00BC                                       i2l4236 0084  
                                     i2l4228 004C                                       i2l3606 365A  
                                     i2l3710 3330                                       i2l3702 3308  
                                     i2l4246 00C0                                       i2l4238 0092  
                                     i2l3608 35F4                                       i2l3712 3340  
                                     i2l3704 3318                                       i2l3720 34AA  
                                     i2l4248 00D8                                       i2l3706 331C  
                                     i2l3722 34C0                                       i2l3714 349E  
                                     i2l3708 332C                                       i2l3716 34A2  
                                     i2l3742 36CC                                       i2l3590 3696  
                                     i2l3718 34A6                                       i2l3670 3732  
                                     i2l3750 35C2                                       i2l3744 36D0  
                                     i2l3592 36AC                                       i2l3672 3740  
                                     i2l3680 3750                                       i2l3760 3442  
                                     i2l3752 35D8                                       _INLVLA 000F0D  
                                     i2l3746 36E6                                       i2l3594 36C6  
                                     i2l3682 3754                                       i2l3674 3742  
                                     i2l3754 341C                                       _INLVLB 000F15  
                                     _INLVLC 000F1D                                       i2l3596 3660  
                                     i2l3676 3746                                       i2l3756 3420  
                                     i2l3748 35BE                                       _INLVLD 000F22  
                                     _INLVLE 000F2A                                       i2l3598 3676  
                                     i2l3678 374A                                       i2l3758 342C  
                                     i2l3698 32F4                                       _LCDout 0120  
                                     _PBFlag 00B2                                       _OSCFRQ 000EDE  
                                     _VDDinv 00EA                             __end_of___xxtofl 23F2  
                 ??_ADCC_GetConversionResult 0007                                       _Degree 00F3  
                                 _TempSelect 00F5         __end_of_TMR1_DefaultInterruptHandler 38C8  
               _TMR1_DefaultInterruptHandler 38C6                                 vfprintf@cfmt 004E  
                            ??_LCD_SendBytes 0016                                    ??___aodiv 0015  
                                  ??___fladd 0034                                    ??___aomod 0015  
                                     ___wmul 375A                                    ??___flmul 001B  
                                  ??___fltol 0040                             ?_TMR0_Initialize 0001  
                                     clear_0 30FE                                       clear_1 310A  
                                  ??_delayUS 0009                                       isa$std 000001  
                                     pad@buf 0017                                       ctoa@fp 000E  
                                     dtoa@fp 0020                                    ?_ADCC_ISR 0001  
                                     _strlen 3588                              _ADCC_Initialize 3188  
                                     fputc@c 0005                               _PMD_Initialize 37EC  
                                     fputs@c 0012                                       fputs@i 0013  
                                     fputs@s 000E                                    ??_isdigit 0007  
                               __mediumconst 0000                                    ??_isspace 0007  
                                     tblptrh 000FF7                                       tblptrl 000FF6  
                                     tblptru 000FF8                       ??_ADCC_StartConversion 0005  
                                     putch@c 0001                             __end_of_vfprintf 3188  
   TMR2_SetInterruptHandler@InterruptHandler 0005     TMR1_SetInterruptHandler@InterruptHandler 0005  
ADCC_SetADIInterruptHandler@InterruptHandler 0005     TMR0_SetInterruptHandler@InterruptHandler 0005  
 IOCCF3_SetInterruptHandler@InterruptHandler 0005   IOCCF2_SetInterruptHandler@InterruptHandler 0005  
 IOCCF1_SetInterruptHandler@InterruptHandler 0005   IOCCF0_SetInterruptHandler@InterruptHandler 0005  
                           ?_PIN_MANAGER_IOC 0001                                    ??_sprintf 0050  
                    __end_of_TMR1_WriteTimer 375A                             __end_of_writeLCD 37CC  
                               ??_IOCCF0_ISR 0001                                 ??_IOCCF1_ISR 0001  
                               ??_IOCCF2_ISR 0001                                 ??_IOCCF3_ISR 0001  
                           ?_TMR1_Initialize 0001                                 ___xxtofl@arg 000F  
                               ___xxtofl@exp 000E                            _SYSTEM_Initialize 3780  
                               ___xxtofl@val 0005                                   __accesstop 0060  
                    __end_of__initialization 3118                                    ?_LCD_Init 0021  
                       __end_of_LCD_MakeData 2952                           ?_SYSTEM_Initialize 0001  
                              ___rparam_used 000001                                   ___fltol@f1 003C  
                             __pcstackCOMRAM 0001                                 __pidataBANK0 38A4  
                               __pidataBANK2 2DE8                          ??_SYSTEM_Initialize 000A  
                                  ?_TMR0_ISR 0001                                    ?_TMR1_ISR 0001  
                                  ?_TMR2_ISR 0001              fp__TMR1_DefaultInterruptHandler 0000  
              ?_TMR1_DefaultInterruptHandler 0001                              _LCD_WriteString 31EE  
                              __end_of_fputc 2DE8                                __end_of_fputs 341C  
                          ??_SPI1_Initialize 0005                                __end_of_putch 38C4  
                           ?_TMR2_Initialize 0001                       __end_of_PMD_Initialize 3808  
                         __end_of_IOCCF0_ISR 36CC                           __end_of_IOCCF1_ISR 3696  
                                 ??_ADCC_ISR 0001                           __end_of_IOCCF2_ISR 3660  
                         __end_of_IOCCF3_ISR 362A                           _spi1_configuration 0F01  
                       __end_of_LCD_WriteCMD 3588                  ?_IOCCF0_SetInterruptHandler 0005  
                ADCC_StartConversion@channel 0005                  ?_IOCCF3_SetInterruptHandler 0005  
                                    ??_fputc 0009                    __end_of_SYSTEM_Initialize 37A6  
                                    ??_fputs 0012                                      ??_putch 0005  
                                 __pbssBANK0 009A                                   __pbssBANK1 0100  
                                 ??_LCD_Init 0027                                   __pnvCOMRAM 0054  
     __end_of_IOCCF2_DefaultInterruptHandler 38CE               _IOCCF2_DefaultInterruptHandler 38CC  
                    _IOCCF3_InterruptHandler 00DC             __end_of_TMR0_SetInterruptHandler 385E  
                                    ?___wmul 0005                                   ??_TMR0_ISR 0001  
                                 ??_TMR1_ISR 0003                                   ??_TMR2_ISR 0001  
                    __end_of_ADCC_Initialize 31EE                                      _ADFLTRH 000F73  
                                    _ADFLTRL 000F72                                      _ADCFlag 00B1  
                      LCD_WriteString@buffer 00BC                                      _ADPREVH 000F62  
                                    _ADPREVL 000F61            fp__IOCCF0_DefaultInterruptHandler 0000  
           ??_IOCCF0_DefaultInterruptHandler 0001              ?_IOCCF0_DefaultInterruptHandler 0001  
                                    _ADSTPTH 000F69                                      _ADSTPTL 000F68  
                            ?_PMD_Initialize 0001                                      ?_strlen 0005  
                                  ?___xxtofl 0005                            LCD_MakeCMD@buffer 0005  
                                    _OSCCON1 000ED8                                      _OSCCON3 000EDA  
         __end_of_IOCCF1_SetInterruptHandler 3888                   _IOCCF1_SetInterruptHandler 387A  
                                    _OSCTUNE 000EDD                                      _SSP1ADD 000F93  
                                    _SLRCONA 000F0E                                      _SLRCONB 000F16  
                                    _SLRCONC 000F1E                                      _SLRCOND 000F23  
                                    _SLRCONE 000F2B                                      _SSP1BUF 000F92  
          fp__IOCCF3_DefaultInterruptHandler 0000             ??_IOCCF3_DefaultInterruptHandler 0001  
            ?_IOCCF3_DefaultInterruptHandler 0001                             ?_TMR1_WriteTimer 0001  
                        LCD_SendBytes@buffer 000D                                      _HumChar 00A0  
                                    _HumData 00CC                      __end_of_LCD_WriteString 3250  
                                    _Percent 00F2                                      __Hparam 0000  
                                    __Lparam 0000                   ??_TMR2_SetInterruptHandler 0008  
                                    ___aodiv 23F2                                      ___fladd 0F44  
                                    ___aomod 26E4                                      ___flmul 1404  
                                    ___fltol 2A5C                                    ?_vfprintf 0069  
                               __psmallconst 0F00                                      __pcinit 30B8  
                                    _delayUS 3390                                      __ramtop 0F00  
                                  ?_writeLCD 0001                                      __ptext0 182E  
                                    __ptext1 3250                                      __ptext2 3122  
                                    __ptext3 1C32                                      __ptext4 1F5E  
                                    __ptext5 2F76                                      __ptext6 3588  
                                    __ptext7 33D8                                      __ptext8 345E  
                                    __ptext9 26E4               ??_TMR1_DefaultInterruptHandler 0001  
                           LCD_SendBytes@lcd 000F                             LCD_SendBytes@len 0015  
                                  _T1CONbits 000FCF                        _OSCILLATOR_Initialize 3808  
                                  _T2CONbits 000FBD                                      _isdigit 3518  
                                 ??___xxtofl 0009                     ??_PIN_MANAGER_Initialize 0008  
                                    _isspace 32A2                    ?_TMR1_SetInterruptHandler 0005  
                                  _T2HLTbits 000FBE                                    _IOCCFbits 000F1A  
                                  _IOCCNbits 000F1B                                    _IOCCPbits 000F1C  
                                    atoi@neg 0012                                      main@lcd 0094  
                                    _sprintf 3250                         end_of_initialization 3118  
                                  _T2RSTbits 000FC0                                      fputc@fp 0007  
                                    fputs@fp 0010                            __end_of_vfpfcnvrt 1F5E  
                                    postdec1 000FE5                                      postdec2 000FDD  
                                    postinc0 000FEE                                      postinc1 000FE6  
                                    postinc2 000FDE                             ?_ADCC_Initialize 0001  
                                 ??_vfprintf 004E                                      strlen@a 0007  
                                    strlen@s 0005                                   ??_writeLCD 0005  
                   _TMR0_SetInterruptHandler 3850                                    _PORTCbits 000F8F  
                               _LCD_MakeData 2848                                   fp__delayUS 0000  
                                ___fladd@grs 003B          __end_of_ADCC_SetADIInterruptHandler 38A4  
                _ADCC_SetADIInterruptHandler 3896                                ___xxtofl@sign 000D  
                                  _TRISBbits 000F89                 ??_IOCCF2_SetInterruptHandler 0008  
                                ___flmul@grs 0020                ??_ADCC_SetADIInterruptHandler 0008  
                            _SPI1_Initialize 37CC                             ?_LCD_WriteString 0019  
                               _LCD_WriteCMD 3550                                _TempLimitChar 009D  
                       _timer0ReloadVal16bit 0054                                ??_LCD_MakeCMD 0009  
               __end_of_INTERRUPT_Initialize 38C2                                 _HumLimitChar 009A  
       __end_of_TMR2_DefaultInterruptHandler 38C6                 _TMR2_DefaultInterruptHandler 38C4  
             ??_ADCC_DefaultInterruptHandler 0001                                  vfpfcnvrt@ap 0048  
                      __end_of_LCD_SendBytes 30B8                                  vfpfcnvrt@fp 0044  
                                vfpfcnvrt@ll 0060                               __end_of___wmul 3780  
                     ?_OSCILLATOR_Initialize 0001                    ?_ADCC_GetConversionResult 0005  
                             __end_of_strlen 35BE                          start_initialization 30B8  
                                __end_of_abs 349E                                  __end_of_pad 3038  
                                  _HumSelect 00F4                              LCD_WriteCMD@cmd 0019  
                            LCD_WriteCMD@lcd 001B                                    _TempOrHum 00AE  
                                  _TempLimit 00F0                                  vfprintf@fmt 006B  
                           ??_PMD_Initialize 0005                           LCD_WriteCMD@buffer 00C4  
                             LCD_SendBytes@i 0018                                     ??___wmul 0009  
                                __pdataBANK0 00EA                                  __pdataBANK2 0200  
            fp__TMR2_DefaultInterruptHandler 0000                ?_TMR2_DefaultInterruptHandler 0001  
                                   ??_strlen 0007                                    ___fladd@a 0030  
                                  ___fladd@b 002C                          __end_of_LCD_MakeCMD 2A5C  
                        LCD_WriteData@buffer 00B4                                    ___flmul@a 0017  
                                  ___flmul@b 0013                                  __pbssCOMRAM 0050  
                              __pcstackBANK0 0060                             ___aodiv@dividend 0005  
                ?_IOCCF1_SetInterruptHandler 0005                      __end_of_SPI1_Initialize 37EC  
     __end_of_IOCCF0_DefaultInterruptHandler 38D2               _IOCCF0_DefaultInterruptHandler 38D0  
                           writeLCD@bitfield 0007                        _TMR0_InterruptHandler 00D9  
                                  __pnvBANK0 00D0                                    _main$2800 0090  
                     _PIN_MANAGER_Initialize 2B62                                    _dtoa$2331 0032  
     __end_of_IOCCF3_DefaultInterruptHandler 38CC               _IOCCF3_DefaultInterruptHandler 38CA  
                                  __pintcode 0008             __end_of_TMR1_SetInterruptHandler 3850  
                                   ?___aodiv 0005                                     ?___fladd 002C  
                                   ?___aomod 0005                             ___aodiv@quotient 0017  
                                   ?___flmul 0013                                     ?___fltol 003C  
                                   ?_delayUS 0005                 ??_INTERRUPT_InterruptManager 0003  
                                   _ADCC_ISR 36CC            fp__IOCCF1_DefaultInterruptHandler 0000  
           ??_IOCCF1_DefaultInterruptHandler 0001              ?_IOCCF1_DefaultInterruptHandler 0001  
                                __smallconst 0F00                                     ?_isdigit 0005  
                                   ?_isspace 0005           __end_of_IOCCF2_SetInterruptHandler 387A  
                 _IOCCF2_SetInterruptHandler 386C                                     _T0CKIPPS 000EA4  
                                   ?_sprintf 006F                                     _T2CLKCON 000FBF  
                       _INTERRUPT_Initialize 38BE                            ??_TMR0_Initialize 0008  
                                   _LCD_Init 2EB0                               ___wmul@product 0009  
                                   _PIE0bits 000EC2                                     _PIE1bits 000EC3  
                                   _PIE4bits 000EC6                                     i2u300_40 3442  
                                   i2u300_41 343E                                     i2u301_48 3448  
                                   i2u301_49 345C                   ??_TMR0_SetInterruptHandler 0008  
                                   _PIR0bits 000ECA                                     i2u280_48 36B2  
                                   i2u281_40 3676                                     i2u280_49 36C6  
                                   i2u281_41 3672                                     _PIR1bits 000ECB  
                                   i2u290_40 3304                                     i2u290_41 3300  
                                   i2u282_48 367C                                     i2u283_40 3640  
                                   i2u291_40 3318                                     i2u282_49 3690  
                                   i2u283_41 363C                                     i2u291_41 3314  
                                   i2u292_40 332C                                     i2u292_41 3328  
                                   i2u284_48 3646                                     i2u285_40 360A  
                                   i2u293_40 3340                                     i2u284_49 365A  
                                   i2u285_41 3606                                     i2u293_41 333C  
                                   _PIR3bits 000ECD                                     i2u294_40 34C0  
                                   i2u390_40 0084                                     i2u294_41 34BC  
                                   i2u390_41 0080                                     i2u279_40 36AC  
                                   i2u286_48 3610                                     i2u287_40 3740  
                                   i2u391_40 0092                                     i2u279_41 36A8  
                                   i2u286_49 3624                                     i2u287_41 373C  
                                   i2u391_41 008E                                     _PIR4bits 000ECE  
                                   i2u296_40 36E6                                     i2u295_48 34C6  
                                   i2u392_40 00AE                                     i2u296_41 36E2  
                                   i2u295_49 34DA                                     i2u392_41 00AA  
                                   i2u393_40 00BC                                     i2u385_40 0022  
                                   i2u393_41 00B8                                     i2u385_41 001E  
                                   i2u297_48 36EC                                     i2u298_40 35D8  
                                   i2u394_40 00D8                                     i2u386_40 0030  
                                   i2u297_49 3700                                     i2u298_41 35D4  
                                   i2u394_41 00D4                                     i2u386_41 002C  
                                   i2u395_40 00E6                                     i2u387_40 004C  
                                   i2u395_41 00E2                                     i2u387_41 0048  
                                   i2u299_48 35DE                                     i2u388_40 005A  
                                   i2u299_49 35F2                                     i2u388_41 0056  
                                   i2u389_40 0076                                     i2u389_41 0072  
                                   _SSP1CON1 000F96                                     _SSP1CON2 000F97  
                                   _TMR0_ISR 349E                                     _TMR1_ISR 341C  
                                   _TMR2_ISR 35BE                                     _SSP1STAT 000F95  
                                _LCD_MakeCMD 2952                            ??_PIN_MANAGER_IOC 0001  
                                  _vfpfcnvrt 1C32                            ??_TMR1_Initialize 0008  
                                 _ADCON0bits 000F60                                     _CalcFlag 00F6  
                                 _ADCON1bits 000F59                                   _ADCON2bits 000F5A  
                                 _ADCON3bits 000F5B                            ___wmul@multiplier 0005  
             ??_TMR2_DefaultInterruptHandler 0001                    ?_TMR2_SetInterruptHandler 0005  
                               _isspace$2381 000B                                   vfpfcnvrt@c 0068  
                           ?_SPI1_Initialize 0001                                    copy_data0 30CC  
                                  copy_data1 30EC                        ?_INTERRUPT_Initialize 0001  
                                   _HumLimit 00EE                                     _Tim0Flag 00B3  
                                   _Tim1Flag 00AF                                     _Tim2Flag 00B0  
                          ??_TMR2_Initialize 0008                             LCD_MakeData@data 0007  
                                 _ADSTATbits 000F65                                     __Hrparam 0000  
                                   _TempChar 00A3                                     _TempData 00CE  
           __end_of_ADCC_GetConversionResult 3834                                   vfprintf@ap 006D  
                                   __Lrparam 0000                                   vfprintf@fp 0069  
                    ??_OSCILLATOR_Initialize 0005                                   ?_vfpfcnvrt 0044  
                            ___aodiv@divisor 000D                     _TMR1_SetInterruptHandler 3842  
                            ___aodiv@counter 0015                        _TMR1_InterruptHandler 00D3  
                                 sprintf@fmt 0071                      _IOCCF0_InterruptHandler 00E5  
                                   ___xxtofl 223E                                   _T0CON0bits 000FD5  
                                   __ptext10 23F2                                     __ptext11 2C4A  
                                   __ptext20 1404                                     __ptext12 2D1E  
                                   __ptext21 0F44                                     __ptext13 38C2  
                                 _T1GCONbits 000FD0                                     __ptext30 37EC  
                                   __ptext22 3780                                     __ptext14 257A  
                                   __ptext31 2B62                                     __ptext23 3702  
                                   __ptext15 32A2                                     __ptext40 31EE  
                                   __ptext32 385E                                     __ptext24 3834  
                                   __ptext16 3518                                     __ptext41 2848  
                                   __ptext33 386C                                     __ptext25 3346  
                                   __ptext17 375A                                     __ptext42 2EB0  
                                   __ptext34 387A                                     __ptext26 3842  
                                   __ptext18 223E                                     __ptext51 35BE  
                                   __ptext43 3550                                     __ptext35 3888  
                                   __ptext27 34DC                                     __ptext19 2A5C  
                                   __ptext60 38CA                                     __ptext52 38C4  
                                   __ptext44 3038                                     __ptext36 3808  
                                   __ptext28 3850                                     __ptext61 362A  
                                   __ptext53 341C                                     __ptext45 37A6  
                                   __ptext37 38BE                                     __ptext29 37CC  
                                   __ptext62 38CC                                     __ptext54 3732  
                                   __ptext46 3390                                     __ptext38 3188  
                                   __ptext63 3660                                     __ptext55 38C6  
                                   __ptext47 2952                                     __ptext39 3896  
                                   __ptext64 38CE                                     __ptext56 349E  
                                   __ptext48 38B2                                     __ptext65 3696  
                                   __ptext57 38C8                                     __ptext49 3820  
                                   __ptext66 38D0                                     __ptext58 32F4  
                                   __ptext67 36CC                                     __ptext59 35F4  
                                   __ptext68 38D2                                     __ptext69 0000  
                               _SSP1CON1bits 000F96                 ??_IOCCF0_SetInterruptHandler 0008  
                            LCD_MakeCMD@data 0007                 ??_IOCCF3_SetInterruptHandler 0008  
                                 _IOCCF0_ISR 3696                                   _IOCCF1_ISR 3660  
                                 _IOCCF2_ISR 362A                                   _IOCCF3_ISR 35F4  
                                delayUS@usec 0005                                     delayUS@i 0009  
       __end_of_TMR0_DefaultInterruptHandler 38CA                 _TMR0_DefaultInterruptHandler 38C8  
                  _ADCC_ADI_InterruptHandler 00D6                                     isa$xinst 000000  
               __end_of_ADCC_StartConversion 38BE                                     int$flags 0056  
                                   _vfprintf 3122           __end_of_INTERRUPT_InterruptManager 0100  
                 _INTERRUPT_InterruptManager 0008                            ??_TMR1_WriteTimer 0003  
                                   _writeLCD 37A6                             ___aomod@dividend 0005  
                                 _INTCONbits 000FF2                                     isdigit@c 0005  
                     ??_INTERRUPT_Initialize 0005         __end_of_ADCC_DefaultInterruptHandler 38D4  
               _ADCC_DefaultInterruptHandler 38D2                                     intlevel2 0000  
                                  sprintf@ap 0083                                     isspace@c 0005  
                    ?_PIN_MANAGER_Initialize 0001              fp__TMR0_DefaultInterruptHandler 0000  
              ?_TMR0_DefaultInterruptHandler 0001                     _ADCC_GetConversionResult 3820  
                            ___aomod@divisor 000D                                  ??_vfpfcnvrt 004A  
                            ___aomod@counter 0015                                     sprintf@f 0085  
                                   sprintf@s 006F                                   _SSP1DATPPS 000EB8  
                                 _SSP1CLKPPS 000EB7                              _TMR0_Initialize 34DC  
                ?_IOCCF2_SetInterruptHandler 0005                                ___fladd@signs 0038  
                               ___aodiv@sign 0016                                  ?_IOCCF0_ISR 0001  
                                ?_IOCCF1_ISR 0001                                  ?_IOCCF2_ISR 0001  
                                ?_IOCCF3_ISR 0001               __end_of_PIN_MANAGER_Initialize 2C4A  
                          ??_ADCC_Initialize 0008                                 ___fladd@aexp 0039  
                               ___fladd@bexp 003A              fp__ADCC_DefaultInterruptHandler 0000  
     __end_of_IOCCF1_DefaultInterruptHandler 38D0                ?_ADCC_DefaultInterruptHandler 0001  
             _IOCCF1_DefaultInterruptHandler 38CE                              _PIN_MANAGER_IOC 32F4  
                      _TMR2_InterruptHandler 00D0                                 ___aomod@sign 0016  
                    _IOCCF1_InterruptHandler 00E2                              _TMR1_Initialize 3346  
                 __end_of_spi1_configuration 0F05  
